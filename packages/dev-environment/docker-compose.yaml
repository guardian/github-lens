version: '3.9'
services:
  postgres:
    image: postgres:14.6
    ports:
      - '${DATABASE_PORT}:${DATABASE_PORT}'
    environment:
      POSTGRES_DB: ${DATABASE_HOSTNAME}
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
  cloudquery:
    image: ghcr.io/cloudquery/cloudquery:${CQ_CLI}
    platform: linux/amd64
    depends_on:
      - postgres
    volumes:
      - ~/.aws/credentials:/.aws/credentials
      - ./dev-config/cloudquery.yaml:/dev-config.yaml
      - ~/.gu/service_catalogue/app-id:/app-id
      - ~/.gu/service_catalogue/installation-id:/installation-id
      - ~/.gu/service_catalogue/private-key.pem:/private-key.pem
    environment:
      AWS_SHARED_CREDENTIALS_FILE: '/.aws/credentials'
      CQ_POSTGRES_DESTINATION: ${CQ_POSTGRES_DESTINATION}
      CQ_AWS: ${CQ_AWS}
      CQ_GITHUB: ${CQ_GITHUB}
      CQ_SNYK: ${CQ_SNYK}
      GITHUB_ACCESS_TOKEN: ${GITHUB_ACCESS_TOKEN}
      SNYK_TOKEN: ${SNYK_TOKEN}
      GALAXIES_BUCKET: ${GALAXIES_BUCKET}
      CLOUDQUERY_API_KEY: ${CLOUDQUERY_API_KEY}
    command: sync /dev-config.yaml --log-console --log-level info
  grafana:
    image: grafana/grafana-oss:10.3.1
    depends_on:
      - postgres
      - steampipe
    ports:
      - '3000:3000'
    volumes:
      - ./dev-config/grafana.ini:/etc/grafana/grafana.ini
      - ./dev-config/grafana-datasource.yaml:/etc/grafana/provisioning/datasources/cloudquery.yaml
  steampipe:
    build:
      context: steampipe
      dockerfile: Dockerfile
      args:
        SP_GITHUB: ${SP_GITHUB}
        SP_AWS: ${SP_AWS}
    ports:
      - '9193:9193'
    volumes:
      - ~/.aws/credentials:/.aws/credentials
    environment:
      STAGE: ${STAGE}
      STEAMPIPE_DATABASE_PASSWORD: steampipe
      GITHUB_TOKEN: ${GITHUB_ACCESS_TOKEN}
      AWS_SHARED_CREDENTIALS_FILE: '/.aws/credentials'
    entrypoint: "/bin/bash -c"
    command: [ "generate-aws-plugin-config; steampipe service start --foreground" ]
