#!/usr/bin/env bash

set -e

DIR=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )
ROOT_DIR=$DIR/../../..

MAIN_ENV_FILE=$ROOT_DIR/.env
LOCAL_ENV_FILE=$HOME/.gu/service_catalogue/.env.local
clear='\033[0m'
cyan='\033[0;36m'

step() {
  ((STEP_COUNT++))
  echo -e "\n${cyan}Step ${STEP_COUNT}${clear}: $1"
}

check_aws_credentials() {
  step "Checking AWS credentials"

  STATUS=$(aws sts get-caller-identity --profile deployTools 2>&1 || true)
  if [[ ${STATUS} =~ (ExpiredToken) ]]; then
    echo "Credentials for the deployTools profile have expired. Please fetch new credentials, and run this script again."
    exit 1
  elif [[ ${STATUS} =~ ("could not be found") ]]; then
    echo "Credentials for the deployTools profile are missing. Please fetch some, and run this script again."
    exit 1
  else
    echo "AWS credentials are valid"
  fi
}

start_containers() {
  step "Launching Docker containers"

  if (docker info) 2>&1 >/dev/null; then
    docker-compose -f "${DIR}/../docker-compose.yaml" --env-file "$MAIN_ENV_FILE" --env-file "$LOCAL_ENV_FILE" up -d --build
  else
    echo "Docker is not running. Please start Docker."
    exit 1
  fi
}

check_vpn_connection() {
  step "Checking VPN connection"

  if ifconfig | grep -q '10.249.'; then
    echo "You're connected to the VPN"
  else
    echo "You're not connected to VPN. Please connect and retry."
    exit 1
  fi
}

main() {
  check_aws_credentials
  check_vpn_connection
  start_containers
}

main
