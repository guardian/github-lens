// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`The CloudQuery stack matches the snapshot 1`] = `
{
  "Metadata": {
    "gu:cdk:constructs": [
      "GuSubnetListParameter",
      "GuVpcParameter",
      "GuSecurityGroup",
      "GuStringParameter",
      "GuLoggingStreamNameParameter",
    ],
    "gu:cdk:version": "TEST",
  },
  "Parameters": {
    "ActionsStaticSiteBucketArnParam": {
      "Default": "/INFRA/deploy/cloudquery/actions-static-site-bucket-arn",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "LoggingStreamName": {
      "Default": "/account/services/logging.stream.name",
      "Description": "SSM parameter containing the Name (not ARN) on the kinesis stream",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "PrivateSubnets": {
      "Default": "/account/vpc/primary/subnets/private",
      "Description": "A list of private subnets",
      "Type": "AWS::SSM::Parameter::Value<List<AWS::EC2::Subnet::Id>>",
    },
    "VpcId": {
      "Default": "/account/vpc/primary/id",
      "Description": "Virtual Private Cloud to run EC2 instances within. Should NOT be the account default VPC.",
      "Type": "AWS::SSM::Parameter::Value<AWS::EC2::VPC::Id>",
    },
  },
  "Resources": {
    "CloudquerySourceAllScheduledEventRuleAE930F8B": {
      "Properties": {
        "ScheduleExpression": "rate(1 day)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "cloudqueryCluster5370C11B",
                "Arn",
              ],
            },
            "EcsParameters": {
              "LaunchType": "FARGATE",
              "NetworkConfiguration": {
                "AwsVpcConfiguration": {
                  "AssignPublicIp": "DISABLED",
                  "SecurityGroups": [
                    {
                      "Fn::GetAtt": [
                        "PostgresAccessSecurityGroupCloudqueryE959A23F",
                        "GroupId",
                      ],
                    },
                  ],
                  "Subnets": {
                    "Ref": "PrivateSubnets",
                  },
                },
              },
              "TaskCount": 1,
              "TaskDefinitionArn": {
                "Ref": "CloudquerySourceAllTaskDefinition8F8AA120",
              },
            },
            "Id": "Target0",
            "Input": "{}",
            "RoleArn": {
              "Fn::GetAtt": [
                "CloudquerySourceAllTaskDefinitionEventsRoleF0320BC8",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "CloudquerySourceAllTaskDefinition8F8AA120": {
      "Properties": {
        "ContainerDefinitions": [
          {
            "Command": [
              "/bin/bash",
              "-c",
              "PG_PASSWORD=$(/usr/local/bin/aws rds generate-db-auth-token --hostname $DB_HOST --port 5432 --region eu-west-1 --username cloudquery);echo "user=cloudquery password=$PG_PASSWORD host=$DB_HOST port=5432 dbname=postgres sslmode=verify-full" > /var/scratch/connection_string",
            ],
            "EntryPoint": [
              "",
            ],
            "Environment": [
              {
                "Name": "DB_HOST",
                "Value": {
                  "Fn::GetAtt": [
                    "PostgresInstance16DE4286E",
                    "Endpoint.Address",
                  ],
                },
              },
            ],
            "Essential": false,
            "Image": "public.ecr.aws/aws-cli/aws-cli",
            "MountPoints": [
              {
                "ContainerPath": "/var/scratch",
                "ReadOnly": false,
                "SourceVolume": "scratch",
              },
            ],
            "Name": "CloudquerySource-AllAwsCli",
          },
          {
            "Command": [
              "/bin/sh",
              "-c",
              "wget -O /usr/local/share/ca-certificates/rds-ca-2019-root.crt -q https://s3.amazonaws.com/rds-downloads/rds-ca-2019-root.pem && update-ca-certificates;printf 'kind: source
spec:
  name: aws
  path: cloudquery/aws
  version: v17.4.0
  tables:
    - aws_*
  skip_tables:
    - aws_ec2_vpc_endpoint_services
    - aws_cloudtrail_events
    - aws_docdb_cluster_parameter_groups
    - aws_docdb_engine_versions
    - aws_ec2_instance_types
    - aws_elasticache_engine_versions
    - aws_elasticache_parameter_groups
    - aws_elasticache_reserved_cache_nodes_offerings
    - aws_elasticache_service_updates
    - aws_neptune_cluster_parameter_groups
    - aws_neptune_db_parameter_groups
    - aws_rds_cluster_parameter_groups
    - aws_rds_db_parameter_groups
    - aws_rds_engine_versions
    - aws_servicequotas_services
    - aws_identitystore_users
    - aws_identitystore_groups
    - aws_quicksight_data_sets
    - aws_quicksight_dashboards
    - aws_quicksight_analyses
    - aws_quicksight_users
    - aws_quicksight_templates
    - aws_quicksight_groups
    - aws_quicksight_folders
    - aws_quicksight_data_sources
    - aws_amp_workspaces
    - aws_ssoadmin_instances
    - aws_glue_connections
    - aws_computeoptimizer_ecs_service_recommendations
    - aws_xray_sampling_rules
    - aws_xray_resource_policies
    - aws_xray_groups
    - aws_organizations
    - aws_organizations_accounts
    - aws_organizations_delegated_services
    - aws_organizations_delegated_administrators
    - aws_organizations_organizational_units
    - aws_organizations_policies
    - aws_organizations_roots
    - aws_accessanalyzer_analyzers
    - aws_accessanalyzer_analyzer_archive_rules
    - aws_accessanalyzer_analyzer_findings
    - aws_cloudformation_stacks
    - aws_cloudformation_stack_resources
    - aws_cloudformation_stack_templates
    - aws_cloudformation_template_summaries
  destinations:
    - postgresql
  concurrency: 10000
  spec:
    regions:
      - eu-west-1
      - eu-west-2
      - us-east-1
      - us-east-2
      - us-west-1
      - ap-southeast-2
      - ca-central-1
    org:
      member_role_name: cloudquery-access
      organization_units:
        - ou-123
' > /source.yaml;printf 'kind: destination
spec:
  name: postgresql
  registry: github
  path: cloudquery/postgresql
  version: v4.2.0
  migrate_mode: forced
  spec:
    connection_string: \${file:/var/scratch/connection_string}
' > /destination.yaml;/app/cloudquery sync /source.yaml /destination.yaml --log-format json --log-console",
            ],
            "DependsOn": [
              {
                "Condition": "SUCCESS",
                "ContainerName": "CloudquerySource-AllAwsCli",
              },
            ],
            "EntryPoint": [
              "",
            ],
            "Essential": true,
            "Image": "ghcr.io/cloudquery/cloudquery:3.5.0",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "MountPoints": [
              {
                "ContainerPath": "/var/scratch",
                "ReadOnly": true,
                "SourceVolume": "scratch",
              },
            ],
            "Name": "CloudquerySource-AllContainer",
          },
          {
            "Environment": [
              {
                "Name": "STACK",
                "Value": "deploy",
              },
              {
                "Name": "STAGE",
                "Value": "TEST",
              },
              {
                "Name": "APP",
                "Value": "cloudquery",
              },
              {
                "Name": "GU_REPO",
                "Value": "guardian/service-catalogue",
              },
            ],
            "Essential": true,
            "FirelensConfiguration": {
              "Options": {
                "config-file-type": "file",
                "config-file-value": "/custom.conf",
                "enable-ecs-log-metadata": "true",
              },
              "Type": "fluentbit",
            },
            "Image": "ghcr.io/guardian/hackday-firelens:main",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "CloudquerySourceAllTaskDefinitionCloudquerySourceAllFirelensLogGroupF1C1A97B",
                },
                "awslogs-region": {
                  "Ref": "AWS::Region",
                },
                "awslogs-stream-prefix": "deploy/TEST/cloudquery",
              },
            },
            "Name": "CloudquerySource-AllFirelens",
          },
        ],
        "Cpu": "256",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "CloudquerySourceAllTaskDefinitionExecutionRole57AE7309",
            "Arn",
          ],
        },
        "Family": "CloudQueryCloudquerySourceAllTaskDefinitionC1F1D919",
        "Memory": "2048",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE",
        ],
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "CloudquerySourceAllTaskDefinitionTaskRole4E4F856D",
            "Arn",
          ],
        },
        "Volumes": [
          {
            "Host": {},
            "Name": "scratch",
          },
        ],
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "CloudquerySourceAllTaskDefinitionCloudquerySourceAllFirelensLogGroupF1C1A97B": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionInDays": 1,
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "CloudquerySourceAllTaskDefinitionEventsRoleDefaultPolicy394A66F6": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ecs:RunTask",
              "Condition": {
                "ArnEquals": {
                  "ecs:cluster": {
                    "Fn::GetAtt": [
                      "cloudqueryCluster5370C11B",
                      "Arn",
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Resource": {
                "Ref": "CloudquerySourceAllTaskDefinition8F8AA120",
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceAllTaskDefinitionExecutionRole57AE7309",
                  "Arn",
                ],
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceAllTaskDefinitionTaskRole4E4F856D",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceAllTaskDefinitionEventsRoleDefaultPolicy394A66F6",
        "Roles": [
          {
            "Ref": "CloudquerySourceAllTaskDefinitionEventsRoleF0320BC8",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceAllTaskDefinitionEventsRoleF0320BC8": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceAllTaskDefinitionExecutionRole57AE7309": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceAllTaskDefinitionExecutionRoleDefaultPolicy82390649": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceAllTaskDefinitionCloudquerySourceAllFirelensLogGroupF1C1A97B",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceAllTaskDefinitionExecutionRoleDefaultPolicy82390649",
        "Roles": [
          {
            "Ref": "CloudquerySourceAllTaskDefinitionExecutionRole57AE7309",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceAllTaskDefinitionTaskRole4E4F856D": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/ReadOnlyAccess",
        ],
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceAllTaskDefinitionTaskRoleDefaultPolicy53CB4BC7": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kinesis:Describe*",
                "kinesis:Put*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":kinesis:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":stream/",
                    {
                      "Ref": "LoggingStreamName",
                    },
                  ],
                ],
              },
            },
            {
              "Action": [
                "cloudformation:GetTemplate",
                "dynamodb:GetItem",
                "dynamodb:BatchGetItem",
                "dynamodb:Query",
                "dynamodb:Scan",
                "ec2:GetConsoleOutput",
                "ec2:GetConsoleScreenshot",
                "ecr:BatchGetImage",
                "ecr:GetAuthorizationToken",
                "ecr:GetDownloadUrlForLayer",
                "kinesis:Get*",
                "lambda:GetFunction",
                "logs:GetLogEvents",
                "sdb:Select*",
                "sqs:ReceiveMessage",
              ],
              "Effect": "Deny",
              "Resource": "*",
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": "arn:aws:iam::*:role/cloudquery-access",
            },
            {
              "Action": "rds-db:connect",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":rds-db:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":dbuser:",
                    {
                      "Fn::GetAtt": [
                        "PostgresInstance16DE4286E",
                        "DbiResourceId",
                      ],
                    },
                    "/cloudquery",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceAllTaskDefinitionTaskRoleDefaultPolicy53CB4BC7",
        "Roles": [
          {
            "Ref": "CloudquerySourceAllTaskDefinitionTaskRole4E4F856D",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceDeployToolsListOrgsScheduledEventRuleDF9BD8AF": {
      "Properties": {
        "ScheduleExpression": "rate(1 day)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "cloudqueryCluster5370C11B",
                "Arn",
              ],
            },
            "EcsParameters": {
              "LaunchType": "FARGATE",
              "NetworkConfiguration": {
                "AwsVpcConfiguration": {
                  "AssignPublicIp": "DISABLED",
                  "SecurityGroups": [
                    {
                      "Fn::GetAtt": [
                        "PostgresAccessSecurityGroupCloudqueryE959A23F",
                        "GroupId",
                      ],
                    },
                  ],
                  "Subnets": {
                    "Ref": "PrivateSubnets",
                  },
                },
              },
              "TaskCount": 1,
              "TaskDefinitionArn": {
                "Ref": "CloudquerySourceDeployToolsListOrgsTaskDefinitionDE2A34D9",
              },
            },
            "Id": "Target0",
            "Input": "{}",
            "RoleArn": {
              "Fn::GetAtt": [
                "CloudquerySourceDeployToolsListOrgsTaskDefinitionEventsRole349D11D9",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "CloudquerySourceDeployToolsListOrgsTaskDefinitionCloudquerySourceDeployToolsListOrgsFirelensLogGroup27F2A6EA": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionInDays": 1,
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "CloudquerySourceDeployToolsListOrgsTaskDefinitionDE2A34D9": {
      "Properties": {
        "ContainerDefinitions": [
          {
            "Command": [
              "/bin/bash",
              "-c",
              "PG_PASSWORD=$(/usr/local/bin/aws rds generate-db-auth-token --hostname $DB_HOST --port 5432 --region eu-west-1 --username cloudquery);echo "user=cloudquery password=$PG_PASSWORD host=$DB_HOST port=5432 dbname=postgres sslmode=verify-full" > /var/scratch/connection_string",
            ],
            "EntryPoint": [
              "",
            ],
            "Environment": [
              {
                "Name": "DB_HOST",
                "Value": {
                  "Fn::GetAtt": [
                    "PostgresInstance16DE4286E",
                    "Endpoint.Address",
                  ],
                },
              },
            ],
            "Essential": false,
            "Image": "public.ecr.aws/aws-cli/aws-cli",
            "MountPoints": [
              {
                "ContainerPath": "/var/scratch",
                "ReadOnly": false,
                "SourceVolume": "scratch",
              },
            ],
            "Name": "CloudquerySource-DeployToolsListOrgsAwsCli",
          },
          {
            "Command": [
              "/bin/sh",
              "-c",
              "wget -O /usr/local/share/ca-certificates/rds-ca-2019-root.crt -q https://s3.amazonaws.com/rds-downloads/rds-ca-2019-root.pem && update-ca-certificates;printf 'kind: source
spec:
  name: aws
  path: cloudquery/aws
  version: v17.4.0
  tables:
    - aws_organizations
    - aws_organizations_accounts
    - aws_organizations_delegated_services
    - aws_organizations_delegated_administrators
    - aws_organizations_organizational_units
    - aws_organizations_policies
    - aws_organizations_roots
  destinations:
    - postgresql
  spec:
    regions:
      - eu-west-1
      - eu-west-2
      - us-east-1
      - us-east-2
      - us-west-1
      - ap-southeast-2
      - ca-central-1
    accounts:
      - id: cq-for-000000000018
        role_arn: arn:aws:iam::000000000018:role/cloudquery-access
' > /source.yaml;printf 'kind: destination
spec:
  name: postgresql
  registry: github
  path: cloudquery/postgresql
  version: v4.2.0
  migrate_mode: forced
  spec:
    connection_string: \${file:/var/scratch/connection_string}
' > /destination.yaml;/app/cloudquery sync /source.yaml /destination.yaml --log-format json --log-console",
            ],
            "DependsOn": [
              {
                "Condition": "SUCCESS",
                "ContainerName": "CloudquerySource-DeployToolsListOrgsAwsCli",
              },
            ],
            "EntryPoint": [
              "",
            ],
            "Essential": true,
            "Image": "ghcr.io/cloudquery/cloudquery:3.5.0",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "MountPoints": [
              {
                "ContainerPath": "/var/scratch",
                "ReadOnly": true,
                "SourceVolume": "scratch",
              },
            ],
            "Name": "CloudquerySource-DeployToolsListOrgsContainer",
          },
          {
            "Environment": [
              {
                "Name": "STACK",
                "Value": "deploy",
              },
              {
                "Name": "STAGE",
                "Value": "TEST",
              },
              {
                "Name": "APP",
                "Value": "cloudquery",
              },
              {
                "Name": "GU_REPO",
                "Value": "guardian/service-catalogue",
              },
            ],
            "Essential": true,
            "FirelensConfiguration": {
              "Options": {
                "config-file-type": "file",
                "config-file-value": "/custom.conf",
                "enable-ecs-log-metadata": "true",
              },
              "Type": "fluentbit",
            },
            "Image": "ghcr.io/guardian/hackday-firelens:main",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "CloudquerySourceDeployToolsListOrgsTaskDefinitionCloudquerySourceDeployToolsListOrgsFirelensLogGroup27F2A6EA",
                },
                "awslogs-region": {
                  "Ref": "AWS::Region",
                },
                "awslogs-stream-prefix": "deploy/TEST/cloudquery",
              },
            },
            "Name": "CloudquerySource-DeployToolsListOrgsFirelens",
          },
        ],
        "Cpu": "256",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "CloudquerySourceDeployToolsListOrgsTaskDefinitionExecutionRole8F75CE49",
            "Arn",
          ],
        },
        "Family": "CloudQueryCloudquerySourceDeployToolsListOrgsTaskDefinitionCE19EB7F",
        "Memory": "512",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE",
        ],
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "CloudquerySourceDeployToolsListOrgsTaskDefinitionTaskRole1340B0DE",
            "Arn",
          ],
        },
        "Volumes": [
          {
            "Host": {},
            "Name": "scratch",
          },
        ],
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "CloudquerySourceDeployToolsListOrgsTaskDefinitionEventsRole349D11D9": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceDeployToolsListOrgsTaskDefinitionEventsRoleDefaultPolicy229537D4": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ecs:RunTask",
              "Condition": {
                "ArnEquals": {
                  "ecs:cluster": {
                    "Fn::GetAtt": [
                      "cloudqueryCluster5370C11B",
                      "Arn",
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Resource": {
                "Ref": "CloudquerySourceDeployToolsListOrgsTaskDefinitionDE2A34D9",
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceDeployToolsListOrgsTaskDefinitionExecutionRole8F75CE49",
                  "Arn",
                ],
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceDeployToolsListOrgsTaskDefinitionTaskRole1340B0DE",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceDeployToolsListOrgsTaskDefinitionEventsRoleDefaultPolicy229537D4",
        "Roles": [
          {
            "Ref": "CloudquerySourceDeployToolsListOrgsTaskDefinitionEventsRole349D11D9",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceDeployToolsListOrgsTaskDefinitionExecutionRole8F75CE49": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceDeployToolsListOrgsTaskDefinitionExecutionRoleDefaultPolicyDA54629E": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceDeployToolsListOrgsTaskDefinitionCloudquerySourceDeployToolsListOrgsFirelensLogGroup27F2A6EA",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceDeployToolsListOrgsTaskDefinitionExecutionRoleDefaultPolicyDA54629E",
        "Roles": [
          {
            "Ref": "CloudquerySourceDeployToolsListOrgsTaskDefinitionExecutionRole8F75CE49",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceDeployToolsListOrgsTaskDefinitionTaskRole1340B0DE": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/ReadOnlyAccess",
        ],
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceDeployToolsListOrgsTaskDefinitionTaskRoleDefaultPolicyBCA03B33": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kinesis:Describe*",
                "kinesis:Put*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":kinesis:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":stream/",
                    {
                      "Ref": "LoggingStreamName",
                    },
                  ],
                ],
              },
            },
            {
              "Action": "organizations:List*",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "cloudformation:GetTemplate",
                "dynamodb:GetItem",
                "dynamodb:BatchGetItem",
                "dynamodb:Query",
                "dynamodb:Scan",
                "ec2:GetConsoleOutput",
                "ec2:GetConsoleScreenshot",
                "ecr:BatchGetImage",
                "ecr:GetAuthorizationToken",
                "ecr:GetDownloadUrlForLayer",
                "kinesis:Get*",
                "lambda:GetFunction",
                "logs:GetLogEvents",
                "sdb:Select*",
                "sqs:ReceiveMessage",
              ],
              "Effect": "Deny",
              "Resource": "*",
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": "arn:aws:iam::000000000018:role/cloudquery-access",
            },
            {
              "Action": "rds-db:connect",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":rds-db:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":dbuser:",
                    {
                      "Fn::GetAtt": [
                        "PostgresInstance16DE4286E",
                        "DbiResourceId",
                      ],
                    },
                    "/cloudquery",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceDeployToolsListOrgsTaskDefinitionTaskRoleDefaultPolicyBCA03B33",
        "Roles": [
          {
            "Ref": "CloudquerySourceDeployToolsListOrgsTaskDefinitionTaskRole1340B0DE",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceFastlyServicesScheduledEventRule1F83E593": {
      "Properties": {
        "ScheduleExpression": "rate(1 day)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "cloudqueryCluster5370C11B",
                "Arn",
              ],
            },
            "EcsParameters": {
              "LaunchType": "FARGATE",
              "NetworkConfiguration": {
                "AwsVpcConfiguration": {
                  "AssignPublicIp": "DISABLED",
                  "SecurityGroups": [
                    {
                      "Fn::GetAtt": [
                        "PostgresAccessSecurityGroupCloudqueryE959A23F",
                        "GroupId",
                      ],
                    },
                  ],
                  "Subnets": {
                    "Ref": "PrivateSubnets",
                  },
                },
              },
              "TaskCount": 1,
              "TaskDefinitionArn": {
                "Ref": "CloudquerySourceFastlyServicesTaskDefinitionDCCD3FD4",
              },
            },
            "Id": "Target0",
            "Input": "{}",
            "RoleArn": {
              "Fn::GetAtt": [
                "CloudquerySourceFastlyServicesTaskDefinitionEventsRoleE821B76C",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "CloudquerySourceFastlyServicesTaskDefinitionCloudquerySourceFastlyServicesFirelensLogGroupF5954401": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionInDays": 1,
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "CloudquerySourceFastlyServicesTaskDefinitionDCCD3FD4": {
      "Properties": {
        "ContainerDefinitions": [
          {
            "Command": [
              "/bin/bash",
              "-c",
              "PG_PASSWORD=$(/usr/local/bin/aws rds generate-db-auth-token --hostname $DB_HOST --port 5432 --region eu-west-1 --username cloudquery);echo "user=cloudquery password=$PG_PASSWORD host=$DB_HOST port=5432 dbname=postgres sslmode=verify-full" > /var/scratch/connection_string",
            ],
            "EntryPoint": [
              "",
            ],
            "Environment": [
              {
                "Name": "DB_HOST",
                "Value": {
                  "Fn::GetAtt": [
                    "PostgresInstance16DE4286E",
                    "Endpoint.Address",
                  ],
                },
              },
            ],
            "Essential": false,
            "Image": "public.ecr.aws/aws-cli/aws-cli",
            "MountPoints": [
              {
                "ContainerPath": "/var/scratch",
                "ReadOnly": false,
                "SourceVolume": "scratch",
              },
            ],
            "Name": "CloudquerySource-FastlyServicesAwsCli",
          },
          {
            "Command": [
              "/bin/sh",
              "-c",
              "wget -O /usr/local/share/ca-certificates/rds-ca-2019-root.crt -q https://s3.amazonaws.com/rds-downloads/rds-ca-2019-root.pem && update-ca-certificates;printf 'kind: source
spec:
  name: fastly
  path: cloudquery/fastly
  version: v1.3.1
  tables:
    - fastly_services
    - fastly_service_versions
    - fastly_service_backends
    - fastly_service_domains
    - fastly_service_health_checks
  destinations:
    - postgresql
  concurrency: 1000
  spec:
    fastly_api_key: \${FASTLY_API_KEY}
' > /source.yaml;printf 'kind: destination
spec:
  name: postgresql
  registry: github
  path: cloudquery/postgresql
  version: v4.2.0
  migrate_mode: forced
  spec:
    connection_string: \${file:/var/scratch/connection_string}
' > /destination.yaml;/app/cloudquery sync /source.yaml /destination.yaml --log-format json --log-console",
            ],
            "DependsOn": [
              {
                "Condition": "SUCCESS",
                "ContainerName": "CloudquerySource-FastlyServicesAwsCli",
              },
            ],
            "EntryPoint": [
              "",
            ],
            "Essential": true,
            "Image": "ghcr.io/cloudquery/cloudquery:3.5.0",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "MountPoints": [
              {
                "ContainerPath": "/var/scratch",
                "ReadOnly": true,
                "SourceVolume": "scratch",
              },
            ],
            "Name": "CloudquerySource-FastlyServicesContainer",
            "Secrets": [
              {
                "Name": "FASTLY_API_KEY",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":secretsmanager:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":secret:/TEST/deploy/cloudquery/fastly-credentials:api-key::",
                    ],
                  ],
                },
              },
            ],
          },
          {
            "Environment": [
              {
                "Name": "STACK",
                "Value": "deploy",
              },
              {
                "Name": "STAGE",
                "Value": "TEST",
              },
              {
                "Name": "APP",
                "Value": "cloudquery",
              },
              {
                "Name": "GU_REPO",
                "Value": "guardian/service-catalogue",
              },
            ],
            "Essential": true,
            "FirelensConfiguration": {
              "Options": {
                "config-file-type": "file",
                "config-file-value": "/custom.conf",
                "enable-ecs-log-metadata": "true",
              },
              "Type": "fluentbit",
            },
            "Image": "ghcr.io/guardian/hackday-firelens:main",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "CloudquerySourceFastlyServicesTaskDefinitionCloudquerySourceFastlyServicesFirelensLogGroupF5954401",
                },
                "awslogs-region": {
                  "Ref": "AWS::Region",
                },
                "awslogs-stream-prefix": "deploy/TEST/cloudquery",
              },
            },
            "Name": "CloudquerySource-FastlyServicesFirelens",
          },
        ],
        "Cpu": "256",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "CloudquerySourceFastlyServicesTaskDefinitionExecutionRoleEF21A3A9",
            "Arn",
          ],
        },
        "Family": "CloudQueryCloudquerySourceFastlyServicesTaskDefinitionB7E1552F",
        "Memory": "512",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE",
        ],
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "CloudquerySourceFastlyServicesTaskDefinitionTaskRole83C775A7",
            "Arn",
          ],
        },
        "Volumes": [
          {
            "Host": {},
            "Name": "scratch",
          },
        ],
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "CloudquerySourceFastlyServicesTaskDefinitionEventsRoleDefaultPolicy4E34F504": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ecs:RunTask",
              "Condition": {
                "ArnEquals": {
                  "ecs:cluster": {
                    "Fn::GetAtt": [
                      "cloudqueryCluster5370C11B",
                      "Arn",
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Resource": {
                "Ref": "CloudquerySourceFastlyServicesTaskDefinitionDCCD3FD4",
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceFastlyServicesTaskDefinitionExecutionRoleEF21A3A9",
                  "Arn",
                ],
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceFastlyServicesTaskDefinitionTaskRole83C775A7",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceFastlyServicesTaskDefinitionEventsRoleDefaultPolicy4E34F504",
        "Roles": [
          {
            "Ref": "CloudquerySourceFastlyServicesTaskDefinitionEventsRoleE821B76C",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceFastlyServicesTaskDefinitionEventsRoleE821B76C": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceFastlyServicesTaskDefinitionExecutionRoleDefaultPolicy1B888D16": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":secretsmanager:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":secret:/TEST/deploy/cloudquery/fastly-credentials-??????",
                  ],
                ],
              },
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceFastlyServicesTaskDefinitionCloudquerySourceFastlyServicesFirelensLogGroupF5954401",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceFastlyServicesTaskDefinitionExecutionRoleDefaultPolicy1B888D16",
        "Roles": [
          {
            "Ref": "CloudquerySourceFastlyServicesTaskDefinitionExecutionRoleEF21A3A9",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceFastlyServicesTaskDefinitionExecutionRoleEF21A3A9": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceFastlyServicesTaskDefinitionTaskRole83C775A7": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceFastlyServicesTaskDefinitionTaskRoleDefaultPolicy81E15098": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kinesis:Describe*",
                "kinesis:Put*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":kinesis:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":stream/",
                    {
                      "Ref": "LoggingStreamName",
                    },
                  ],
                ],
              },
            },
            {
              "Action": "rds-db:connect",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":rds-db:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":dbuser:",
                    {
                      "Fn::GetAtt": [
                        "PostgresInstance16DE4286E",
                        "DbiResourceId",
                      ],
                    },
                    "/cloudquery",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceFastlyServicesTaskDefinitionTaskRoleDefaultPolicy81E15098",
        "Roles": [
          {
            "Ref": "CloudquerySourceFastlyServicesTaskDefinitionTaskRole83C775A7",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceGalaxiesScheduledEventRuleCC774CB8": {
      "Properties": {
        "ScheduleExpression": "rate(1 day)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "cloudqueryCluster5370C11B",
                "Arn",
              ],
            },
            "EcsParameters": {
              "LaunchType": "FARGATE",
              "NetworkConfiguration": {
                "AwsVpcConfiguration": {
                  "AssignPublicIp": "DISABLED",
                  "SecurityGroups": [
                    {
                      "Fn::GetAtt": [
                        "PostgresAccessSecurityGroupCloudqueryE959A23F",
                        "GroupId",
                      ],
                    },
                  ],
                  "Subnets": {
                    "Ref": "PrivateSubnets",
                  },
                },
              },
              "TaskCount": 1,
              "TaskDefinitionArn": {
                "Ref": "CloudquerySourceGalaxiesTaskDefinition0777FEFC",
              },
            },
            "Id": "Target0",
            "Input": "{}",
            "RoleArn": {
              "Fn::GetAtt": [
                "CloudquerySourceGalaxiesTaskDefinitionEventsRoleD1AF9A82",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "CloudquerySourceGalaxiesTaskDefinition0777FEFC": {
      "Properties": {
        "ContainerDefinitions": [
          {
            "Command": [
              "/bin/bash",
              "-c",
              "PG_PASSWORD=$(/usr/local/bin/aws rds generate-db-auth-token --hostname $DB_HOST --port 5432 --region eu-west-1 --username cloudquery);echo "user=cloudquery password=$PG_PASSWORD host=$DB_HOST port=5432 dbname=postgres sslmode=verify-full" > /var/scratch/connection_string",
            ],
            "EntryPoint": [
              "",
            ],
            "Environment": [
              {
                "Name": "DB_HOST",
                "Value": {
                  "Fn::GetAtt": [
                    "PostgresInstance16DE4286E",
                    "Endpoint.Address",
                  ],
                },
              },
            ],
            "Essential": false,
            "Image": "public.ecr.aws/aws-cli/aws-cli",
            "MountPoints": [
              {
                "ContainerPath": "/var/scratch",
                "ReadOnly": false,
                "SourceVolume": "scratch",
              },
            ],
            "Name": "CloudquerySource-GalaxiesAwsCli",
          },
          {
            "Command": [
              "/bin/sh",
              "-c",
              {
                "Fn::Join": [
                  "",
                  [
                    "wget -O /usr/local/share/ca-certificates/rds-ca-2019-root.crt -q https://s3.amazonaws.com/rds-downloads/rds-ca-2019-root.pem && update-ca-certificates;printf 'kind: source
spec:
  name: galaxies
  path: guardian/galaxies
  version: v1.1.0
  destinations:
    - postgresql
  tables:
    - galaxies_people_table
    - galaxies_teams_table
    - galaxies_streams_table
  spec:
    bucket: ",
                    {
                      "Fn::Select": [
                        0,
                        {
                          "Fn::Split": [
                            "/",
                            {
                              "Fn::Select": [
                                5,
                                {
                                  "Fn::Split": [
                                    ":",
                                    {
                                      "Ref": "ActionsStaticSiteBucketArnParam",
                                    },
                                  ],
                                },
                              ],
                            },
                          ],
                        },
                      ],
                    },
                    "
' > /source.yaml;printf 'kind: destination
spec:
  name: postgresql
  registry: github
  path: cloudquery/postgresql
  version: v4.2.0
  migrate_mode: forced
  spec:
    connection_string: \${file:/var/scratch/connection_string}
' > /destination.yaml;/app/cloudquery sync /source.yaml /destination.yaml --log-format json --log-console",
                  ],
                ],
              },
            ],
            "DependsOn": [
              {
                "Condition": "SUCCESS",
                "ContainerName": "CloudquerySource-GalaxiesAwsCli",
              },
            ],
            "EntryPoint": [
              "",
            ],
            "Essential": true,
            "Image": "ghcr.io/cloudquery/cloudquery:3.5.0",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "MountPoints": [
              {
                "ContainerPath": "/var/scratch",
                "ReadOnly": true,
                "SourceVolume": "scratch",
              },
            ],
            "Name": "CloudquerySource-GalaxiesContainer",
          },
          {
            "Environment": [
              {
                "Name": "STACK",
                "Value": "deploy",
              },
              {
                "Name": "STAGE",
                "Value": "TEST",
              },
              {
                "Name": "APP",
                "Value": "cloudquery",
              },
              {
                "Name": "GU_REPO",
                "Value": "guardian/service-catalogue",
              },
            ],
            "Essential": true,
            "FirelensConfiguration": {
              "Options": {
                "config-file-type": "file",
                "config-file-value": "/custom.conf",
                "enable-ecs-log-metadata": "true",
              },
              "Type": "fluentbit",
            },
            "Image": "ghcr.io/guardian/hackday-firelens:main",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "CloudquerySourceGalaxiesTaskDefinitionCloudquerySourceGalaxiesFirelensLogGroupB5272E0D",
                },
                "awslogs-region": {
                  "Ref": "AWS::Region",
                },
                "awslogs-stream-prefix": "deploy/TEST/cloudquery",
              },
            },
            "Name": "CloudquerySource-GalaxiesFirelens",
          },
        ],
        "Cpu": "256",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "CloudquerySourceGalaxiesTaskDefinitionExecutionRoleDDB0DD4B",
            "Arn",
          ],
        },
        "Family": "CloudQueryCloudquerySourceGalaxiesTaskDefinition4D5FC019",
        "Memory": "512",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE",
        ],
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "CloudquerySourceGalaxiesTaskDefinitionTaskRole0FC08F83",
            "Arn",
          ],
        },
        "Volumes": [
          {
            "Host": {},
            "Name": "scratch",
          },
        ],
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "CloudquerySourceGalaxiesTaskDefinitionCloudquerySourceGalaxiesFirelensLogGroupB5272E0D": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionInDays": 1,
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "CloudquerySourceGalaxiesTaskDefinitionEventsRoleD1AF9A82": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceGalaxiesTaskDefinitionEventsRoleDefaultPolicy022DA6EA": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ecs:RunTask",
              "Condition": {
                "ArnEquals": {
                  "ecs:cluster": {
                    "Fn::GetAtt": [
                      "cloudqueryCluster5370C11B",
                      "Arn",
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Resource": {
                "Ref": "CloudquerySourceGalaxiesTaskDefinition0777FEFC",
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceGalaxiesTaskDefinitionExecutionRoleDDB0DD4B",
                  "Arn",
                ],
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceGalaxiesTaskDefinitionTaskRole0FC08F83",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceGalaxiesTaskDefinitionEventsRoleDefaultPolicy022DA6EA",
        "Roles": [
          {
            "Ref": "CloudquerySourceGalaxiesTaskDefinitionEventsRoleD1AF9A82",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceGalaxiesTaskDefinitionExecutionRoleDDB0DD4B": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceGalaxiesTaskDefinitionExecutionRoleDefaultPolicyB6D2CB7A": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceGalaxiesTaskDefinitionCloudquerySourceGalaxiesFirelensLogGroupB5272E0D",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceGalaxiesTaskDefinitionExecutionRoleDefaultPolicyB6D2CB7A",
        "Roles": [
          {
            "Ref": "CloudquerySourceGalaxiesTaskDefinitionExecutionRoleDDB0DD4B",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceGalaxiesTaskDefinitionTaskRole0FC08F83": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceGalaxiesTaskDefinitionTaskRoleDefaultPolicy58C64BC8": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kinesis:Describe*",
                "kinesis:Put*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":kinesis:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":stream/",
                    {
                      "Ref": "LoggingStreamName",
                    },
                  ],
                ],
              },
            },
            {
              "Action": "s3:GetObject",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Ref": "ActionsStaticSiteBucketArnParam",
                    },
                    "/galaxies.gutools.co.uk/data/*",
                  ],
                ],
              },
            },
            {
              "Action": "rds-db:connect",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":rds-db:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":dbuser:",
                    {
                      "Fn::GetAtt": [
                        "PostgresInstance16DE4286E",
                        "DbiResourceId",
                      ],
                    },
                    "/cloudquery",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceGalaxiesTaskDefinitionTaskRoleDefaultPolicy58C64BC8",
        "Roles": [
          {
            "Ref": "CloudquerySourceGalaxiesTaskDefinitionTaskRole0FC08F83",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceGitHubRepositoriesScheduledEventRuleC7F5836E": {
      "Properties": {
        "ScheduleExpression": "rate(1 day)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "cloudqueryCluster5370C11B",
                "Arn",
              ],
            },
            "EcsParameters": {
              "LaunchType": "FARGATE",
              "NetworkConfiguration": {
                "AwsVpcConfiguration": {
                  "AssignPublicIp": "DISABLED",
                  "SecurityGroups": [
                    {
                      "Fn::GetAtt": [
                        "PostgresAccessSecurityGroupCloudqueryE959A23F",
                        "GroupId",
                      ],
                    },
                  ],
                  "Subnets": {
                    "Ref": "PrivateSubnets",
                  },
                },
              },
              "TaskCount": 1,
              "TaskDefinitionArn": {
                "Ref": "CloudquerySourceGitHubRepositoriesTaskDefinition921DC1BC",
              },
            },
            "Id": "Target0",
            "Input": "{}",
            "RoleArn": {
              "Fn::GetAtt": [
                "CloudquerySourceGitHubRepositoriesTaskDefinitionEventsRole93DB1A26",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "CloudquerySourceGitHubRepositoriesTaskDefinition921DC1BC": {
      "Properties": {
        "ContainerDefinitions": [
          {
            "Command": [
              "/bin/bash",
              "-c",
              "PG_PASSWORD=$(/usr/local/bin/aws rds generate-db-auth-token --hostname $DB_HOST --port 5432 --region eu-west-1 --username cloudquery);echo "user=cloudquery password=$PG_PASSWORD host=$DB_HOST port=5432 dbname=postgres sslmode=verify-full" > /var/scratch/connection_string",
            ],
            "EntryPoint": [
              "",
            ],
            "Environment": [
              {
                "Name": "DB_HOST",
                "Value": {
                  "Fn::GetAtt": [
                    "PostgresInstance16DE4286E",
                    "Endpoint.Address",
                  ],
                },
              },
            ],
            "Essential": false,
            "Image": "public.ecr.aws/aws-cli/aws-cli",
            "MountPoints": [
              {
                "ContainerPath": "/var/scratch",
                "ReadOnly": false,
                "SourceVolume": "scratch",
              },
            ],
            "Name": "CloudquerySource-GitHubRepositoriesAwsCli",
          },
          {
            "Command": [
              "/bin/sh",
              "-c",
              "echo $GITHUB_PRIVATE_KEY | base64 -d > /github-private-key;echo $GITHUB_APP_ID > /github-app-id;echo $GITHUB_INSTALLATION_ID > /github-installation-id;wget -O /usr/local/share/ca-certificates/rds-ca-2019-root.crt -q https://s3.amazonaws.com/rds-downloads/rds-ca-2019-root.pem && update-ca-certificates;printf 'kind: source
spec:
  name: github
  path: cloudquery/github
  version: v5.2.0
  tables:
    - github_repositories
  destinations:
    - postgresql
  concurrency: 1000
  spec:
    orgs:
      - guardian
    app_auth:
      - org: guardian
        private_key_path: /github-private-key
        app_id: \${file:/github-app-id}
        installation_id: \${file:/github-installation-id}
' > /source.yaml;printf 'kind: destination
spec:
  name: postgresql
  registry: github
  path: cloudquery/postgresql
  version: v4.2.0
  migrate_mode: forced
  spec:
    connection_string: \${file:/var/scratch/connection_string}
' > /destination.yaml;/app/cloudquery sync /source.yaml /destination.yaml --log-format json --log-console",
            ],
            "DependsOn": [
              {
                "Condition": "SUCCESS",
                "ContainerName": "CloudquerySource-GitHubRepositoriesAwsCli",
              },
            ],
            "EntryPoint": [
              "",
            ],
            "Essential": true,
            "Image": "ghcr.io/cloudquery/cloudquery:3.5.0",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "MountPoints": [
              {
                "ContainerPath": "/var/scratch",
                "ReadOnly": true,
                "SourceVolume": "scratch",
              },
            ],
            "Name": "CloudquerySource-GitHubRepositoriesContainer",
            "Secrets": [
              {
                "Name": "GITHUB_PRIVATE_KEY",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":secretsmanager:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":secret:/TEST/deploy/cloudquery/github-credentials:private-key::",
                    ],
                  ],
                },
              },
              {
                "Name": "GITHUB_APP_ID",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":secretsmanager:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":secret:/TEST/deploy/cloudquery/github-credentials:app-id::",
                    ],
                  ],
                },
              },
              {
                "Name": "GITHUB_INSTALLATION_ID",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":secretsmanager:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":secret:/TEST/deploy/cloudquery/github-credentials:installation-id::",
                    ],
                  ],
                },
              },
            ],
          },
          {
            "Environment": [
              {
                "Name": "STACK",
                "Value": "deploy",
              },
              {
                "Name": "STAGE",
                "Value": "TEST",
              },
              {
                "Name": "APP",
                "Value": "cloudquery",
              },
              {
                "Name": "GU_REPO",
                "Value": "guardian/service-catalogue",
              },
            ],
            "Essential": true,
            "FirelensConfiguration": {
              "Options": {
                "config-file-type": "file",
                "config-file-value": "/custom.conf",
                "enable-ecs-log-metadata": "true",
              },
              "Type": "fluentbit",
            },
            "Image": "ghcr.io/guardian/hackday-firelens:main",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "CloudquerySourceGitHubRepositoriesTaskDefinitionCloudquerySourceGitHubRepositoriesFirelensLogGroup42A4D85D",
                },
                "awslogs-region": {
                  "Ref": "AWS::Region",
                },
                "awslogs-stream-prefix": "deploy/TEST/cloudquery",
              },
            },
            "Name": "CloudquerySource-GitHubRepositoriesFirelens",
          },
        ],
        "Cpu": "256",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "CloudquerySourceGitHubRepositoriesTaskDefinitionExecutionRole03A80EA4",
            "Arn",
          ],
        },
        "Family": "CloudQueryCloudquerySourceGitHubRepositoriesTaskDefinition885F5347",
        "Memory": "512",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE",
        ],
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "CloudquerySourceGitHubRepositoriesTaskDefinitionTaskRoleCEEE8FE4",
            "Arn",
          ],
        },
        "Volumes": [
          {
            "Host": {},
            "Name": "scratch",
          },
        ],
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "CloudquerySourceGitHubRepositoriesTaskDefinitionCloudquerySourceGitHubRepositoriesFirelensLogGroup42A4D85D": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionInDays": 1,
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "CloudquerySourceGitHubRepositoriesTaskDefinitionEventsRole93DB1A26": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceGitHubRepositoriesTaskDefinitionEventsRoleDefaultPolicy1ECEEEB2": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ecs:RunTask",
              "Condition": {
                "ArnEquals": {
                  "ecs:cluster": {
                    "Fn::GetAtt": [
                      "cloudqueryCluster5370C11B",
                      "Arn",
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Resource": {
                "Ref": "CloudquerySourceGitHubRepositoriesTaskDefinition921DC1BC",
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceGitHubRepositoriesTaskDefinitionExecutionRole03A80EA4",
                  "Arn",
                ],
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceGitHubRepositoriesTaskDefinitionTaskRoleCEEE8FE4",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceGitHubRepositoriesTaskDefinitionEventsRoleDefaultPolicy1ECEEEB2",
        "Roles": [
          {
            "Ref": "CloudquerySourceGitHubRepositoriesTaskDefinitionEventsRole93DB1A26",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceGitHubRepositoriesTaskDefinitionExecutionRole03A80EA4": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceGitHubRepositoriesTaskDefinitionExecutionRoleDefaultPolicy04F69199": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":secretsmanager:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":secret:/TEST/deploy/cloudquery/github-credentials-??????",
                  ],
                ],
              },
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceGitHubRepositoriesTaskDefinitionCloudquerySourceGitHubRepositoriesFirelensLogGroup42A4D85D",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceGitHubRepositoriesTaskDefinitionExecutionRoleDefaultPolicy04F69199",
        "Roles": [
          {
            "Ref": "CloudquerySourceGitHubRepositoriesTaskDefinitionExecutionRole03A80EA4",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceGitHubRepositoriesTaskDefinitionTaskRoleCEEE8FE4": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceGitHubRepositoriesTaskDefinitionTaskRoleDefaultPolicy77BC36C4": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kinesis:Describe*",
                "kinesis:Put*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":kinesis:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":stream/",
                    {
                      "Ref": "LoggingStreamName",
                    },
                  ],
                ],
              },
            },
            {
              "Action": "rds-db:connect",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":rds-db:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":dbuser:",
                    {
                      "Fn::GetAtt": [
                        "PostgresInstance16DE4286E",
                        "DbiResourceId",
                      ],
                    },
                    "/cloudquery",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceGitHubRepositoriesTaskDefinitionTaskRoleDefaultPolicy77BC36C4",
        "Roles": [
          {
            "Ref": "CloudquerySourceGitHubRepositoriesTaskDefinitionTaskRoleCEEE8FE4",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceGitHubTeamsScheduledEventRule051F542B": {
      "Properties": {
        "ScheduleExpression": "cron(* * ? * 1 *)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "cloudqueryCluster5370C11B",
                "Arn",
              ],
            },
            "EcsParameters": {
              "LaunchType": "FARGATE",
              "NetworkConfiguration": {
                "AwsVpcConfiguration": {
                  "AssignPublicIp": "DISABLED",
                  "SecurityGroups": [
                    {
                      "Fn::GetAtt": [
                        "PostgresAccessSecurityGroupCloudqueryE959A23F",
                        "GroupId",
                      ],
                    },
                  ],
                  "Subnets": {
                    "Ref": "PrivateSubnets",
                  },
                },
              },
              "TaskCount": 1,
              "TaskDefinitionArn": {
                "Ref": "CloudquerySourceGitHubTeamsTaskDefinitionB01C9D3C",
              },
            },
            "Id": "Target0",
            "Input": "{}",
            "RoleArn": {
              "Fn::GetAtt": [
                "CloudquerySourceGitHubTeamsTaskDefinitionEventsRole3E2A5002",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "CloudquerySourceGitHubTeamsTaskDefinitionB01C9D3C": {
      "Properties": {
        "ContainerDefinitions": [
          {
            "Command": [
              "/bin/bash",
              "-c",
              "PG_PASSWORD=$(/usr/local/bin/aws rds generate-db-auth-token --hostname $DB_HOST --port 5432 --region eu-west-1 --username cloudquery);echo "user=cloudquery password=$PG_PASSWORD host=$DB_HOST port=5432 dbname=postgres sslmode=verify-full" > /var/scratch/connection_string",
            ],
            "EntryPoint": [
              "",
            ],
            "Environment": [
              {
                "Name": "DB_HOST",
                "Value": {
                  "Fn::GetAtt": [
                    "PostgresInstance16DE4286E",
                    "Endpoint.Address",
                  ],
                },
              },
            ],
            "Essential": false,
            "Image": "public.ecr.aws/aws-cli/aws-cli",
            "MountPoints": [
              {
                "ContainerPath": "/var/scratch",
                "ReadOnly": false,
                "SourceVolume": "scratch",
              },
            ],
            "Name": "CloudquerySource-GitHubTeamsAwsCli",
          },
          {
            "Command": [
              "/bin/sh",
              "-c",
              "echo $GITHUB_PRIVATE_KEY | base64 -d > /github-private-key;echo $GITHUB_APP_ID > /github-app-id;echo $GITHUB_INSTALLATION_ID > /github-installation-id;wget -O /usr/local/share/ca-certificates/rds-ca-2019-root.crt -q https://s3.amazonaws.com/rds-downloads/rds-ca-2019-root.pem && update-ca-certificates;printf 'kind: source
spec:
  name: github
  path: cloudquery/github
  version: v5.2.0
  tables:
    - github_teams
    - github_team_members
    - github_team_repositories
  destinations:
    - postgresql
  concurrency: 1000
  spec:
    orgs:
      - guardian
    app_auth:
      - org: guardian
        private_key_path: /github-private-key
        app_id: \${file:/github-app-id}
        installation_id: \${file:/github-installation-id}
' > /source.yaml;printf 'kind: destination
spec:
  name: postgresql
  registry: github
  path: cloudquery/postgresql
  version: v4.2.0
  migrate_mode: forced
  spec:
    connection_string: \${file:/var/scratch/connection_string}
' > /destination.yaml;/app/cloudquery sync /source.yaml /destination.yaml --log-format json --log-console",
            ],
            "DependsOn": [
              {
                "Condition": "SUCCESS",
                "ContainerName": "CloudquerySource-GitHubTeamsAwsCli",
              },
            ],
            "EntryPoint": [
              "",
            ],
            "Essential": true,
            "Image": "ghcr.io/cloudquery/cloudquery:3.5.0",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "MountPoints": [
              {
                "ContainerPath": "/var/scratch",
                "ReadOnly": true,
                "SourceVolume": "scratch",
              },
            ],
            "Name": "CloudquerySource-GitHubTeamsContainer",
            "Secrets": [
              {
                "Name": "GITHUB_PRIVATE_KEY",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":secretsmanager:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":secret:/TEST/deploy/cloudquery/github-credentials:private-key::",
                    ],
                  ],
                },
              },
              {
                "Name": "GITHUB_APP_ID",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":secretsmanager:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":secret:/TEST/deploy/cloudquery/github-credentials:app-id::",
                    ],
                  ],
                },
              },
              {
                "Name": "GITHUB_INSTALLATION_ID",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":secretsmanager:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":secret:/TEST/deploy/cloudquery/github-credentials:installation-id::",
                    ],
                  ],
                },
              },
            ],
          },
          {
            "Environment": [
              {
                "Name": "STACK",
                "Value": "deploy",
              },
              {
                "Name": "STAGE",
                "Value": "TEST",
              },
              {
                "Name": "APP",
                "Value": "cloudquery",
              },
              {
                "Name": "GU_REPO",
                "Value": "guardian/service-catalogue",
              },
            ],
            "Essential": true,
            "FirelensConfiguration": {
              "Options": {
                "config-file-type": "file",
                "config-file-value": "/custom.conf",
                "enable-ecs-log-metadata": "true",
              },
              "Type": "fluentbit",
            },
            "Image": "ghcr.io/guardian/hackday-firelens:main",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "CloudquerySourceGitHubTeamsTaskDefinitionCloudquerySourceGitHubTeamsFirelensLogGroup8B1FFADC",
                },
                "awslogs-region": {
                  "Ref": "AWS::Region",
                },
                "awslogs-stream-prefix": "deploy/TEST/cloudquery",
              },
            },
            "Name": "CloudquerySource-GitHubTeamsFirelens",
          },
        ],
        "Cpu": "256",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "CloudquerySourceGitHubTeamsTaskDefinitionExecutionRole9DEDACFD",
            "Arn",
          ],
        },
        "Family": "CloudQueryCloudquerySourceGitHubTeamsTaskDefinitionF1E24843",
        "Memory": "512",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE",
        ],
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "CloudquerySourceGitHubTeamsTaskDefinitionTaskRoleD590FB83",
            "Arn",
          ],
        },
        "Volumes": [
          {
            "Host": {},
            "Name": "scratch",
          },
        ],
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "CloudquerySourceGitHubTeamsTaskDefinitionCloudquerySourceGitHubTeamsFirelensLogGroup8B1FFADC": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionInDays": 1,
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "CloudquerySourceGitHubTeamsTaskDefinitionEventsRole3E2A5002": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceGitHubTeamsTaskDefinitionEventsRoleDefaultPolicy5B79609C": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ecs:RunTask",
              "Condition": {
                "ArnEquals": {
                  "ecs:cluster": {
                    "Fn::GetAtt": [
                      "cloudqueryCluster5370C11B",
                      "Arn",
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Resource": {
                "Ref": "CloudquerySourceGitHubTeamsTaskDefinitionB01C9D3C",
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceGitHubTeamsTaskDefinitionExecutionRole9DEDACFD",
                  "Arn",
                ],
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceGitHubTeamsTaskDefinitionTaskRoleD590FB83",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceGitHubTeamsTaskDefinitionEventsRoleDefaultPolicy5B79609C",
        "Roles": [
          {
            "Ref": "CloudquerySourceGitHubTeamsTaskDefinitionEventsRole3E2A5002",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceGitHubTeamsTaskDefinitionExecutionRole9DEDACFD": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceGitHubTeamsTaskDefinitionExecutionRoleDefaultPolicy3618CA18": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":secretsmanager:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":secret:/TEST/deploy/cloudquery/github-credentials-??????",
                  ],
                ],
              },
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceGitHubTeamsTaskDefinitionCloudquerySourceGitHubTeamsFirelensLogGroup8B1FFADC",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceGitHubTeamsTaskDefinitionExecutionRoleDefaultPolicy3618CA18",
        "Roles": [
          {
            "Ref": "CloudquerySourceGitHubTeamsTaskDefinitionExecutionRole9DEDACFD",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceGitHubTeamsTaskDefinitionTaskRoleD590FB83": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceGitHubTeamsTaskDefinitionTaskRoleDefaultPolicyB21B808B": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kinesis:Describe*",
                "kinesis:Put*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":kinesis:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":stream/",
                    {
                      "Ref": "LoggingStreamName",
                    },
                  ],
                ],
              },
            },
            {
              "Action": "rds-db:connect",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":rds-db:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":dbuser:",
                    {
                      "Fn::GetAtt": [
                        "PostgresInstance16DE4286E",
                        "DbiResourceId",
                      ],
                    },
                    "/cloudquery",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceGitHubTeamsTaskDefinitionTaskRoleDefaultPolicyB21B808B",
        "Roles": [
          {
            "Ref": "CloudquerySourceGitHubTeamsTaskDefinitionTaskRoleD590FB83",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceOrgWideCloudFormationScheduledEventRule83F64E14": {
      "Properties": {
        "ScheduleExpression": "rate(3 hours)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "cloudqueryCluster5370C11B",
                "Arn",
              ],
            },
            "EcsParameters": {
              "LaunchType": "FARGATE",
              "NetworkConfiguration": {
                "AwsVpcConfiguration": {
                  "AssignPublicIp": "DISABLED",
                  "SecurityGroups": [
                    {
                      "Fn::GetAtt": [
                        "PostgresAccessSecurityGroupCloudqueryE959A23F",
                        "GroupId",
                      ],
                    },
                  ],
                  "Subnets": {
                    "Ref": "PrivateSubnets",
                  },
                },
              },
              "TaskCount": 1,
              "TaskDefinitionArn": {
                "Ref": "CloudquerySourceOrgWideCloudFormationTaskDefinitionDA4F8A51",
              },
            },
            "Id": "Target0",
            "Input": "{}",
            "RoleArn": {
              "Fn::GetAtt": [
                "CloudquerySourceOrgWideCloudFormationTaskDefinitionEventsRole2C0BF887",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "CloudquerySourceOrgWideCloudFormationTaskDefinitionCloudquerySourceOrgWideCloudFormationFirelensLogGroup36609B15": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionInDays": 1,
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "CloudquerySourceOrgWideCloudFormationTaskDefinitionDA4F8A51": {
      "Properties": {
        "ContainerDefinitions": [
          {
            "Command": [
              "/bin/bash",
              "-c",
              "PG_PASSWORD=$(/usr/local/bin/aws rds generate-db-auth-token --hostname $DB_HOST --port 5432 --region eu-west-1 --username cloudquery);echo "user=cloudquery password=$PG_PASSWORD host=$DB_HOST port=5432 dbname=postgres sslmode=verify-full" > /var/scratch/connection_string",
            ],
            "EntryPoint": [
              "",
            ],
            "Environment": [
              {
                "Name": "DB_HOST",
                "Value": {
                  "Fn::GetAtt": [
                    "PostgresInstance16DE4286E",
                    "Endpoint.Address",
                  ],
                },
              },
            ],
            "Essential": false,
            "Image": "public.ecr.aws/aws-cli/aws-cli",
            "MountPoints": [
              {
                "ContainerPath": "/var/scratch",
                "ReadOnly": false,
                "SourceVolume": "scratch",
              },
            ],
            "Name": "CloudquerySource-OrgWideCloudFormationAwsCli",
          },
          {
            "Command": [
              "/bin/sh",
              "-c",
              "wget -O /usr/local/share/ca-certificates/rds-ca-2019-root.crt -q https://s3.amazonaws.com/rds-downloads/rds-ca-2019-root.pem && update-ca-certificates;printf 'kind: source
spec:
  name: aws
  path: cloudquery/aws
  version: v17.4.0
  tables:
    - aws_cloudformation_stacks
    - aws_cloudformation_stack_resources
    - aws_cloudformation_stack_templates
    - aws_cloudformation_template_summaries
  destinations:
    - postgresql
  spec:
    regions:
      - eu-west-1
      - eu-west-2
      - us-east-1
      - us-east-2
      - us-west-1
      - ap-southeast-2
      - ca-central-1
    org:
      member_role_name: cloudquery-access
      organization_units:
        - ou-123
' > /source.yaml;printf 'kind: destination
spec:
  name: postgresql
  registry: github
  path: cloudquery/postgresql
  version: v4.2.0
  migrate_mode: forced
  spec:
    connection_string: \${file:/var/scratch/connection_string}
' > /destination.yaml;/app/cloudquery sync /source.yaml /destination.yaml --log-format json --log-console",
            ],
            "DependsOn": [
              {
                "Condition": "SUCCESS",
                "ContainerName": "CloudquerySource-OrgWideCloudFormationAwsCli",
              },
            ],
            "EntryPoint": [
              "",
            ],
            "Essential": true,
            "Image": "ghcr.io/cloudquery/cloudquery:3.5.0",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "MountPoints": [
              {
                "ContainerPath": "/var/scratch",
                "ReadOnly": true,
                "SourceVolume": "scratch",
              },
            ],
            "Name": "CloudquerySource-OrgWideCloudFormationContainer",
          },
          {
            "Environment": [
              {
                "Name": "STACK",
                "Value": "deploy",
              },
              {
                "Name": "STAGE",
                "Value": "TEST",
              },
              {
                "Name": "APP",
                "Value": "cloudquery",
              },
              {
                "Name": "GU_REPO",
                "Value": "guardian/service-catalogue",
              },
            ],
            "Essential": true,
            "FirelensConfiguration": {
              "Options": {
                "config-file-type": "file",
                "config-file-value": "/custom.conf",
                "enable-ecs-log-metadata": "true",
              },
              "Type": "fluentbit",
            },
            "Image": "ghcr.io/guardian/hackday-firelens:main",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "CloudquerySourceOrgWideCloudFormationTaskDefinitionCloudquerySourceOrgWideCloudFormationFirelensLogGroup36609B15",
                },
                "awslogs-region": {
                  "Ref": "AWS::Region",
                },
                "awslogs-stream-prefix": "deploy/TEST/cloudquery",
              },
            },
            "Name": "CloudquerySource-OrgWideCloudFormationFirelens",
          },
        ],
        "Cpu": "256",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "CloudquerySourceOrgWideCloudFormationTaskDefinitionExecutionRole73C70234",
            "Arn",
          ],
        },
        "Family": "CloudQueryCloudquerySourceOrgWideCloudFormationTaskDefinition1F53C12D",
        "Memory": "512",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE",
        ],
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "CloudquerySourceOrgWideCloudFormationTaskDefinitionTaskRole07134B33",
            "Arn",
          ],
        },
        "Volumes": [
          {
            "Host": {},
            "Name": "scratch",
          },
        ],
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "CloudquerySourceOrgWideCloudFormationTaskDefinitionEventsRole2C0BF887": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceOrgWideCloudFormationTaskDefinitionEventsRoleDefaultPolicy74F50F3C": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ecs:RunTask",
              "Condition": {
                "ArnEquals": {
                  "ecs:cluster": {
                    "Fn::GetAtt": [
                      "cloudqueryCluster5370C11B",
                      "Arn",
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Resource": {
                "Ref": "CloudquerySourceOrgWideCloudFormationTaskDefinitionDA4F8A51",
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceOrgWideCloudFormationTaskDefinitionExecutionRole73C70234",
                  "Arn",
                ],
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceOrgWideCloudFormationTaskDefinitionTaskRole07134B33",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceOrgWideCloudFormationTaskDefinitionEventsRoleDefaultPolicy74F50F3C",
        "Roles": [
          {
            "Ref": "CloudquerySourceOrgWideCloudFormationTaskDefinitionEventsRole2C0BF887",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceOrgWideCloudFormationTaskDefinitionExecutionRole73C70234": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceOrgWideCloudFormationTaskDefinitionExecutionRoleDefaultPolicy789C9373": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceOrgWideCloudFormationTaskDefinitionCloudquerySourceOrgWideCloudFormationFirelensLogGroup36609B15",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceOrgWideCloudFormationTaskDefinitionExecutionRoleDefaultPolicy789C9373",
        "Roles": [
          {
            "Ref": "CloudquerySourceOrgWideCloudFormationTaskDefinitionExecutionRole73C70234",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceOrgWideCloudFormationTaskDefinitionTaskRole07134B33": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/ReadOnlyAccess",
        ],
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceOrgWideCloudFormationTaskDefinitionTaskRoleDefaultPolicyDE6AF1BA": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kinesis:Describe*",
                "kinesis:Put*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":kinesis:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":stream/",
                    {
                      "Ref": "LoggingStreamName",
                    },
                  ],
                ],
              },
            },
            {
              "Action": "organizations:List*",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "cloudformation:GetTemplate",
                "dynamodb:GetItem",
                "dynamodb:BatchGetItem",
                "dynamodb:Query",
                "dynamodb:Scan",
                "ec2:GetConsoleOutput",
                "ec2:GetConsoleScreenshot",
                "ecr:BatchGetImage",
                "ecr:GetAuthorizationToken",
                "ecr:GetDownloadUrlForLayer",
                "kinesis:Get*",
                "lambda:GetFunction",
                "logs:GetLogEvents",
                "sdb:Select*",
                "sqs:ReceiveMessage",
              ],
              "Effect": "Deny",
              "Resource": "*",
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": "arn:aws:iam::*:role/cloudquery-access",
            },
            {
              "Action": "rds-db:connect",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":rds-db:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":dbuser:",
                    {
                      "Fn::GetAtt": [
                        "PostgresInstance16DE4286E",
                        "DbiResourceId",
                      ],
                    },
                    "/cloudquery",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceOrgWideCloudFormationTaskDefinitionTaskRoleDefaultPolicyDE6AF1BA",
        "Roles": [
          {
            "Ref": "CloudquerySourceOrgWideCloudFormationTaskDefinitionTaskRole07134B33",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceOrgWideCloudwatchAlarmsScheduledEventRuleB72D02A5": {
      "Properties": {
        "ScheduleExpression": "rate(1 day)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "cloudqueryCluster5370C11B",
                "Arn",
              ],
            },
            "EcsParameters": {
              "LaunchType": "FARGATE",
              "NetworkConfiguration": {
                "AwsVpcConfiguration": {
                  "AssignPublicIp": "DISABLED",
                  "SecurityGroups": [
                    {
                      "Fn::GetAtt": [
                        "PostgresAccessSecurityGroupCloudqueryE959A23F",
                        "GroupId",
                      ],
                    },
                  ],
                  "Subnets": {
                    "Ref": "PrivateSubnets",
                  },
                },
              },
              "TaskCount": 1,
              "TaskDefinitionArn": {
                "Ref": "CloudquerySourceOrgWideCloudwatchAlarmsTaskDefinitionF28C916F",
              },
            },
            "Id": "Target0",
            "Input": "{}",
            "RoleArn": {
              "Fn::GetAtt": [
                "CloudquerySourceOrgWideCloudwatchAlarmsTaskDefinitionEventsRole44F1283B",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "CloudquerySourceOrgWideCloudwatchAlarmsTaskDefinitionCloudquerySourceOrgWideCloudwatchAlarmsFirelensLogGroup5A8CFBF6": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionInDays": 1,
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "CloudquerySourceOrgWideCloudwatchAlarmsTaskDefinitionEventsRole44F1283B": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceOrgWideCloudwatchAlarmsTaskDefinitionEventsRoleDefaultPolicyFFA9197F": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ecs:RunTask",
              "Condition": {
                "ArnEquals": {
                  "ecs:cluster": {
                    "Fn::GetAtt": [
                      "cloudqueryCluster5370C11B",
                      "Arn",
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Resource": {
                "Ref": "CloudquerySourceOrgWideCloudwatchAlarmsTaskDefinitionF28C916F",
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceOrgWideCloudwatchAlarmsTaskDefinitionExecutionRole6970372F",
                  "Arn",
                ],
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceOrgWideCloudwatchAlarmsTaskDefinitionTaskRoleFB6E9716",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceOrgWideCloudwatchAlarmsTaskDefinitionEventsRoleDefaultPolicyFFA9197F",
        "Roles": [
          {
            "Ref": "CloudquerySourceOrgWideCloudwatchAlarmsTaskDefinitionEventsRole44F1283B",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceOrgWideCloudwatchAlarmsTaskDefinitionExecutionRole6970372F": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceOrgWideCloudwatchAlarmsTaskDefinitionExecutionRoleDefaultPolicy7EA502FA": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceOrgWideCloudwatchAlarmsTaskDefinitionCloudquerySourceOrgWideCloudwatchAlarmsFirelensLogGroup5A8CFBF6",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceOrgWideCloudwatchAlarmsTaskDefinitionExecutionRoleDefaultPolicy7EA502FA",
        "Roles": [
          {
            "Ref": "CloudquerySourceOrgWideCloudwatchAlarmsTaskDefinitionExecutionRole6970372F",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceOrgWideCloudwatchAlarmsTaskDefinitionF28C916F": {
      "Properties": {
        "ContainerDefinitions": [
          {
            "Command": [
              "/bin/bash",
              "-c",
              "PG_PASSWORD=$(/usr/local/bin/aws rds generate-db-auth-token --hostname $DB_HOST --port 5432 --region eu-west-1 --username cloudquery);echo "user=cloudquery password=$PG_PASSWORD host=$DB_HOST port=5432 dbname=postgres sslmode=verify-full" > /var/scratch/connection_string",
            ],
            "EntryPoint": [
              "",
            ],
            "Environment": [
              {
                "Name": "DB_HOST",
                "Value": {
                  "Fn::GetAtt": [
                    "PostgresInstance16DE4286E",
                    "Endpoint.Address",
                  ],
                },
              },
            ],
            "Essential": false,
            "Image": "public.ecr.aws/aws-cli/aws-cli",
            "MountPoints": [
              {
                "ContainerPath": "/var/scratch",
                "ReadOnly": false,
                "SourceVolume": "scratch",
              },
            ],
            "Name": "CloudquerySource-OrgWideCloudwatchAlarmsAwsCli",
          },
          {
            "Command": [
              "/bin/sh",
              "-c",
              "wget -O /usr/local/share/ca-certificates/rds-ca-2019-root.crt -q https://s3.amazonaws.com/rds-downloads/rds-ca-2019-root.pem && update-ca-certificates;printf 'kind: source
spec:
  name: aws
  path: cloudquery/aws
  version: v17.4.0
  tables:
    - aws_cloudwatch_alarms
  destinations:
    - postgresql
  spec:
    regions:
      - eu-west-1
      - eu-west-2
      - us-east-1
      - us-east-2
      - us-west-1
      - ap-southeast-2
      - ca-central-1
    org:
      member_role_name: cloudquery-access
      organization_units:
        - ou-123
' > /source.yaml;printf 'kind: destination
spec:
  name: postgresql
  registry: github
  path: cloudquery/postgresql
  version: v4.2.0
  migrate_mode: forced
  spec:
    connection_string: \${file:/var/scratch/connection_string}
' > /destination.yaml;/app/cloudquery sync /source.yaml /destination.yaml --log-format json --log-console",
            ],
            "DependsOn": [
              {
                "Condition": "SUCCESS",
                "ContainerName": "CloudquerySource-OrgWideCloudwatchAlarmsAwsCli",
              },
            ],
            "EntryPoint": [
              "",
            ],
            "Essential": true,
            "Image": "ghcr.io/cloudquery/cloudquery:3.5.0",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "MountPoints": [
              {
                "ContainerPath": "/var/scratch",
                "ReadOnly": true,
                "SourceVolume": "scratch",
              },
            ],
            "Name": "CloudquerySource-OrgWideCloudwatchAlarmsContainer",
          },
          {
            "Environment": [
              {
                "Name": "STACK",
                "Value": "deploy",
              },
              {
                "Name": "STAGE",
                "Value": "TEST",
              },
              {
                "Name": "APP",
                "Value": "cloudquery",
              },
              {
                "Name": "GU_REPO",
                "Value": "guardian/service-catalogue",
              },
            ],
            "Essential": true,
            "FirelensConfiguration": {
              "Options": {
                "config-file-type": "file",
                "config-file-value": "/custom.conf",
                "enable-ecs-log-metadata": "true",
              },
              "Type": "fluentbit",
            },
            "Image": "ghcr.io/guardian/hackday-firelens:main",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "CloudquerySourceOrgWideCloudwatchAlarmsTaskDefinitionCloudquerySourceOrgWideCloudwatchAlarmsFirelensLogGroup5A8CFBF6",
                },
                "awslogs-region": {
                  "Ref": "AWS::Region",
                },
                "awslogs-stream-prefix": "deploy/TEST/cloudquery",
              },
            },
            "Name": "CloudquerySource-OrgWideCloudwatchAlarmsFirelens",
          },
        ],
        "Cpu": "256",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "CloudquerySourceOrgWideCloudwatchAlarmsTaskDefinitionExecutionRole6970372F",
            "Arn",
          ],
        },
        "Family": "CloudQueryCloudquerySourceOrgWideCloudwatchAlarmsTaskDefinitionE2AF961D",
        "Memory": "512",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE",
        ],
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "CloudquerySourceOrgWideCloudwatchAlarmsTaskDefinitionTaskRoleFB6E9716",
            "Arn",
          ],
        },
        "Volumes": [
          {
            "Host": {},
            "Name": "scratch",
          },
        ],
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "CloudquerySourceOrgWideCloudwatchAlarmsTaskDefinitionTaskRoleDefaultPolicy7C3C509A": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kinesis:Describe*",
                "kinesis:Put*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":kinesis:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":stream/",
                    {
                      "Ref": "LoggingStreamName",
                    },
                  ],
                ],
              },
            },
            {
              "Action": "organizations:List*",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "cloudformation:GetTemplate",
                "dynamodb:GetItem",
                "dynamodb:BatchGetItem",
                "dynamodb:Query",
                "dynamodb:Scan",
                "ec2:GetConsoleOutput",
                "ec2:GetConsoleScreenshot",
                "ecr:BatchGetImage",
                "ecr:GetAuthorizationToken",
                "ecr:GetDownloadUrlForLayer",
                "kinesis:Get*",
                "lambda:GetFunction",
                "logs:GetLogEvents",
                "sdb:Select*",
                "sqs:ReceiveMessage",
              ],
              "Effect": "Deny",
              "Resource": "*",
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": "arn:aws:iam::*:role/cloudquery-access",
            },
            {
              "Action": "rds-db:connect",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":rds-db:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":dbuser:",
                    {
                      "Fn::GetAtt": [
                        "PostgresInstance16DE4286E",
                        "DbiResourceId",
                      ],
                    },
                    "/cloudquery",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceOrgWideCloudwatchAlarmsTaskDefinitionTaskRoleDefaultPolicy7C3C509A",
        "Roles": [
          {
            "Ref": "CloudquerySourceOrgWideCloudwatchAlarmsTaskDefinitionTaskRoleFB6E9716",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceOrgWideCloudwatchAlarmsTaskDefinitionTaskRoleFB6E9716": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/ReadOnlyAccess",
        ],
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceOrgWideLoadBalancersScheduledEventRule1B13EFF3": {
      "Properties": {
        "ScheduleExpression": "rate(1 day)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "cloudqueryCluster5370C11B",
                "Arn",
              ],
            },
            "EcsParameters": {
              "LaunchType": "FARGATE",
              "NetworkConfiguration": {
                "AwsVpcConfiguration": {
                  "AssignPublicIp": "DISABLED",
                  "SecurityGroups": [
                    {
                      "Fn::GetAtt": [
                        "PostgresAccessSecurityGroupCloudqueryE959A23F",
                        "GroupId",
                      ],
                    },
                  ],
                  "Subnets": {
                    "Ref": "PrivateSubnets",
                  },
                },
              },
              "TaskCount": 1,
              "TaskDefinitionArn": {
                "Ref": "CloudquerySourceOrgWideLoadBalancersTaskDefinitionF1D11F23",
              },
            },
            "Id": "Target0",
            "Input": "{}",
            "RoleArn": {
              "Fn::GetAtt": [
                "CloudquerySourceOrgWideLoadBalancersTaskDefinitionEventsRoleC6DAFC26",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "CloudquerySourceOrgWideLoadBalancersTaskDefinitionCloudquerySourceOrgWideLoadBalancersFirelensLogGroupC2738C36": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionInDays": 1,
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "CloudquerySourceOrgWideLoadBalancersTaskDefinitionEventsRoleC6DAFC26": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceOrgWideLoadBalancersTaskDefinitionEventsRoleDefaultPolicy0BDC4116": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ecs:RunTask",
              "Condition": {
                "ArnEquals": {
                  "ecs:cluster": {
                    "Fn::GetAtt": [
                      "cloudqueryCluster5370C11B",
                      "Arn",
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Resource": {
                "Ref": "CloudquerySourceOrgWideLoadBalancersTaskDefinitionF1D11F23",
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceOrgWideLoadBalancersTaskDefinitionExecutionRole78CACF8A",
                  "Arn",
                ],
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceOrgWideLoadBalancersTaskDefinitionTaskRoleABB2ABAD",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceOrgWideLoadBalancersTaskDefinitionEventsRoleDefaultPolicy0BDC4116",
        "Roles": [
          {
            "Ref": "CloudquerySourceOrgWideLoadBalancersTaskDefinitionEventsRoleC6DAFC26",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceOrgWideLoadBalancersTaskDefinitionExecutionRole78CACF8A": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceOrgWideLoadBalancersTaskDefinitionExecutionRoleDefaultPolicy3D7183B9": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceOrgWideLoadBalancersTaskDefinitionCloudquerySourceOrgWideLoadBalancersFirelensLogGroupC2738C36",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceOrgWideLoadBalancersTaskDefinitionExecutionRoleDefaultPolicy3D7183B9",
        "Roles": [
          {
            "Ref": "CloudquerySourceOrgWideLoadBalancersTaskDefinitionExecutionRole78CACF8A",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceOrgWideLoadBalancersTaskDefinitionF1D11F23": {
      "Properties": {
        "ContainerDefinitions": [
          {
            "Command": [
              "/bin/bash",
              "-c",
              "PG_PASSWORD=$(/usr/local/bin/aws rds generate-db-auth-token --hostname $DB_HOST --port 5432 --region eu-west-1 --username cloudquery);echo "user=cloudquery password=$PG_PASSWORD host=$DB_HOST port=5432 dbname=postgres sslmode=verify-full" > /var/scratch/connection_string",
            ],
            "EntryPoint": [
              "",
            ],
            "Environment": [
              {
                "Name": "DB_HOST",
                "Value": {
                  "Fn::GetAtt": [
                    "PostgresInstance16DE4286E",
                    "Endpoint.Address",
                  ],
                },
              },
            ],
            "Essential": false,
            "Image": "public.ecr.aws/aws-cli/aws-cli",
            "MountPoints": [
              {
                "ContainerPath": "/var/scratch",
                "ReadOnly": false,
                "SourceVolume": "scratch",
              },
            ],
            "Name": "CloudquerySource-OrgWideLoadBalancersAwsCli",
          },
          {
            "Command": [
              "/bin/sh",
              "-c",
              "wget -O /usr/local/share/ca-certificates/rds-ca-2019-root.crt -q https://s3.amazonaws.com/rds-downloads/rds-ca-2019-root.pem && update-ca-certificates;printf 'kind: source
spec:
  name: aws
  path: cloudquery/aws
  version: v17.4.0
  tables:
    - aws_elbv1_*
    - aws_elbv2_*
  destinations:
    - postgresql
  spec:
    regions:
      - eu-west-1
      - eu-west-2
      - us-east-1
      - us-east-2
      - us-west-1
      - ap-southeast-2
      - ca-central-1
    org:
      member_role_name: cloudquery-access
      organization_units:
        - ou-123
' > /source.yaml;printf 'kind: destination
spec:
  name: postgresql
  registry: github
  path: cloudquery/postgresql
  version: v4.2.0
  migrate_mode: forced
  spec:
    connection_string: \${file:/var/scratch/connection_string}
' > /destination.yaml;/app/cloudquery sync /source.yaml /destination.yaml --log-format json --log-console",
            ],
            "DependsOn": [
              {
                "Condition": "SUCCESS",
                "ContainerName": "CloudquerySource-OrgWideLoadBalancersAwsCli",
              },
            ],
            "EntryPoint": [
              "",
            ],
            "Essential": true,
            "Image": "ghcr.io/cloudquery/cloudquery:3.5.0",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "MountPoints": [
              {
                "ContainerPath": "/var/scratch",
                "ReadOnly": true,
                "SourceVolume": "scratch",
              },
            ],
            "Name": "CloudquerySource-OrgWideLoadBalancersContainer",
          },
          {
            "Environment": [
              {
                "Name": "STACK",
                "Value": "deploy",
              },
              {
                "Name": "STAGE",
                "Value": "TEST",
              },
              {
                "Name": "APP",
                "Value": "cloudquery",
              },
              {
                "Name": "GU_REPO",
                "Value": "guardian/service-catalogue",
              },
            ],
            "Essential": true,
            "FirelensConfiguration": {
              "Options": {
                "config-file-type": "file",
                "config-file-value": "/custom.conf",
                "enable-ecs-log-metadata": "true",
              },
              "Type": "fluentbit",
            },
            "Image": "ghcr.io/guardian/hackday-firelens:main",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "CloudquerySourceOrgWideLoadBalancersTaskDefinitionCloudquerySourceOrgWideLoadBalancersFirelensLogGroupC2738C36",
                },
                "awslogs-region": {
                  "Ref": "AWS::Region",
                },
                "awslogs-stream-prefix": "deploy/TEST/cloudquery",
              },
            },
            "Name": "CloudquerySource-OrgWideLoadBalancersFirelens",
          },
        ],
        "Cpu": "256",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "CloudquerySourceOrgWideLoadBalancersTaskDefinitionExecutionRole78CACF8A",
            "Arn",
          ],
        },
        "Family": "CloudQueryCloudquerySourceOrgWideLoadBalancersTaskDefinitionD98C0E9B",
        "Memory": "512",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE",
        ],
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "CloudquerySourceOrgWideLoadBalancersTaskDefinitionTaskRoleABB2ABAD",
            "Arn",
          ],
        },
        "Volumes": [
          {
            "Host": {},
            "Name": "scratch",
          },
        ],
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "CloudquerySourceOrgWideLoadBalancersTaskDefinitionTaskRoleABB2ABAD": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/ReadOnlyAccess",
        ],
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceOrgWideLoadBalancersTaskDefinitionTaskRoleDefaultPolicy07CCC4DB": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kinesis:Describe*",
                "kinesis:Put*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":kinesis:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":stream/",
                    {
                      "Ref": "LoggingStreamName",
                    },
                  ],
                ],
              },
            },
            {
              "Action": "organizations:List*",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "cloudformation:GetTemplate",
                "dynamodb:GetItem",
                "dynamodb:BatchGetItem",
                "dynamodb:Query",
                "dynamodb:Scan",
                "ec2:GetConsoleOutput",
                "ec2:GetConsoleScreenshot",
                "ecr:BatchGetImage",
                "ecr:GetAuthorizationToken",
                "ecr:GetDownloadUrlForLayer",
                "kinesis:Get*",
                "lambda:GetFunction",
                "logs:GetLogEvents",
                "sdb:Select*",
                "sqs:ReceiveMessage",
              ],
              "Effect": "Deny",
              "Resource": "*",
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": "arn:aws:iam::*:role/cloudquery-access",
            },
            {
              "Action": "rds-db:connect",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":rds-db:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":dbuser:",
                    {
                      "Fn::GetAtt": [
                        "PostgresInstance16DE4286E",
                        "DbiResourceId",
                      ],
                    },
                    "/cloudquery",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceOrgWideLoadBalancersTaskDefinitionTaskRoleDefaultPolicy07CCC4DB",
        "Roles": [
          {
            "Ref": "CloudquerySourceOrgWideLoadBalancersTaskDefinitionTaskRoleABB2ABAD",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceSecurityAccessAnalyserScheduledEventRuleF5D02F1B": {
      "Properties": {
        "ScheduleExpression": "rate(1 day)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "cloudqueryCluster5370C11B",
                "Arn",
              ],
            },
            "EcsParameters": {
              "LaunchType": "FARGATE",
              "NetworkConfiguration": {
                "AwsVpcConfiguration": {
                  "AssignPublicIp": "DISABLED",
                  "SecurityGroups": [
                    {
                      "Fn::GetAtt": [
                        "PostgresAccessSecurityGroupCloudqueryE959A23F",
                        "GroupId",
                      ],
                    },
                  ],
                  "Subnets": {
                    "Ref": "PrivateSubnets",
                  },
                },
              },
              "TaskCount": 1,
              "TaskDefinitionArn": {
                "Ref": "CloudquerySourceSecurityAccessAnalyserTaskDefinitionEEA17FBA",
              },
            },
            "Id": "Target0",
            "Input": "{}",
            "RoleArn": {
              "Fn::GetAtt": [
                "CloudquerySourceSecurityAccessAnalyserTaskDefinitionEventsRole9378F427",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "CloudquerySourceSecurityAccessAnalyserTaskDefinitionCloudquerySourceSecurityAccessAnalyserFirelensLogGroup5B3FE9C1": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionInDays": 1,
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "CloudquerySourceSecurityAccessAnalyserTaskDefinitionEEA17FBA": {
      "Properties": {
        "ContainerDefinitions": [
          {
            "Command": [
              "/bin/bash",
              "-c",
              "PG_PASSWORD=$(/usr/local/bin/aws rds generate-db-auth-token --hostname $DB_HOST --port 5432 --region eu-west-1 --username cloudquery);echo "user=cloudquery password=$PG_PASSWORD host=$DB_HOST port=5432 dbname=postgres sslmode=verify-full" > /var/scratch/connection_string",
            ],
            "EntryPoint": [
              "",
            ],
            "Environment": [
              {
                "Name": "DB_HOST",
                "Value": {
                  "Fn::GetAtt": [
                    "PostgresInstance16DE4286E",
                    "Endpoint.Address",
                  ],
                },
              },
            ],
            "Essential": false,
            "Image": "public.ecr.aws/aws-cli/aws-cli",
            "MountPoints": [
              {
                "ContainerPath": "/var/scratch",
                "ReadOnly": false,
                "SourceVolume": "scratch",
              },
            ],
            "Name": "CloudquerySource-SecurityAccessAnalyserAwsCli",
          },
          {
            "Command": [
              "/bin/sh",
              "-c",
              "wget -O /usr/local/share/ca-certificates/rds-ca-2019-root.crt -q https://s3.amazonaws.com/rds-downloads/rds-ca-2019-root.pem && update-ca-certificates;printf 'kind: source
spec:
  name: aws
  path: cloudquery/aws
  version: v17.4.0
  tables:
    - aws_accessanalyzer_analyzers
    - aws_accessanalyzer_analyzer_archive_rules
    - aws_accessanalyzer_analyzer_findings
  destinations:
    - postgresql
  spec:
    regions:
      - eu-west-1
      - eu-west-2
      - us-east-1
      - us-east-2
      - us-west-1
      - ap-southeast-2
      - ca-central-1
    accounts:
      - id: cq-for-000000000015
        role_arn: arn:aws:iam::000000000015:role/cloudquery-access
' > /source.yaml;printf 'kind: destination
spec:
  name: postgresql
  registry: github
  path: cloudquery/postgresql
  version: v4.2.0
  migrate_mode: forced
  spec:
    connection_string: \${file:/var/scratch/connection_string}
' > /destination.yaml;/app/cloudquery sync /source.yaml /destination.yaml --log-format json --log-console",
            ],
            "DependsOn": [
              {
                "Condition": "SUCCESS",
                "ContainerName": "CloudquerySource-SecurityAccessAnalyserAwsCli",
              },
            ],
            "EntryPoint": [
              "",
            ],
            "Essential": true,
            "Image": "ghcr.io/cloudquery/cloudquery:3.5.0",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "MountPoints": [
              {
                "ContainerPath": "/var/scratch",
                "ReadOnly": true,
                "SourceVolume": "scratch",
              },
            ],
            "Name": "CloudquerySource-SecurityAccessAnalyserContainer",
          },
          {
            "Environment": [
              {
                "Name": "STACK",
                "Value": "deploy",
              },
              {
                "Name": "STAGE",
                "Value": "TEST",
              },
              {
                "Name": "APP",
                "Value": "cloudquery",
              },
              {
                "Name": "GU_REPO",
                "Value": "guardian/service-catalogue",
              },
            ],
            "Essential": true,
            "FirelensConfiguration": {
              "Options": {
                "config-file-type": "file",
                "config-file-value": "/custom.conf",
                "enable-ecs-log-metadata": "true",
              },
              "Type": "fluentbit",
            },
            "Image": "ghcr.io/guardian/hackday-firelens:main",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "CloudquerySourceSecurityAccessAnalyserTaskDefinitionCloudquerySourceSecurityAccessAnalyserFirelensLogGroup5B3FE9C1",
                },
                "awslogs-region": {
                  "Ref": "AWS::Region",
                },
                "awslogs-stream-prefix": "deploy/TEST/cloudquery",
              },
            },
            "Name": "CloudquerySource-SecurityAccessAnalyserFirelens",
          },
        ],
        "Cpu": "256",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "CloudquerySourceSecurityAccessAnalyserTaskDefinitionExecutionRole3D443B15",
            "Arn",
          ],
        },
        "Family": "CloudQueryCloudquerySourceSecurityAccessAnalyserTaskDefinitionA7A5AECB",
        "Memory": "512",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE",
        ],
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "CloudquerySourceSecurityAccessAnalyserTaskDefinitionTaskRole8B920EA4",
            "Arn",
          ],
        },
        "Volumes": [
          {
            "Host": {},
            "Name": "scratch",
          },
        ],
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "CloudquerySourceSecurityAccessAnalyserTaskDefinitionEventsRole9378F427": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceSecurityAccessAnalyserTaskDefinitionEventsRoleDefaultPolicy0FE84DC4": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ecs:RunTask",
              "Condition": {
                "ArnEquals": {
                  "ecs:cluster": {
                    "Fn::GetAtt": [
                      "cloudqueryCluster5370C11B",
                      "Arn",
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Resource": {
                "Ref": "CloudquerySourceSecurityAccessAnalyserTaskDefinitionEEA17FBA",
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceSecurityAccessAnalyserTaskDefinitionExecutionRole3D443B15",
                  "Arn",
                ],
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceSecurityAccessAnalyserTaskDefinitionTaskRole8B920EA4",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceSecurityAccessAnalyserTaskDefinitionEventsRoleDefaultPolicy0FE84DC4",
        "Roles": [
          {
            "Ref": "CloudquerySourceSecurityAccessAnalyserTaskDefinitionEventsRole9378F427",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceSecurityAccessAnalyserTaskDefinitionExecutionRole3D443B15": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceSecurityAccessAnalyserTaskDefinitionExecutionRoleDefaultPolicy4CB6BB83": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceSecurityAccessAnalyserTaskDefinitionCloudquerySourceSecurityAccessAnalyserFirelensLogGroup5B3FE9C1",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceSecurityAccessAnalyserTaskDefinitionExecutionRoleDefaultPolicy4CB6BB83",
        "Roles": [
          {
            "Ref": "CloudquerySourceSecurityAccessAnalyserTaskDefinitionExecutionRole3D443B15",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceSecurityAccessAnalyserTaskDefinitionTaskRole8B920EA4": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/ReadOnlyAccess",
        ],
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceSecurityAccessAnalyserTaskDefinitionTaskRoleDefaultPolicyE507D9C0": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kinesis:Describe*",
                "kinesis:Put*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":kinesis:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":stream/",
                    {
                      "Ref": "LoggingStreamName",
                    },
                  ],
                ],
              },
            },
            {
              "Action": [
                "cloudformation:GetTemplate",
                "dynamodb:GetItem",
                "dynamodb:BatchGetItem",
                "dynamodb:Query",
                "dynamodb:Scan",
                "ec2:GetConsoleOutput",
                "ec2:GetConsoleScreenshot",
                "ecr:BatchGetImage",
                "ecr:GetAuthorizationToken",
                "ecr:GetDownloadUrlForLayer",
                "kinesis:Get*",
                "lambda:GetFunction",
                "logs:GetLogEvents",
                "sdb:Select*",
                "sqs:ReceiveMessage",
              ],
              "Effect": "Deny",
              "Resource": "*",
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": "arn:aws:iam::000000000015:role/cloudquery-access",
            },
            {
              "Action": "rds-db:connect",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":rds-db:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":dbuser:",
                    {
                      "Fn::GetAtt": [
                        "PostgresInstance16DE4286E",
                        "DbiResourceId",
                      ],
                    },
                    "/cloudquery",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceSecurityAccessAnalyserTaskDefinitionTaskRoleDefaultPolicyE507D9C0",
        "Roles": [
          {
            "Ref": "CloudquerySourceSecurityAccessAnalyserTaskDefinitionTaskRole8B920EA4",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceSnykAllScheduledEventRule73601A00": {
      "Properties": {
        "ScheduleExpression": "rate(1 day)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "cloudqueryCluster5370C11B",
                "Arn",
              ],
            },
            "EcsParameters": {
              "LaunchType": "FARGATE",
              "NetworkConfiguration": {
                "AwsVpcConfiguration": {
                  "AssignPublicIp": "DISABLED",
                  "SecurityGroups": [
                    {
                      "Fn::GetAtt": [
                        "PostgresAccessSecurityGroupCloudqueryE959A23F",
                        "GroupId",
                      ],
                    },
                  ],
                  "Subnets": {
                    "Ref": "PrivateSubnets",
                  },
                },
              },
              "TaskCount": 1,
              "TaskDefinitionArn": {
                "Ref": "CloudquerySourceSnykAllTaskDefinitionC8C1F3EC",
              },
            },
            "Id": "Target0",
            "Input": "{}",
            "RoleArn": {
              "Fn::GetAtt": [
                "CloudquerySourceSnykAllTaskDefinitionEventsRoleCC78F3D4",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "CloudquerySourceSnykAllTaskDefinitionC8C1F3EC": {
      "Properties": {
        "ContainerDefinitions": [
          {
            "Command": [
              "/bin/bash",
              "-c",
              "PG_PASSWORD=$(/usr/local/bin/aws rds generate-db-auth-token --hostname $DB_HOST --port 5432 --region eu-west-1 --username cloudquery);echo "user=cloudquery password=$PG_PASSWORD host=$DB_HOST port=5432 dbname=postgres sslmode=verify-full" > /var/scratch/connection_string",
            ],
            "EntryPoint": [
              "",
            ],
            "Environment": [
              {
                "Name": "DB_HOST",
                "Value": {
                  "Fn::GetAtt": [
                    "PostgresInstance16DE4286E",
                    "Endpoint.Address",
                  ],
                },
              },
            ],
            "Essential": false,
            "Image": "public.ecr.aws/aws-cli/aws-cli",
            "MountPoints": [
              {
                "ContainerPath": "/var/scratch",
                "ReadOnly": false,
                "SourceVolume": "scratch",
              },
            ],
            "Name": "CloudquerySource-SnykAllAwsCli",
          },
          {
            "Command": [
              "/bin/sh",
              "-c",
              "wget -O /usr/local/share/ca-certificates/rds-ca-2019-root.crt -q https://s3.amazonaws.com/rds-downloads/rds-ca-2019-root.pem && update-ca-certificates;printf 'kind: source
spec:
  name: snyk
  path: cloudquery/snyk
  version: v3.0.0
  tables:
    - snyk_*
  destinations:
    - postgresql
  spec:
    api_key: \${SNYK_API_KEY}
    table_options:
      snyk_reporting_issues:
        period: 30d
' > /source.yaml;printf 'kind: destination
spec:
  name: postgresql
  registry: github
  path: cloudquery/postgresql
  version: v4.2.0
  migrate_mode: forced
  spec:
    connection_string: \${file:/var/scratch/connection_string}
' > /destination.yaml;/app/cloudquery sync /source.yaml /destination.yaml --log-format json --log-console",
            ],
            "DependsOn": [
              {
                "Condition": "SUCCESS",
                "ContainerName": "CloudquerySource-SnykAllAwsCli",
              },
            ],
            "EntryPoint": [
              "",
            ],
            "Essential": true,
            "Image": "ghcr.io/cloudquery/cloudquery:3.5.0",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "MountPoints": [
              {
                "ContainerPath": "/var/scratch",
                "ReadOnly": true,
                "SourceVolume": "scratch",
              },
            ],
            "Name": "CloudquerySource-SnykAllContainer",
            "Secrets": [
              {
                "Name": "SNYK_API_KEY",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":secretsmanager:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":secret:/TEST/deploy/cloudquery/snyk-credentials:api-key::",
                    ],
                  ],
                },
              },
            ],
          },
          {
            "Environment": [
              {
                "Name": "STACK",
                "Value": "deploy",
              },
              {
                "Name": "STAGE",
                "Value": "TEST",
              },
              {
                "Name": "APP",
                "Value": "cloudquery",
              },
              {
                "Name": "GU_REPO",
                "Value": "guardian/service-catalogue",
              },
            ],
            "Essential": true,
            "FirelensConfiguration": {
              "Options": {
                "config-file-type": "file",
                "config-file-value": "/custom.conf",
                "enable-ecs-log-metadata": "true",
              },
              "Type": "fluentbit",
            },
            "Image": "ghcr.io/guardian/hackday-firelens:main",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "CloudquerySourceSnykAllTaskDefinitionCloudquerySourceSnykAllFirelensLogGroupB81AA085",
                },
                "awslogs-region": {
                  "Ref": "AWS::Region",
                },
                "awslogs-stream-prefix": "deploy/TEST/cloudquery",
              },
            },
            "Name": "CloudquerySource-SnykAllFirelens",
          },
        ],
        "Cpu": "256",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "CloudquerySourceSnykAllTaskDefinitionExecutionRoleBE6C1050",
            "Arn",
          ],
        },
        "Family": "CloudQueryCloudquerySourceSnykAllTaskDefinition0DC6FF6E",
        "Memory": "512",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE",
        ],
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "CloudquerySourceSnykAllTaskDefinitionTaskRole09B2B669",
            "Arn",
          ],
        },
        "Volumes": [
          {
            "Host": {},
            "Name": "scratch",
          },
        ],
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "CloudquerySourceSnykAllTaskDefinitionCloudquerySourceSnykAllFirelensLogGroupB81AA085": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionInDays": 1,
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "CloudquerySourceSnykAllTaskDefinitionEventsRoleCC78F3D4": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceSnykAllTaskDefinitionEventsRoleDefaultPolicy9851E7F3": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ecs:RunTask",
              "Condition": {
                "ArnEquals": {
                  "ecs:cluster": {
                    "Fn::GetAtt": [
                      "cloudqueryCluster5370C11B",
                      "Arn",
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Resource": {
                "Ref": "CloudquerySourceSnykAllTaskDefinitionC8C1F3EC",
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceSnykAllTaskDefinitionExecutionRoleBE6C1050",
                  "Arn",
                ],
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceSnykAllTaskDefinitionTaskRole09B2B669",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceSnykAllTaskDefinitionEventsRoleDefaultPolicy9851E7F3",
        "Roles": [
          {
            "Ref": "CloudquerySourceSnykAllTaskDefinitionEventsRoleCC78F3D4",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceSnykAllTaskDefinitionExecutionRoleBE6C1050": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceSnykAllTaskDefinitionExecutionRoleDefaultPolicyCC076BFE": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":secretsmanager:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":secret:/TEST/deploy/cloudquery/snyk-credentials-??????",
                  ],
                ],
              },
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceSnykAllTaskDefinitionCloudquerySourceSnykAllFirelensLogGroupB81AA085",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceSnykAllTaskDefinitionExecutionRoleDefaultPolicyCC076BFE",
        "Roles": [
          {
            "Ref": "CloudquerySourceSnykAllTaskDefinitionExecutionRoleBE6C1050",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceSnykAllTaskDefinitionTaskRole09B2B669": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceSnykAllTaskDefinitionTaskRoleDefaultPolicy27C73C5C": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kinesis:Describe*",
                "kinesis:Put*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":kinesis:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":stream/",
                    {
                      "Ref": "LoggingStreamName",
                    },
                  ],
                ],
              },
            },
            {
              "Action": "rds-db:connect",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":rds-db:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":dbuser:",
                    {
                      "Fn::GetAtt": [
                        "PostgresInstance16DE4286E",
                        "DbiResourceId",
                      ],
                    },
                    "/cloudquery",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceSnykAllTaskDefinitionTaskRoleDefaultPolicy27C73C5C",
        "Roles": [
          {
            "Ref": "CloudquerySourceSnykAllTaskDefinitionTaskRole09B2B669",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "PostgresAccessSecurityGroupCloudqueryE959A23F": {
      "Properties": {
        "GroupDescription": "CloudQuery/PostgresAccessSecurityGroupCloudquery",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "Tags": [
          {
            "Key": "App",
            "Value": "cloudquery",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "VpcId": {
          "Ref": "VpcId",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "PostgresAccessSecurityGroupParam38DFE001": {
      "Properties": {
        "DataType": "text",
        "Name": "/TEST/deploy/cloudquery/postgres-access-security-group",
        "Tags": {
          "Stack": "deploy",
          "Stage": "TEST",
          "gu:cdk:version": "TEST",
          "gu:repo": "guardian/service-catalogue",
        },
        "Tier": "Standard",
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "PostgresAccessSecurityGroupCloudqueryE959A23F",
            "GroupId",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "PostgresInstance16DE4286E": {
      "DeletionPolicy": "Snapshot",
      "Properties": {
        "AllocatedStorage": "100",
        "CopyTagsToSnapshot": true,
        "DBInstanceClass": "db.t4g.small",
        "DBSubnetGroupName": {
          "Ref": "PostgresInstance1SubnetGroupCAC045A5",
        },
        "EnableIAMDatabaseAuthentication": true,
        "Engine": "postgres",
        "MasterUserPassword": {
          "Fn::Join": [
            "",
            [
              "{{resolve:secretsmanager:",
              {
                "Ref": "PostgresInstance1Secret7FA1A24B",
              },
              ":SecretString:password::}}",
            ],
          ],
        },
        "MasterUsername": {
          "Fn::Join": [
            "",
            [
              "{{resolve:secretsmanager:",
              {
                "Ref": "PostgresInstance1Secret7FA1A24B",
              },
              ":SecretString:username::}}",
            ],
          ],
        },
        "Port": "5432",
        "PubliclyAccessible": false,
        "StorageEncrypted": true,
        "StorageType": "gp2",
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "VPCSecurityGroups": [
          {
            "Fn::GetAtt": [
              "PostgresInstance1SecurityGroupFA28C3C0",
              "GroupId",
            ],
          },
        ],
      },
      "Type": "AWS::RDS::DBInstance",
      "UpdateReplacePolicy": "Snapshot",
    },
    "PostgresInstance1Secret7FA1A24B": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "Description": {
          "Fn::Join": [
            "",
            [
              "Generated by the CDK for stack: ",
              {
                "Ref": "AWS::StackName",
              },
            ],
          ],
        },
        "GenerateSecretString": {
          "ExcludeCharacters": " %+~\`#$&*()|[]{}:;<>?!'/@"\\",
          "GenerateStringKey": "password",
          "PasswordLength": 30,
          "SecretStringTemplate": "{"username":"postgres"}",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
    "PostgresInstance1SecretAttachmentBA0D257D": {
      "Properties": {
        "SecretId": {
          "Ref": "PostgresInstance1Secret7FA1A24B",
        },
        "TargetId": {
          "Ref": "PostgresInstance16DE4286E",
        },
        "TargetType": "AWS::RDS::DBInstance",
      },
      "Type": "AWS::SecretsManager::SecretTargetAttachment",
    },
    "PostgresInstance1SecurityGroupFA28C3C0": {
      "Properties": {
        "GroupDescription": "Security group for PostgresInstance1 database",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "VpcId": {
          "Ref": "VpcId",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "PostgresInstance1SecurityGroupfromCloudQueryPostgresAccessSecurityGroupCloudqueryAE627D465432AE3168F5": {
      "Properties": {
        "Description": "from CloudQueryPostgresAccessSecurityGroupCloudqueryAE627D46:5432",
        "FromPort": 5432,
        "GroupId": {
          "Fn::GetAtt": [
            "PostgresInstance1SecurityGroupFA28C3C0",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "PostgresAccessSecurityGroupCloudqueryE959A23F",
            "GroupId",
          ],
        },
        "ToPort": 5432,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "PostgresInstance1SubnetGroupCAC045A5": {
      "Properties": {
        "DBSubnetGroupDescription": "Subnet group for PostgresInstance1 database",
        "SubnetIds": {
          "Ref": "PrivateSubnets",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::RDS::DBSubnetGroup",
    },
    "PostgresInstanceEndpointAddress6E14162C": {
      "Properties": {
        "DataType": "text",
        "Name": "/TEST/deploy/cloudquery/postgres-instance-endpoint-address",
        "Tags": {
          "Stack": "deploy",
          "Stage": "TEST",
          "gu:cdk:version": "TEST",
          "gu:repo": "guardian/service-catalogue",
        },
        "Tier": "Standard",
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "PostgresInstance16DE4286E",
            "Endpoint.Address",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "cloudqueryCluster5370C11B": {
      "Properties": {
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::ECS::Cluster",
    },
    "cloudqueryClusterAF1C9455": {
      "Properties": {
        "CapacityProviders": [
          "FARGATE",
          "FARGATE_SPOT",
        ],
        "Cluster": {
          "Ref": "cloudqueryCluster5370C11B",
        },
        "DefaultCapacityProviderStrategy": [],
      },
      "Type": "AWS::ECS::ClusterCapacityProviderAssociations",
    },
  },
}
`;
