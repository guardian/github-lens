// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`The CloudQuery stack matches the snapshot 1`] = `
{
  "Metadata": {
    "gu:cdk:constructs": [
      "GuSubnetListParameter",
      "GuVpcParameter",
      "GuSecurityGroup",
      "GuDistributionBucketParameter",
      "GuAmiParameter",
      "GuInstanceRole",
      "GuDescribeEC2Policy",
      "GuLoggingStreamNameParameter",
      "GuLogShippingPolicy",
      "GuGetDistributablePolicy",
      "GuParameterStoreReadPolicy",
      "GuHttpsEgressSecurityGroup",
      "GuWazuhAccess",
      "GuAutoScalingGroup",
    ],
    "gu:cdk:version": "TEST",
  },
  "Parameters": {
    "AMICloudquery": {
      "Description": "Amazon Machine Image ID for the app cloudquery. Use this in conjunction with AMIgo to keep AMIs up to date.",
      "Type": "AWS::EC2::Image::Id",
    },
    "DistributionBucketName": {
      "Default": "/account/services/artifact.bucket",
      "Description": "SSM parameter containing the S3 bucket name holding distribution artifacts",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "LoggingStreamName": {
      "Default": "/account/services/logging.stream.name",
      "Description": "SSM parameter containing the Name (not ARN) on the kinesis stream",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "PrivateSubnets": {
      "Default": "/account/vpc/primary/subnets/private",
      "Description": "A list of private subnets",
      "Type": "AWS::SSM::Parameter::Value<List<AWS::EC2::Subnet::Id>>",
    },
    "VpcId": {
      "Default": "/account/vpc/primary/id",
      "Description": "Virtual Private Cloud to run EC2 instances within. Should NOT be the account default VPC.",
      "Type": "AWS::SSM::Parameter::Value<AWS::EC2::VPC::Id>",
    },
  },
  "Resources": {
    "AwsCustomRate0ScheduledEventRuleF56BF849": {
      "Properties": {
        "ScheduleExpression": "rate(2 hours)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "cloudqueryCluster5370C11B",
                "Arn",
              ],
            },
            "EcsParameters": {
              "LaunchType": "FARGATE",
              "NetworkConfiguration": {
                "AwsVpcConfiguration": {
                  "AssignPublicIp": "DISABLED",
                  "SecurityGroups": [
                    {
                      "Fn::GetAtt": [
                        "PostgresAccessSecurityGroupCloudqueryE959A23F",
                        "GroupId",
                      ],
                    },
                  ],
                  "Subnets": {
                    "Ref": "PrivateSubnets",
                  },
                },
              },
              "TaskCount": 1,
              "TaskDefinitionArn": {
                "Ref": "AwsCustomRate0TaskDefinition8D186693",
              },
            },
            "Id": "Target0",
            "Input": "{}",
            "RoleArn": {
              "Fn::GetAtt": [
                "AwsCustomRate0TaskDefinitionEventsRole941F70DB",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "AwsCustomRate0TaskDefinition8D186693": {
      "Properties": {
        "ContainerDefinitions": [
          {
            "Command": [
              "/bin/bash",
              "-c",
              "PG_PASSWORD=$(/usr/local/bin/aws rds generate-db-auth-token --hostname $DB_HOST --port 5432 --region eu-west-1 --username cloudquery);echo "user=cloudquery password=$PG_PASSWORD host=$DB_HOST port=5432 dbname=postgres sslmode=verify-full" > /var/scratch/connection_string",
            ],
            "EntryPoint": [
              "",
            ],
            "Environment": [
              {
                "Name": "DB_HOST",
                "Value": {
                  "Fn::GetAtt": [
                    "PostgresInstance16DE4286E",
                    "Endpoint.Address",
                  ],
                },
              },
            ],
            "Essential": false,
            "Image": "public.ecr.aws/aws-cli/aws-cli",
            "MountPoints": [
              {
                "ContainerPath": "/var/scratch",
                "ReadOnly": false,
                "SourceVolume": "scratch",
              },
            ],
            "Name": "AwsCustomRate0AwsCli",
          },
          {
            "Command": [
              "/bin/sh",
              "-c",
              "wget -O /usr/local/share/ca-certificates/rds-ca-2019-root.crt -q https://s3.amazonaws.com/rds-downloads/rds-ca-2019-root.pem && update-ca-certificates;printf 'kind: source
spec:
  name: aws
  path: cloudquery/aws
  version: v17.0.0
  tables:
    - aws_s3_buckets
  destinations:
    - postgresql
  spec:
    regions:
      - eu-west-1
      - eu-west-2
      - us-east-1
      - us-east-2
      - us-west-1
      - ap-southeast-2
      - ca-central-1
    org:
      member_role_name: cloudquery-access
      organization_units:
        - ou-123
' > /source.yaml;printf 'kind: destination
spec:
  name: postgresql
  registry: github
  path: cloudquery/postgresql
  version: v4.1.0
  migrate_mode: forced
  spec:
    connection_string: \${file:/var/scratch/connection_string}
' > /destination.yaml;/app/cloudquery sync /source.yaml /destination.yaml --log-format json --log-console",
            ],
            "DependsOn": [
              {
                "Condition": "SUCCESS",
                "ContainerName": "AwsCustomRate0AwsCli",
              },
            ],
            "EntryPoint": [
              "",
            ],
            "Essential": true,
            "Image": "ghcr.io/cloudquery/cloudquery:3.3.1",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "MountPoints": [
              {
                "ContainerPath": "/var/scratch",
                "ReadOnly": true,
                "SourceVolume": "scratch",
              },
            ],
            "Name": "AwsCustomRate0Container",
          },
          {
            "Environment": [
              {
                "Name": "STACK",
                "Value": "deploy",
              },
              {
                "Name": "STAGE",
                "Value": "TEST",
              },
              {
                "Name": "APP",
                "Value": "cloudquery",
              },
              {
                "Name": "GU_REPO",
                "Value": "guardian/service-catalogue",
              },
            ],
            "Essential": true,
            "FirelensConfiguration": {
              "Options": {
                "config-file-type": "file",
                "config-file-value": "/custom.conf",
                "enable-ecs-log-metadata": "true",
              },
              "Type": "fluentbit",
            },
            "Image": "ghcr.io/guardian/hackday-firelens:main",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "AwsCustomRate0TaskDefinitionAwsCustomRate0FirelensLogGroupD613FA02",
                },
                "awslogs-region": {
                  "Ref": "AWS::Region",
                },
                "awslogs-stream-prefix": "deploy/TEST/cloudquery",
              },
            },
            "Name": "AwsCustomRate0Firelens",
          },
        ],
        "Cpu": "256",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "AwsCustomRate0TaskDefinitionExecutionRole65361959",
            "Arn",
          ],
        },
        "Family": "CloudQueryAwsCustomRate0TaskDefinition03778498",
        "Memory": "512",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE",
        ],
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "AwsCustomRate0TaskDefinitionTaskRole400B4BCB",
            "Arn",
          ],
        },
        "Volumes": [
          {
            "Host": {},
            "Name": "scratch",
          },
        ],
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "AwsCustomRate0TaskDefinitionAwsCustomRate0FirelensLogGroupD613FA02": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionInDays": 1,
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "AwsCustomRate0TaskDefinitionEventsRole941F70DB": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AwsCustomRate0TaskDefinitionEventsRoleDefaultPolicy629C99F0": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ecs:RunTask",
              "Condition": {
                "ArnEquals": {
                  "ecs:cluster": {
                    "Fn::GetAtt": [
                      "cloudqueryCluster5370C11B",
                      "Arn",
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Resource": {
                "Ref": "AwsCustomRate0TaskDefinition8D186693",
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "AwsCustomRate0TaskDefinitionExecutionRole65361959",
                  "Arn",
                ],
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "AwsCustomRate0TaskDefinitionTaskRole400B4BCB",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AwsCustomRate0TaskDefinitionEventsRoleDefaultPolicy629C99F0",
        "Roles": [
          {
            "Ref": "AwsCustomRate0TaskDefinitionEventsRole941F70DB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AwsCustomRate0TaskDefinitionExecutionRole65361959": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AwsCustomRate0TaskDefinitionExecutionRoleDefaultPolicy40676FC6": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "AwsCustomRate0TaskDefinitionAwsCustomRate0FirelensLogGroupD613FA02",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AwsCustomRate0TaskDefinitionExecutionRoleDefaultPolicy40676FC6",
        "Roles": [
          {
            "Ref": "AwsCustomRate0TaskDefinitionExecutionRole65361959",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AwsCustomRate0TaskDefinitionTaskRole400B4BCB": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/ReadOnlyAccess",
        ],
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AwsCustomRate0TaskDefinitionTaskRoleDefaultPolicy70D89350": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kinesis:Describe*",
                "kinesis:Put*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":kinesis:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":stream/",
                    {
                      "Ref": "LoggingStreamName",
                    },
                  ],
                ],
              },
            },
            {
              "Action": [
                "cloudformation:GetTemplate",
                "dynamodb:GetItem",
                "dynamodb:BatchGetItem",
                "dynamodb:Query",
                "dynamodb:Scan",
                "ec2:GetConsoleOutput",
                "ec2:GetConsoleScreenshot",
                "ecr:BatchGetImage",
                "ecr:GetAuthorizationToken",
                "ecr:GetDownloadUrlForLayer",
                "kinesis:Get*",
                "lambda:GetFunction",
                "logs:GetLogEvents",
                "sdb:Select*",
                "sqs:ReceiveMessage",
              ],
              "Effect": "Deny",
              "Resource": "*",
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": "arn:aws:iam::*:role/cloudquery-access",
            },
            {
              "Action": "organizations:List*",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "rds-db:connect",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":rds-db:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":dbuser:",
                    {
                      "Fn::GetAtt": [
                        "PostgresInstance16DE4286E",
                        "DbiResourceId",
                      ],
                    },
                    "/cloudquery",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AwsCustomRate0TaskDefinitionTaskRoleDefaultPolicy70D89350",
        "Roles": [
          {
            "Ref": "AwsCustomRate0TaskDefinitionTaskRole400B4BCB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AwsCustomRate1ScheduledEventRuleA69E1812": {
      "Properties": {
        "ScheduleExpression": "rate(30 minutes)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "cloudqueryCluster5370C11B",
                "Arn",
              ],
            },
            "EcsParameters": {
              "LaunchType": "FARGATE",
              "NetworkConfiguration": {
                "AwsVpcConfiguration": {
                  "AssignPublicIp": "DISABLED",
                  "SecurityGroups": [
                    {
                      "Fn::GetAtt": [
                        "PostgresAccessSecurityGroupCloudqueryE959A23F",
                        "GroupId",
                      ],
                    },
                  ],
                  "Subnets": {
                    "Ref": "PrivateSubnets",
                  },
                },
              },
              "TaskCount": 1,
              "TaskDefinitionArn": {
                "Ref": "AwsCustomRate1TaskDefinition21F848BD",
              },
            },
            "Id": "Target0",
            "Input": "{}",
            "RoleArn": {
              "Fn::GetAtt": [
                "AwsCustomRate1TaskDefinitionEventsRole6CD12639",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "AwsCustomRate1TaskDefinition21F848BD": {
      "Properties": {
        "ContainerDefinitions": [
          {
            "Command": [
              "/bin/bash",
              "-c",
              "PG_PASSWORD=$(/usr/local/bin/aws rds generate-db-auth-token --hostname $DB_HOST --port 5432 --region eu-west-1 --username cloudquery);echo "user=cloudquery password=$PG_PASSWORD host=$DB_HOST port=5432 dbname=postgres sslmode=verify-full" > /var/scratch/connection_string",
            ],
            "EntryPoint": [
              "",
            ],
            "Environment": [
              {
                "Name": "DB_HOST",
                "Value": {
                  "Fn::GetAtt": [
                    "PostgresInstance16DE4286E",
                    "Endpoint.Address",
                  ],
                },
              },
            ],
            "Essential": false,
            "Image": "public.ecr.aws/aws-cli/aws-cli",
            "MountPoints": [
              {
                "ContainerPath": "/var/scratch",
                "ReadOnly": false,
                "SourceVolume": "scratch",
              },
            ],
            "Name": "AwsCustomRate1AwsCli",
          },
          {
            "Command": [
              "/bin/sh",
              "-c",
              "wget -O /usr/local/share/ca-certificates/rds-ca-2019-root.crt -q https://s3.amazonaws.com/rds-downloads/rds-ca-2019-root.pem && update-ca-certificates;printf 'kind: source
spec:
  name: aws
  path: cloudquery/aws
  version: v17.0.0
  tables:
    - aws_lambda_functions
  destinations:
    - postgresql
  spec:
    regions:
      - eu-west-1
      - eu-west-2
      - us-east-1
      - us-east-2
      - us-west-1
      - ap-southeast-2
      - ca-central-1
    org:
      member_role_name: cloudquery-access
      organization_units:
        - ou-123
' > /source.yaml;printf 'kind: destination
spec:
  name: postgresql
  registry: github
  path: cloudquery/postgresql
  version: v4.1.0
  migrate_mode: forced
  spec:
    connection_string: \${file:/var/scratch/connection_string}
' > /destination.yaml;/app/cloudquery sync /source.yaml /destination.yaml --log-format json --log-console",
            ],
            "DependsOn": [
              {
                "Condition": "SUCCESS",
                "ContainerName": "AwsCustomRate1AwsCli",
              },
            ],
            "EntryPoint": [
              "",
            ],
            "Essential": true,
            "Image": "ghcr.io/cloudquery/cloudquery:3.3.1",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "MountPoints": [
              {
                "ContainerPath": "/var/scratch",
                "ReadOnly": true,
                "SourceVolume": "scratch",
              },
            ],
            "Name": "AwsCustomRate1Container",
          },
          {
            "Environment": [
              {
                "Name": "STACK",
                "Value": "deploy",
              },
              {
                "Name": "STAGE",
                "Value": "TEST",
              },
              {
                "Name": "APP",
                "Value": "cloudquery",
              },
              {
                "Name": "GU_REPO",
                "Value": "guardian/service-catalogue",
              },
            ],
            "Essential": true,
            "FirelensConfiguration": {
              "Options": {
                "config-file-type": "file",
                "config-file-value": "/custom.conf",
                "enable-ecs-log-metadata": "true",
              },
              "Type": "fluentbit",
            },
            "Image": "ghcr.io/guardian/hackday-firelens:main",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "AwsCustomRate1TaskDefinitionAwsCustomRate1FirelensLogGroup6EA9E9ED",
                },
                "awslogs-region": {
                  "Ref": "AWS::Region",
                },
                "awslogs-stream-prefix": "deploy/TEST/cloudquery",
              },
            },
            "Name": "AwsCustomRate1Firelens",
          },
        ],
        "Cpu": "256",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "AwsCustomRate1TaskDefinitionExecutionRole7B302127",
            "Arn",
          ],
        },
        "Family": "CloudQueryAwsCustomRate1TaskDefinition41B2E226",
        "Memory": "512",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE",
        ],
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "AwsCustomRate1TaskDefinitionTaskRoleFF883DCA",
            "Arn",
          ],
        },
        "Volumes": [
          {
            "Host": {},
            "Name": "scratch",
          },
        ],
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "AwsCustomRate1TaskDefinitionAwsCustomRate1FirelensLogGroup6EA9E9ED": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionInDays": 1,
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "AwsCustomRate1TaskDefinitionEventsRole6CD12639": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AwsCustomRate1TaskDefinitionEventsRoleDefaultPolicy17E2EE08": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ecs:RunTask",
              "Condition": {
                "ArnEquals": {
                  "ecs:cluster": {
                    "Fn::GetAtt": [
                      "cloudqueryCluster5370C11B",
                      "Arn",
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Resource": {
                "Ref": "AwsCustomRate1TaskDefinition21F848BD",
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "AwsCustomRate1TaskDefinitionExecutionRole7B302127",
                  "Arn",
                ],
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "AwsCustomRate1TaskDefinitionTaskRoleFF883DCA",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AwsCustomRate1TaskDefinitionEventsRoleDefaultPolicy17E2EE08",
        "Roles": [
          {
            "Ref": "AwsCustomRate1TaskDefinitionEventsRole6CD12639",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AwsCustomRate1TaskDefinitionExecutionRole7B302127": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AwsCustomRate1TaskDefinitionExecutionRoleDefaultPolicy663EED15": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "AwsCustomRate1TaskDefinitionAwsCustomRate1FirelensLogGroup6EA9E9ED",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AwsCustomRate1TaskDefinitionExecutionRoleDefaultPolicy663EED15",
        "Roles": [
          {
            "Ref": "AwsCustomRate1TaskDefinitionExecutionRole7B302127",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AwsCustomRate1TaskDefinitionTaskRoleDefaultPolicy9B8D9983": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kinesis:Describe*",
                "kinesis:Put*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":kinesis:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":stream/",
                    {
                      "Ref": "LoggingStreamName",
                    },
                  ],
                ],
              },
            },
            {
              "Action": [
                "cloudformation:GetTemplate",
                "dynamodb:GetItem",
                "dynamodb:BatchGetItem",
                "dynamodb:Query",
                "dynamodb:Scan",
                "ec2:GetConsoleOutput",
                "ec2:GetConsoleScreenshot",
                "ecr:BatchGetImage",
                "ecr:GetAuthorizationToken",
                "ecr:GetDownloadUrlForLayer",
                "kinesis:Get*",
                "lambda:GetFunction",
                "logs:GetLogEvents",
                "sdb:Select*",
                "sqs:ReceiveMessage",
              ],
              "Effect": "Deny",
              "Resource": "*",
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": "arn:aws:iam::*:role/cloudquery-access",
            },
            {
              "Action": "organizations:List*",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "rds-db:connect",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":rds-db:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":dbuser:",
                    {
                      "Fn::GetAtt": [
                        "PostgresInstance16DE4286E",
                        "DbiResourceId",
                      ],
                    },
                    "/cloudquery",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AwsCustomRate1TaskDefinitionTaskRoleDefaultPolicy9B8D9983",
        "Roles": [
          {
            "Ref": "AwsCustomRate1TaskDefinitionTaskRoleFF883DCA",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AwsCustomRate1TaskDefinitionTaskRoleFF883DCA": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/ReadOnlyAccess",
        ],
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AwsCustomRate2ScheduledEventRule09DB67EC": {
      "Properties": {
        "ScheduleExpression": "cron(* * 1 * ? *)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "cloudqueryCluster5370C11B",
                "Arn",
              ],
            },
            "EcsParameters": {
              "LaunchType": "FARGATE",
              "NetworkConfiguration": {
                "AwsVpcConfiguration": {
                  "AssignPublicIp": "DISABLED",
                  "SecurityGroups": [
                    {
                      "Fn::GetAtt": [
                        "PostgresAccessSecurityGroupCloudqueryE959A23F",
                        "GroupId",
                      ],
                    },
                  ],
                  "Subnets": {
                    "Ref": "PrivateSubnets",
                  },
                },
              },
              "TaskCount": 1,
              "TaskDefinitionArn": {
                "Ref": "AwsCustomRate2TaskDefinition0A50736E",
              },
            },
            "Id": "Target0",
            "Input": "{}",
            "RoleArn": {
              "Fn::GetAtt": [
                "AwsCustomRate2TaskDefinitionEventsRoleA5653DBB",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "AwsCustomRate2TaskDefinition0A50736E": {
      "Properties": {
        "ContainerDefinitions": [
          {
            "Command": [
              "/bin/bash",
              "-c",
              "PG_PASSWORD=$(/usr/local/bin/aws rds generate-db-auth-token --hostname $DB_HOST --port 5432 --region eu-west-1 --username cloudquery);echo "user=cloudquery password=$PG_PASSWORD host=$DB_HOST port=5432 dbname=postgres sslmode=verify-full" > /var/scratch/connection_string",
            ],
            "EntryPoint": [
              "",
            ],
            "Environment": [
              {
                "Name": "DB_HOST",
                "Value": {
                  "Fn::GetAtt": [
                    "PostgresInstance16DE4286E",
                    "Endpoint.Address",
                  ],
                },
              },
            ],
            "Essential": false,
            "Image": "public.ecr.aws/aws-cli/aws-cli",
            "MountPoints": [
              {
                "ContainerPath": "/var/scratch",
                "ReadOnly": false,
                "SourceVolume": "scratch",
              },
            ],
            "Name": "AwsCustomRate2AwsCli",
          },
          {
            "Command": [
              "/bin/sh",
              "-c",
              "wget -O /usr/local/share/ca-certificates/rds-ca-2019-root.crt -q https://s3.amazonaws.com/rds-downloads/rds-ca-2019-root.pem && update-ca-certificates;printf 'kind: source
spec:
  name: aws
  path: cloudquery/aws
  version: v17.0.0
  tables:
    - aws_organizations
    - aws_organizations_accounts
    - aws_organizations_delegated_services
    - aws_organizations_delegated_administrators
    - aws_organizations_organizational_units
    - aws_organizations_policies
    - aws_organizations_roots
  destinations:
    - postgresql
  spec:
    regions:
      - eu-west-1
      - eu-west-2
      - us-east-1
      - us-east-2
      - us-west-1
      - ap-southeast-2
      - ca-central-1
    accounts:
      - id: cq-for-000000000018
        role_arn: arn:aws:iam::000000000018:role/cloudquery-access
' > /source.yaml;printf 'kind: destination
spec:
  name: postgresql
  registry: github
  path: cloudquery/postgresql
  version: v4.1.0
  migrate_mode: forced
  spec:
    connection_string: \${file:/var/scratch/connection_string}
' > /destination.yaml;/app/cloudquery sync /source.yaml /destination.yaml --log-format json --log-console",
            ],
            "DependsOn": [
              {
                "Condition": "SUCCESS",
                "ContainerName": "AwsCustomRate2AwsCli",
              },
            ],
            "EntryPoint": [
              "",
            ],
            "Essential": true,
            "Image": "ghcr.io/cloudquery/cloudquery:3.3.1",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "MountPoints": [
              {
                "ContainerPath": "/var/scratch",
                "ReadOnly": true,
                "SourceVolume": "scratch",
              },
            ],
            "Name": "AwsCustomRate2Container",
          },
          {
            "Environment": [
              {
                "Name": "STACK",
                "Value": "deploy",
              },
              {
                "Name": "STAGE",
                "Value": "TEST",
              },
              {
                "Name": "APP",
                "Value": "cloudquery",
              },
              {
                "Name": "GU_REPO",
                "Value": "guardian/service-catalogue",
              },
            ],
            "Essential": true,
            "FirelensConfiguration": {
              "Options": {
                "config-file-type": "file",
                "config-file-value": "/custom.conf",
                "enable-ecs-log-metadata": "true",
              },
              "Type": "fluentbit",
            },
            "Image": "ghcr.io/guardian/hackday-firelens:main",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "AwsCustomRate2TaskDefinitionAwsCustomRate2FirelensLogGroupFBA33255",
                },
                "awslogs-region": {
                  "Ref": "AWS::Region",
                },
                "awslogs-stream-prefix": "deploy/TEST/cloudquery",
              },
            },
            "Name": "AwsCustomRate2Firelens",
          },
        ],
        "Cpu": "256",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "AwsCustomRate2TaskDefinitionExecutionRole13CADD33",
            "Arn",
          ],
        },
        "Family": "CloudQueryAwsCustomRate2TaskDefinitionC9774D2B",
        "Memory": "512",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE",
        ],
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "AwsCustomRate2TaskDefinitionTaskRoleEF327D97",
            "Arn",
          ],
        },
        "Volumes": [
          {
            "Host": {},
            "Name": "scratch",
          },
        ],
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "AwsCustomRate2TaskDefinitionAwsCustomRate2FirelensLogGroupFBA33255": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionInDays": 1,
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "AwsCustomRate2TaskDefinitionEventsRoleA5653DBB": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AwsCustomRate2TaskDefinitionEventsRoleDefaultPolicy9B197EDC": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ecs:RunTask",
              "Condition": {
                "ArnEquals": {
                  "ecs:cluster": {
                    "Fn::GetAtt": [
                      "cloudqueryCluster5370C11B",
                      "Arn",
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Resource": {
                "Ref": "AwsCustomRate2TaskDefinition0A50736E",
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "AwsCustomRate2TaskDefinitionExecutionRole13CADD33",
                  "Arn",
                ],
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "AwsCustomRate2TaskDefinitionTaskRoleEF327D97",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AwsCustomRate2TaskDefinitionEventsRoleDefaultPolicy9B197EDC",
        "Roles": [
          {
            "Ref": "AwsCustomRate2TaskDefinitionEventsRoleA5653DBB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AwsCustomRate2TaskDefinitionExecutionRole13CADD33": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AwsCustomRate2TaskDefinitionExecutionRoleDefaultPolicy6E1FB285": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "AwsCustomRate2TaskDefinitionAwsCustomRate2FirelensLogGroupFBA33255",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AwsCustomRate2TaskDefinitionExecutionRoleDefaultPolicy6E1FB285",
        "Roles": [
          {
            "Ref": "AwsCustomRate2TaskDefinitionExecutionRole13CADD33",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AwsCustomRate2TaskDefinitionTaskRoleDefaultPolicy99842392": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kinesis:Describe*",
                "kinesis:Put*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":kinesis:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":stream/",
                    {
                      "Ref": "LoggingStreamName",
                    },
                  ],
                ],
              },
            },
            {
              "Action": [
                "cloudformation:GetTemplate",
                "dynamodb:GetItem",
                "dynamodb:BatchGetItem",
                "dynamodb:Query",
                "dynamodb:Scan",
                "ec2:GetConsoleOutput",
                "ec2:GetConsoleScreenshot",
                "ecr:BatchGetImage",
                "ecr:GetAuthorizationToken",
                "ecr:GetDownloadUrlForLayer",
                "kinesis:Get*",
                "lambda:GetFunction",
                "logs:GetLogEvents",
                "sdb:Select*",
                "sqs:ReceiveMessage",
              ],
              "Effect": "Deny",
              "Resource": "*",
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": "arn:aws:iam::*:role/cloudquery-access",
            },
            {
              "Action": "organizations:List*",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "rds-db:connect",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":rds-db:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":dbuser:",
                    {
                      "Fn::GetAtt": [
                        "PostgresInstance16DE4286E",
                        "DbiResourceId",
                      ],
                    },
                    "/cloudquery",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AwsCustomRate2TaskDefinitionTaskRoleDefaultPolicy99842392",
        "Roles": [
          {
            "Ref": "AwsCustomRate2TaskDefinitionTaskRoleEF327D97",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AwsCustomRate2TaskDefinitionTaskRoleEF327D97": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/ReadOnlyAccess",
        ],
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AwsCustomRate3ScheduledEventRule6698515E": {
      "Properties": {
        "ScheduleExpression": "rate(4 hours)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "cloudqueryCluster5370C11B",
                "Arn",
              ],
            },
            "EcsParameters": {
              "LaunchType": "FARGATE",
              "NetworkConfiguration": {
                "AwsVpcConfiguration": {
                  "AssignPublicIp": "DISABLED",
                  "SecurityGroups": [
                    {
                      "Fn::GetAtt": [
                        "PostgresAccessSecurityGroupCloudqueryE959A23F",
                        "GroupId",
                      ],
                    },
                  ],
                  "Subnets": {
                    "Ref": "PrivateSubnets",
                  },
                },
              },
              "TaskCount": 1,
              "TaskDefinitionArn": {
                "Ref": "AwsCustomRate3TaskDefinition532A7F1C",
              },
            },
            "Id": "Target0",
            "Input": "{}",
            "RoleArn": {
              "Fn::GetAtt": [
                "AwsCustomRate3TaskDefinitionEventsRoleB2021752",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "AwsCustomRate3TaskDefinition532A7F1C": {
      "Properties": {
        "ContainerDefinitions": [
          {
            "Command": [
              "/bin/bash",
              "-c",
              "PG_PASSWORD=$(/usr/local/bin/aws rds generate-db-auth-token --hostname $DB_HOST --port 5432 --region eu-west-1 --username cloudquery);echo "user=cloudquery password=$PG_PASSWORD host=$DB_HOST port=5432 dbname=postgres sslmode=verify-full" > /var/scratch/connection_string",
            ],
            "EntryPoint": [
              "",
            ],
            "Environment": [
              {
                "Name": "DB_HOST",
                "Value": {
                  "Fn::GetAtt": [
                    "PostgresInstance16DE4286E",
                    "Endpoint.Address",
                  ],
                },
              },
            ],
            "Essential": false,
            "Image": "public.ecr.aws/aws-cli/aws-cli",
            "MountPoints": [
              {
                "ContainerPath": "/var/scratch",
                "ReadOnly": false,
                "SourceVolume": "scratch",
              },
            ],
            "Name": "AwsCustomRate3AwsCli",
          },
          {
            "Command": [
              "/bin/sh",
              "-c",
              "wget -O /usr/local/share/ca-certificates/rds-ca-2019-root.crt -q https://s3.amazonaws.com/rds-downloads/rds-ca-2019-root.pem && update-ca-certificates;printf 'kind: source
spec:
  name: aws
  path: cloudquery/aws
  version: v17.0.0
  tables:
    - aws_accessanalyzer_analyzers
    - aws_accessanalyzer_analyzer_archive_rules
    - aws_accessanalyzer_analyzer_findings
  destinations:
    - postgresql
  spec:
    regions:
      - eu-west-1
      - eu-west-2
      - us-east-1
      - us-east-2
      - us-west-1
      - ap-southeast-2
      - ca-central-1
    accounts:
      - id: cq-for-000000000015
        role_arn: arn:aws:iam::000000000015:role/cloudquery-access
' > /source.yaml;printf 'kind: destination
spec:
  name: postgresql
  registry: github
  path: cloudquery/postgresql
  version: v4.1.0
  migrate_mode: forced
  spec:
    connection_string: \${file:/var/scratch/connection_string}
' > /destination.yaml;/app/cloudquery sync /source.yaml /destination.yaml --log-format json --log-console",
            ],
            "DependsOn": [
              {
                "Condition": "SUCCESS",
                "ContainerName": "AwsCustomRate3AwsCli",
              },
            ],
            "EntryPoint": [
              "",
            ],
            "Essential": true,
            "Image": "ghcr.io/cloudquery/cloudquery:3.3.1",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "MountPoints": [
              {
                "ContainerPath": "/var/scratch",
                "ReadOnly": true,
                "SourceVolume": "scratch",
              },
            ],
            "Name": "AwsCustomRate3Container",
          },
          {
            "Environment": [
              {
                "Name": "STACK",
                "Value": "deploy",
              },
              {
                "Name": "STAGE",
                "Value": "TEST",
              },
              {
                "Name": "APP",
                "Value": "cloudquery",
              },
              {
                "Name": "GU_REPO",
                "Value": "guardian/service-catalogue",
              },
            ],
            "Essential": true,
            "FirelensConfiguration": {
              "Options": {
                "config-file-type": "file",
                "config-file-value": "/custom.conf",
                "enable-ecs-log-metadata": "true",
              },
              "Type": "fluentbit",
            },
            "Image": "ghcr.io/guardian/hackday-firelens:main",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "AwsCustomRate3TaskDefinitionAwsCustomRate3FirelensLogGroup7128D1A2",
                },
                "awslogs-region": {
                  "Ref": "AWS::Region",
                },
                "awslogs-stream-prefix": "deploy/TEST/cloudquery",
              },
            },
            "Name": "AwsCustomRate3Firelens",
          },
        ],
        "Cpu": "256",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "AwsCustomRate3TaskDefinitionExecutionRoleA37BDFCF",
            "Arn",
          ],
        },
        "Family": "CloudQueryAwsCustomRate3TaskDefinition392355AE",
        "Memory": "512",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE",
        ],
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "AwsCustomRate3TaskDefinitionTaskRoleE6A3042B",
            "Arn",
          ],
        },
        "Volumes": [
          {
            "Host": {},
            "Name": "scratch",
          },
        ],
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "AwsCustomRate3TaskDefinitionAwsCustomRate3FirelensLogGroup7128D1A2": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionInDays": 1,
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "AwsCustomRate3TaskDefinitionEventsRoleB2021752": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AwsCustomRate3TaskDefinitionEventsRoleDefaultPolicy74FFD9CE": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ecs:RunTask",
              "Condition": {
                "ArnEquals": {
                  "ecs:cluster": {
                    "Fn::GetAtt": [
                      "cloudqueryCluster5370C11B",
                      "Arn",
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Resource": {
                "Ref": "AwsCustomRate3TaskDefinition532A7F1C",
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "AwsCustomRate3TaskDefinitionExecutionRoleA37BDFCF",
                  "Arn",
                ],
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "AwsCustomRate3TaskDefinitionTaskRoleE6A3042B",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AwsCustomRate3TaskDefinitionEventsRoleDefaultPolicy74FFD9CE",
        "Roles": [
          {
            "Ref": "AwsCustomRate3TaskDefinitionEventsRoleB2021752",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AwsCustomRate3TaskDefinitionExecutionRoleA37BDFCF": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AwsCustomRate3TaskDefinitionExecutionRoleDefaultPolicy48CFD354": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "AwsCustomRate3TaskDefinitionAwsCustomRate3FirelensLogGroup7128D1A2",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AwsCustomRate3TaskDefinitionExecutionRoleDefaultPolicy48CFD354",
        "Roles": [
          {
            "Ref": "AwsCustomRate3TaskDefinitionExecutionRoleA37BDFCF",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AwsCustomRate3TaskDefinitionTaskRoleDefaultPolicyDB0EC6F3": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kinesis:Describe*",
                "kinesis:Put*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":kinesis:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":stream/",
                    {
                      "Ref": "LoggingStreamName",
                    },
                  ],
                ],
              },
            },
            {
              "Action": [
                "cloudformation:GetTemplate",
                "dynamodb:GetItem",
                "dynamodb:BatchGetItem",
                "dynamodb:Query",
                "dynamodb:Scan",
                "ec2:GetConsoleOutput",
                "ec2:GetConsoleScreenshot",
                "ecr:BatchGetImage",
                "ecr:GetAuthorizationToken",
                "ecr:GetDownloadUrlForLayer",
                "kinesis:Get*",
                "lambda:GetFunction",
                "logs:GetLogEvents",
                "sdb:Select*",
                "sqs:ReceiveMessage",
              ],
              "Effect": "Deny",
              "Resource": "*",
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": "arn:aws:iam::*:role/cloudquery-access",
            },
            {
              "Action": "organizations:List*",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "rds-db:connect",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":rds-db:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":dbuser:",
                    {
                      "Fn::GetAtt": [
                        "PostgresInstance16DE4286E",
                        "DbiResourceId",
                      ],
                    },
                    "/cloudquery",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AwsCustomRate3TaskDefinitionTaskRoleDefaultPolicyDB0EC6F3",
        "Roles": [
          {
            "Ref": "AwsCustomRate3TaskDefinitionTaskRoleE6A3042B",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AwsCustomRate3TaskDefinitionTaskRoleE6A3042B": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/ReadOnlyAccess",
        ],
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AwsOtherScheduledEventRule796471DE": {
      "Properties": {
        "ScheduleExpression": "rate(1 day)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "cloudqueryCluster5370C11B",
                "Arn",
              ],
            },
            "EcsParameters": {
              "LaunchType": "FARGATE",
              "NetworkConfiguration": {
                "AwsVpcConfiguration": {
                  "AssignPublicIp": "DISABLED",
                  "SecurityGroups": [
                    {
                      "Fn::GetAtt": [
                        "PostgresAccessSecurityGroupCloudqueryE959A23F",
                        "GroupId",
                      ],
                    },
                  ],
                  "Subnets": {
                    "Ref": "PrivateSubnets",
                  },
                },
              },
              "TaskCount": 1,
              "TaskDefinitionArn": {
                "Ref": "AwsOtherTaskDefinitionC3EAE08B",
              },
            },
            "Id": "Target0",
            "Input": "{}",
            "RoleArn": {
              "Fn::GetAtt": [
                "AwsOtherTaskDefinitionEventsRole0780C70A",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "AwsOtherTaskDefinitionAwsOtherFirelensLogGroup4B78BE53": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionInDays": 1,
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "AwsOtherTaskDefinitionC3EAE08B": {
      "Properties": {
        "ContainerDefinitions": [
          {
            "Command": [
              "/bin/bash",
              "-c",
              "PG_PASSWORD=$(/usr/local/bin/aws rds generate-db-auth-token --hostname $DB_HOST --port 5432 --region eu-west-1 --username cloudquery);echo "user=cloudquery password=$PG_PASSWORD host=$DB_HOST port=5432 dbname=postgres sslmode=verify-full" > /var/scratch/connection_string",
            ],
            "EntryPoint": [
              "",
            ],
            "Environment": [
              {
                "Name": "DB_HOST",
                "Value": {
                  "Fn::GetAtt": [
                    "PostgresInstance16DE4286E",
                    "Endpoint.Address",
                  ],
                },
              },
            ],
            "Essential": false,
            "Image": "public.ecr.aws/aws-cli/aws-cli",
            "MountPoints": [
              {
                "ContainerPath": "/var/scratch",
                "ReadOnly": false,
                "SourceVolume": "scratch",
              },
            ],
            "Name": "AwsOtherAwsCli",
          },
          {
            "Command": [
              "/bin/sh",
              "-c",
              "wget -O /usr/local/share/ca-certificates/rds-ca-2019-root.crt -q https://s3.amazonaws.com/rds-downloads/rds-ca-2019-root.pem && update-ca-certificates;printf 'kind: source
spec:
  name: aws
  path: cloudquery/aws
  version: v17.0.0
  tables:
    - '*'
  skip_tables:
    - aws_s3_buckets
    - aws_lambda_functions
    - aws_organizations
    - aws_organizations_accounts
    - aws_organizations_delegated_services
    - aws_organizations_delegated_administrators
    - aws_organizations_organizational_units
    - aws_organizations_policies
    - aws_organizations_roots
    - aws_accessanalyzer_analyzers
    - aws_accessanalyzer_analyzer_archive_rules
    - aws_accessanalyzer_analyzer_findings
  destinations:
    - postgresql
  spec:
    regions:
      - eu-west-1
      - eu-west-2
      - us-east-1
      - us-east-2
      - us-west-1
      - ap-southeast-2
      - ca-central-1
    org:
      member_role_name: cloudquery-access
      organization_units:
        - ou-123
' > /source.yaml;printf 'kind: destination
spec:
  name: postgresql
  registry: github
  path: cloudquery/postgresql
  version: v4.1.0
  migrate_mode: forced
  spec:
    connection_string: \${file:/var/scratch/connection_string}
' > /destination.yaml;/app/cloudquery sync /source.yaml /destination.yaml --log-format json --log-console",
            ],
            "DependsOn": [
              {
                "Condition": "SUCCESS",
                "ContainerName": "AwsOtherAwsCli",
              },
            ],
            "EntryPoint": [
              "",
            ],
            "Essential": true,
            "Image": "ghcr.io/cloudquery/cloudquery:3.3.1",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "MountPoints": [
              {
                "ContainerPath": "/var/scratch",
                "ReadOnly": true,
                "SourceVolume": "scratch",
              },
            ],
            "Name": "AwsOtherContainer",
          },
          {
            "Environment": [
              {
                "Name": "STACK",
                "Value": "deploy",
              },
              {
                "Name": "STAGE",
                "Value": "TEST",
              },
              {
                "Name": "APP",
                "Value": "cloudquery",
              },
              {
                "Name": "GU_REPO",
                "Value": "guardian/service-catalogue",
              },
            ],
            "Essential": true,
            "FirelensConfiguration": {
              "Options": {
                "config-file-type": "file",
                "config-file-value": "/custom.conf",
                "enable-ecs-log-metadata": "true",
              },
              "Type": "fluentbit",
            },
            "Image": "ghcr.io/guardian/hackday-firelens:main",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "AwsOtherTaskDefinitionAwsOtherFirelensLogGroup4B78BE53",
                },
                "awslogs-region": {
                  "Ref": "AWS::Region",
                },
                "awslogs-stream-prefix": "deploy/TEST/cloudquery",
              },
            },
            "Name": "AwsOtherFirelens",
          },
        ],
        "Cpu": "256",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "AwsOtherTaskDefinitionExecutionRole4BA3FB88",
            "Arn",
          ],
        },
        "Family": "CloudQueryAwsOtherTaskDefinition2784A4E3",
        "Memory": "512",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE",
        ],
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "AwsOtherTaskDefinitionTaskRoleD0E2A3F5",
            "Arn",
          ],
        },
        "Volumes": [
          {
            "Host": {},
            "Name": "scratch",
          },
        ],
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "AwsOtherTaskDefinitionEventsRole0780C70A": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AwsOtherTaskDefinitionEventsRoleDefaultPolicyF11C2244": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ecs:RunTask",
              "Condition": {
                "ArnEquals": {
                  "ecs:cluster": {
                    "Fn::GetAtt": [
                      "cloudqueryCluster5370C11B",
                      "Arn",
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Resource": {
                "Ref": "AwsOtherTaskDefinitionC3EAE08B",
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "AwsOtherTaskDefinitionExecutionRole4BA3FB88",
                  "Arn",
                ],
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "AwsOtherTaskDefinitionTaskRoleD0E2A3F5",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AwsOtherTaskDefinitionEventsRoleDefaultPolicyF11C2244",
        "Roles": [
          {
            "Ref": "AwsOtherTaskDefinitionEventsRole0780C70A",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AwsOtherTaskDefinitionExecutionRole4BA3FB88": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AwsOtherTaskDefinitionExecutionRoleDefaultPolicy7B8CD093": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "AwsOtherTaskDefinitionAwsOtherFirelensLogGroup4B78BE53",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AwsOtherTaskDefinitionExecutionRoleDefaultPolicy7B8CD093",
        "Roles": [
          {
            "Ref": "AwsOtherTaskDefinitionExecutionRole4BA3FB88",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AwsOtherTaskDefinitionTaskRoleD0E2A3F5": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/ReadOnlyAccess",
        ],
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AwsOtherTaskDefinitionTaskRoleDefaultPolicyEFC01BB6": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kinesis:Describe*",
                "kinesis:Put*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":kinesis:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":stream/",
                    {
                      "Ref": "LoggingStreamName",
                    },
                  ],
                ],
              },
            },
            {
              "Action": [
                "cloudformation:GetTemplate",
                "dynamodb:GetItem",
                "dynamodb:BatchGetItem",
                "dynamodb:Query",
                "dynamodb:Scan",
                "ec2:GetConsoleOutput",
                "ec2:GetConsoleScreenshot",
                "ecr:BatchGetImage",
                "ecr:GetAuthorizationToken",
                "ecr:GetDownloadUrlForLayer",
                "kinesis:Get*",
                "lambda:GetFunction",
                "logs:GetLogEvents",
                "sdb:Select*",
                "sqs:ReceiveMessage",
              ],
              "Effect": "Deny",
              "Resource": "*",
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": "arn:aws:iam::*:role/cloudquery-access",
            },
            {
              "Action": "organizations:List*",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "rds-db:connect",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":rds-db:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":dbuser:",
                    {
                      "Fn::GetAtt": [
                        "PostgresInstance16DE4286E",
                        "DbiResourceId",
                      ],
                    },
                    "/cloudquery",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AwsOtherTaskDefinitionTaskRoleDefaultPolicyEFC01BB6",
        "Roles": [
          {
            "Ref": "AwsOtherTaskDefinitionTaskRoleD0E2A3F5",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DescribeEC2PolicyFF5F9295": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "autoscaling:DescribeAutoScalingInstances",
                "autoscaling:DescribeAutoScalingGroups",
                "ec2:DescribeTags",
                "ec2:DescribeInstances",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "describe-ec2-policy",
        "Roles": [
          {
            "Ref": "InstanceRoleCloudquery54F86B54",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "GetDistributablePolicyCloudquery19347D25": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:GetObject",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:s3:::",
                    {
                      "Ref": "DistributionBucketName",
                    },
                    "/deploy/TEST/cloudquery/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "GetDistributablePolicyCloudquery19347D25",
        "Roles": [
          {
            "Ref": "InstanceRoleCloudquery54F86B54",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "GuHttpsEgressSecurityGroupCloudquery3AE9FC4C": {
      "Properties": {
        "GroupDescription": "Allow all outbound HTTPS traffic",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound HTTPS traffic",
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "Tags": [
          {
            "Key": "App",
            "Value": "cloudquery",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "VpcId": {
          "Ref": "VpcId",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "GuLogShippingPolicy981BFE5A": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kinesis:Describe*",
                "kinesis:Put*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:kinesis:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":stream/",
                    {
                      "Ref": "LoggingStreamName",
                    },
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "GuLogShippingPolicy981BFE5A",
        "Roles": [
          {
            "Ref": "InstanceRoleCloudquery54F86B54",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "InstanceRoleCloudquery54F86B54": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ec2.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonSSMManagedInstanceCore",
              ],
            ],
          },
          "arn:aws:iam::aws:policy/ReadOnlyAccess",
        ],
        "Path": "/",
        "Tags": [
          {
            "Key": "App",
            "Value": "cloudquery",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "InstanceRoleCloudqueryDefaultPolicyBCEDADAD": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "cloudformation:GetTemplate",
                "dynamodb:GetItem",
                "dynamodb:BatchGetItem",
                "dynamodb:Query",
                "dynamodb:Scan",
                "ec2:GetConsoleOutput",
                "ec2:GetConsoleScreenshot",
                "ecr:BatchGetImage",
                "ecr:GetAuthorizationToken",
                "ecr:GetDownloadUrlForLayer",
                "kinesis:Get*",
                "lambda:GetFunction",
                "logs:GetLogEvents",
                "sdb:Select*",
                "sqs:ReceiveMessage",
              ],
              "Effect": "Deny",
              "Resource": "*",
            },
            {
              "Action": "s3:GetObject",
              "Effect": "Deny",
              "NotResource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":s3:::",
                    {
                      "Ref": "DistributionBucketName",
                    },
                    "/deploy/TEST/cloudquery/*",
                  ],
                ],
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": "arn:aws:iam::*:role/cloudquery-access",
            },
            {
              "Action": "rds-db:connect",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":rds-db:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":dbuser:",
                    {
                      "Fn::GetAtt": [
                        "PostgresInstance16DE4286E",
                        "DbiResourceId",
                      ],
                    },
                    "/cloudquery",
                  ],
                ],
              },
            },
            {
              "Action": "organizations:List*",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "InstanceRoleCloudqueryDefaultPolicyBCEDADAD",
        "Roles": [
          {
            "Ref": "InstanceRoleCloudquery54F86B54",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ParameterStoreReadCloudqueryA859D391": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ssm:GetParametersByPath",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:ssm:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/TEST/deploy/cloudquery",
                  ],
                ],
              },
            },
            {
              "Action": [
                "ssm:GetParameters",
                "ssm:GetParameter",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:ssm:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/TEST/deploy/cloudquery/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "parameter-store-read-policy",
        "Roles": [
          {
            "Ref": "InstanceRoleCloudquery54F86B54",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "PostgresAccessSecurityGroupCloudqueryE959A23F": {
      "Properties": {
        "GroupDescription": "CloudQuery/PostgresAccessSecurityGroupCloudquery",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "Tags": [
          {
            "Key": "App",
            "Value": "cloudquery",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "VpcId": {
          "Ref": "VpcId",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "PostgresAccessSecurityGroupParam38DFE001": {
      "Properties": {
        "DataType": "text",
        "Name": "/TEST/deploy/cloudquery/postgres-access-security-group",
        "Tags": {
          "Stack": "deploy",
          "Stage": "TEST",
          "gu:cdk:version": "TEST",
          "gu:repo": "guardian/service-catalogue",
        },
        "Tier": "Standard",
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "PostgresAccessSecurityGroupCloudqueryE959A23F",
            "GroupId",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "PostgresInstance16DE4286E": {
      "DeletionPolicy": "Snapshot",
      "Properties": {
        "AllocatedStorage": "100",
        "CopyTagsToSnapshot": true,
        "DBInstanceClass": "db.t4g.small",
        "DBSubnetGroupName": {
          "Ref": "PostgresInstance1SubnetGroupCAC045A5",
        },
        "EnableIAMDatabaseAuthentication": true,
        "Engine": "postgres",
        "MasterUserPassword": {
          "Fn::Join": [
            "",
            [
              "{{resolve:secretsmanager:",
              {
                "Ref": "PostgresInstance1Secret7FA1A24B",
              },
              ":SecretString:password::}}",
            ],
          ],
        },
        "MasterUsername": {
          "Fn::Join": [
            "",
            [
              "{{resolve:secretsmanager:",
              {
                "Ref": "PostgresInstance1Secret7FA1A24B",
              },
              ":SecretString:username::}}",
            ],
          ],
        },
        "Port": "5432",
        "PubliclyAccessible": false,
        "StorageEncrypted": true,
        "StorageType": "gp2",
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "VPCSecurityGroups": [
          {
            "Fn::GetAtt": [
              "PostgresInstance1SecurityGroupFA28C3C0",
              "GroupId",
            ],
          },
        ],
      },
      "Type": "AWS::RDS::DBInstance",
      "UpdateReplacePolicy": "Snapshot",
    },
    "PostgresInstance1Secret7FA1A24B": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "Description": {
          "Fn::Join": [
            "",
            [
              "Generated by the CDK for stack: ",
              {
                "Ref": "AWS::StackName",
              },
            ],
          ],
        },
        "GenerateSecretString": {
          "ExcludeCharacters": " %+~\`#$&*()|[]{}:;<>?!'/@"\\",
          "GenerateStringKey": "password",
          "PasswordLength": 30,
          "SecretStringTemplate": "{"username":"postgres"}",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
    "PostgresInstance1SecretAttachmentBA0D257D": {
      "Properties": {
        "SecretId": {
          "Ref": "PostgresInstance1Secret7FA1A24B",
        },
        "TargetId": {
          "Ref": "PostgresInstance16DE4286E",
        },
        "TargetType": "AWS::RDS::DBInstance",
      },
      "Type": "AWS::SecretsManager::SecretTargetAttachment",
    },
    "PostgresInstance1SecurityGroupFA28C3C0": {
      "Properties": {
        "GroupDescription": "Security group for PostgresInstance1 database",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "VpcId": {
          "Ref": "VpcId",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "PostgresInstance1SecurityGroupfromCloudQueryPostgresAccessSecurityGroupCloudqueryAE627D465432AE3168F5": {
      "Properties": {
        "Description": "from CloudQueryPostgresAccessSecurityGroupCloudqueryAE627D46:5432",
        "FromPort": 5432,
        "GroupId": {
          "Fn::GetAtt": [
            "PostgresInstance1SecurityGroupFA28C3C0",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "PostgresAccessSecurityGroupCloudqueryE959A23F",
            "GroupId",
          ],
        },
        "ToPort": 5432,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "PostgresInstance1SubnetGroupCAC045A5": {
      "Properties": {
        "DBSubnetGroupDescription": "Subnet group for PostgresInstance1 database",
        "SubnetIds": {
          "Ref": "PrivateSubnets",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::RDS::DBSubnetGroup",
    },
    "PostgresInstanceEndpointAddress6E14162C": {
      "Properties": {
        "DataType": "text",
        "Name": "/TEST/deploy/cloudquery/postgres-instance-endpoint-address",
        "Tags": {
          "Stack": "deploy",
          "Stage": "TEST",
          "gu:cdk:version": "TEST",
          "gu:repo": "guardian/service-catalogue",
        },
        "Tier": "Standard",
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "PostgresInstance16DE4286E",
            "Endpoint.Address",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "WazuhSecurityGroup": {
      "Properties": {
        "GroupDescription": "Allow outbound traffic from wazuh agent to manager",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Wazuh event logging",
            "FromPort": 1514,
            "IpProtocol": "tcp",
            "ToPort": 1514,
          },
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Wazuh agent registration",
            "FromPort": 1515,
            "IpProtocol": "tcp",
            "ToPort": 1515,
          },
        ],
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "VpcId": {
          "Ref": "VpcId",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "asgCloudqueryASG40AB7667": {
      "Properties": {
        "LaunchTemplate": {
          "LaunchTemplateId": {
            "Ref": "deployTESTcloudquery13DE7BFF",
          },
          "Version": {
            "Fn::GetAtt": [
              "deployTESTcloudquery13DE7BFF",
              "LatestVersionNumber",
            ],
          },
        },
        "MaxSize": "2",
        "MinSize": "1",
        "Tags": [
          {
            "Key": "App",
            "PropagateAtLaunch": true,
            "Value": "cloudquery",
          },
          {
            "Key": "gu:cdk:version",
            "PropagateAtLaunch": true,
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "PropagateAtLaunch": true,
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "LogKinesisStreamName",
            "PropagateAtLaunch": true,
            "Value": {
              "Ref": "LoggingStreamName",
            },
          },
          {
            "Key": "Stack",
            "PropagateAtLaunch": true,
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "PropagateAtLaunch": true,
            "Value": "TEST",
          },
          {
            "Key": "SystemdUnit",
            "PropagateAtLaunch": true,
            "Value": "cloudquery.service",
          },
        ],
        "VPCZoneIdentifier": {
          "Ref": "PrivateSubnets",
        },
      },
      "Type": "AWS::AutoScaling::AutoScalingGroup",
    },
    "cloudqueryCluster5370C11B": {
      "Properties": {
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::ECS::Cluster",
    },
    "cloudqueryClusterAF1C9455": {
      "Properties": {
        "CapacityProviders": [
          "FARGATE",
          "FARGATE_SPOT",
        ],
        "Cluster": {
          "Ref": "cloudqueryCluster5370C11B",
        },
        "DefaultCapacityProviderStrategy": [],
      },
      "Type": "AWS::ECS::ClusterCapacityProviderAssociations",
    },
    "deployTESTcloudquery13DE7BFF": {
      "Properties": {
        "LaunchTemplateData": {
          "IamInstanceProfile": {
            "Arn": {
              "Fn::GetAtt": [
                "deployTESTcloudqueryProfile4BE5D073",
                "Arn",
              ],
            },
          },
          "ImageId": {
            "Ref": "AMICloudquery",
          },
          "InstanceType": "t4g.medium",
          "MetadataOptions": {
            "HttpTokens": "required",
          },
          "SecurityGroupIds": [
            {
              "Fn::GetAtt": [
                "GuHttpsEgressSecurityGroupCloudquery3AE9FC4C",
                "GroupId",
              ],
            },
            {
              "Fn::GetAtt": [
                "WazuhSecurityGroup",
                "GroupId",
              ],
            },
            {
              "Fn::GetAtt": [
                "PostgresAccessSecurityGroupCloudqueryE959A23F",
                "GroupId",
              ],
            },
          ],
          "TagSpecifications": [
            {
              "ResourceType": "instance",
              "Tags": [
                {
                  "Key": "gu:cdk:version",
                  "Value": "TEST",
                },
                {
                  "Key": "gu:repo",
                  "Value": "guardian/service-catalogue",
                },
                {
                  "Key": "Name",
                  "Value": "CloudQuery/deploy-TEST-cloudquery",
                },
                {
                  "Key": "Stack",
                  "Value": "deploy",
                },
                {
                  "Key": "Stage",
                  "Value": "TEST",
                },
              ],
            },
            {
              "ResourceType": "volume",
              "Tags": [
                {
                  "Key": "gu:cdk:version",
                  "Value": "TEST",
                },
                {
                  "Key": "gu:repo",
                  "Value": "guardian/service-catalogue",
                },
                {
                  "Key": "Name",
                  "Value": "CloudQuery/deploy-TEST-cloudquery",
                },
                {
                  "Key": "Stack",
                  "Value": "deploy",
                },
                {
                  "Key": "Stage",
                  "Value": "TEST",
                },
              ],
            },
          ],
          "UserData": {
            "Fn::Base64": {
              "Fn::Join": [
                "",
                [
                  "#!/bin/bash
mkdir -p $(dirname '/opt/cloudquery/aws.yaml')
aws s3 cp 's3://",
                  {
                    "Ref": "DistributionBucketName",
                  },
                  "/deploy/TEST/cloudquery/aws.yaml' '/opt/cloudquery/aws.yaml'
mkdir -p $(dirname '/opt/cloudquery/template-summary.yaml')
aws s3 cp 's3://",
                  {
                    "Ref": "DistributionBucketName",
                  },
                  "/deploy/TEST/cloudquery/template-summary.yaml' '/opt/cloudquery/template-summary.yaml'
mkdir -p $(dirname '/opt/cloudquery/postgresql.yaml')
aws s3 cp 's3://",
                  {
                    "Ref": "DistributionBucketName",
                  },
                  "/deploy/TEST/cloudquery/postgresql.yaml' '/opt/cloudquery/postgresql.yaml'
mkdir -p $(dirname '/etc/systemd/system/cloudquery.service')
aws s3 cp 's3://",
                  {
                    "Ref": "DistributionBucketName",
                  },
                  "/deploy/TEST/cloudquery/cloudquery.service' '/etc/systemd/system/cloudquery.service'
mkdir -p $(dirname '/etc/systemd/system/cloudquery.timer')
aws s3 cp 's3://",
                  {
                    "Ref": "DistributionBucketName",
                  },
                  "/deploy/TEST/cloudquery/cloudquery.timer' '/etc/systemd/system/cloudquery.timer'
mkdir -p $(dirname '/opt/cloudquery/cloudquery.sh')
aws s3 cp 's3://",
                  {
                    "Ref": "DistributionBucketName",
                  },
                  "/deploy/TEST/cloudquery/cloudquery.sh' '/opt/cloudquery/cloudquery.sh'
set -xe
curl -L https://github.com/cloudquery/cloudquery/releases/download/cli-v2.5.3/cloudquery_linux_arm64 -o /opt/cloudquery/cloudquery
echo "286cff19c54098328c0b85dbbfa94e87234b5a53be421c3b6ca406803122a7ee  /opt/cloudquery/cloudquery" | shasum -c -a 256
chmod a+x /opt/cloudquery/cloudquery
chmod a+x /opt/cloudquery/cloudquery.sh
sed -i "s/£TARGET_ORG_UNIT/ou-123/g" /opt/cloudquery/aws.yaml
sed -i "s/£TARGET_ORG_UNIT/ou-123/g" /opt/cloudquery/template-summary.yaml
curl https://s3.amazonaws.com/rds-downloads/rds-ca-2019-root.pem -o /usr/local/share/ca-certificates/rds-ca-2019-root.crt
update-ca-certificates
systemctl enable cloudquery.timer
systemctl start cloudquery.timer",
                ],
              ],
            },
          },
        },
        "TagSpecifications": [
          {
            "ResourceType": "launch-template",
            "Tags": [
              {
                "Key": "gu:cdk:version",
                "Value": "TEST",
              },
              {
                "Key": "gu:repo",
                "Value": "guardian/service-catalogue",
              },
              {
                "Key": "Name",
                "Value": "CloudQuery/deploy-TEST-cloudquery",
              },
              {
                "Key": "Stack",
                "Value": "deploy",
              },
              {
                "Key": "Stage",
                "Value": "TEST",
              },
            ],
          },
        ],
      },
      "Type": "AWS::EC2::LaunchTemplate",
    },
    "deployTESTcloudqueryProfile4BE5D073": {
      "Properties": {
        "Roles": [
          {
            "Ref": "InstanceRoleCloudquery54F86B54",
          },
        ],
      },
      "Type": "AWS::IAM::InstanceProfile",
    },
  },
}
`;
