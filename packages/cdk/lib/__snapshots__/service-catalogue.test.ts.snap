// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`The ServiceCatalogue stack matches the snapshot 1`] = `
{
  "Metadata": {
    "gu:cdk:constructs": [
      "GuSubnetListParameter",
      "GuVpcParameter",
      "GuSecurityGroup",
      "GuSecurityGroup",
      "GuLoggingStreamNameParameter",
      "GuStringParameter",
      "GuAnghammaradTopicParameter",
      "GuDistributionBucketParameter",
      "GuLambdaFunction",
      "GuScheduledLambda",
      "GuLambdaFunction",
      "GuLambdaFunction",
      "GuScheduledLambda",
      "GuLambdaFunction",
    ],
    "gu:cdk:version": "TEST",
  },
  "Parameters": {
    "ActionsStaticSiteBucketArnParam": {
      "Default": "/INFRA/deploy/cloudquery/actions-static-site-bucket-arn",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "AnghammaradSnsArn": {
      "Default": "/account/services/anghammarad.topic.arn",
      "Description": "SSM parameter containing the ARN of the Anghammarad SNS topic",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "DistributionBucketName": {
      "Default": "/account/services/artifact.bucket",
      "Description": "SSM parameter containing the S3 bucket name holding distribution artifacts",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "LoggingStreamName": {
      "Default": "/account/services/logging.stream.name",
      "Description": "SSM parameter containing the Name (not ARN) on the kinesis stream",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "PrivateSubnets": {
      "Default": "/account/vpc/primary/subnets/private",
      "Description": "A list of private subnets",
      "Type": "AWS::SSM::Parameter::Value<List<AWS::EC2::Subnet::Id>>",
    },
    "SsmParameterValueTESTdeployriffraffexternaldatabaseaccesssecuritygroupC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/TEST/deploy/riff-raff/external-database-access-security-group",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueaccountservicesartifactbucketC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/account/services/artifact.bucket",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "VpcId": {
      "Default": "/account/vpc/primary/id",
      "Description": "Virtual Private Cloud to run EC2 instances within. Should NOT be the account default VPC.",
      "Type": "AWS::SSM::Parameter::Value<AWS::EC2::VPC::Id>",
    },
  },
  "Resources": {
    "CloudquerySourceAwsCostExplorerScheduledEventRule85BE97F8": {
      "Properties": {
        "ScheduleExpression": "rate(7 days)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "servicecatalogueCluster5FC34DC5",
                "Arn",
              ],
            },
            "EcsParameters": {
              "LaunchType": "FARGATE",
              "NetworkConfiguration": {
                "AwsVpcConfiguration": {
                  "AssignPublicIp": "DISABLED",
                  "SecurityGroups": [
                    {
                      "Fn::GetAtt": [
                        "PostgresAccessSecurityGroupServicecatalogue03C78F14",
                        "GroupId",
                      ],
                    },
                  ],
                  "Subnets": {
                    "Ref": "PrivateSubnets",
                  },
                },
              },
              "PropagateTags": "TASK_DEFINITION",
              "TaskCount": 1,
              "TaskDefinitionArn": {
                "Ref": "CloudquerySourceAwsCostExplorerTaskDefinition62DC1A04",
              },
            },
            "Id": "Target0",
            "Input": "{}",
            "RoleArn": {
              "Fn::GetAtt": [
                "CloudquerySourceAwsCostExplorerTaskDefinitionEventsRole71FB003A",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "CloudquerySourceAwsCostExplorerTaskDefinition62DC1A04": {
      "Properties": {
        "ContainerDefinitions": [
          {
            "Command": [
              "/bin/sh",
              "-c",
              "printf 'kind: source
spec:
  name: aws
  path: cloudquery/aws
  version: v23.6.1
  tables:
    - aws_costexplorer_*
  destinations:
    - postgresql
  otel_endpoint: 0.0.0.0:4318
  otel_endpoint_insecure: true
  spec:
    regions:
      - eu-west-1
      - eu-west-2
      - us-east-1
      - us-east-2
      - us-west-1
      - ap-southeast-2
      - ca-central-1
    org:
      member_role_name: cloudquery-access
      organization_units:
        - ou-123
' > /data/source.yaml;printf 'kind: destination
spec:
  name: postgresql
  registry: github
  path: cloudquery/postgresql
  version: v7.2.0
  migrate_mode: forced
  spec:
    connection_string: >-
      user=\${DB_USERNAME} password=\${DB_PASSWORD} host=\${DB_HOST} port=5432
      dbname=postgres sslmode=verify-full
' > /data/destination.yaml;/app/cloudquery sync /data/source.yaml /data/destination.yaml --log-format json --log-console --no-log-file",
            ],
            "DependsOn": [
              {
                "Condition": "HEALTHY",
                "ContainerName": "CloudquerySource-AwsCostExplorerAWSOTELCollector",
              },
            ],
            "DockerLabels": {
              "App": "service-catalogue",
              "Name": "AwsCostExplorer",
              "Stack": "deploy",
              "Stage": "TEST",
            },
            "EntryPoint": [
              "",
            ],
            "Environment": [
              {
                "Name": "GOMEMLIMIT",
                "Value": "409MiB",
              },
            ],
            "Essential": true,
            "Image": "ghcr.io/guardian/service-catalogue/cloudquery:sha-0f2713edae5157260cfbf4eaa1f2d682e980fe7e",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "MountPoints": [
              {
                "ContainerPath": "/data",
                "ReadOnly": false,
                "SourceVolume": "config-volume",
              },
              {
                "ContainerPath": "/app/.cq",
                "ReadOnly": false,
                "SourceVolume": "cloudquery-volume",
              },
              {
                "ContainerPath": "/tmp",
                "ReadOnly": false,
                "SourceVolume": "tmp-volume",
              },
            ],
            "Name": "CloudquerySource-AwsCostExplorerContainer",
            "ReadonlyRootFilesystem": true,
            "Secrets": [
              {
                "Name": "DB_USERNAME",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_HOST",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_PASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
              {
                "Name": "CLOUDQUERY_API_KEY",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "cloudqueryapikeyCCF82F53",
                      },
                      ":api-key::",
                    ],
                  ],
                },
              },
            ],
          },
          {
            "Command": [
              "--config=/etc/ecs/ecs-xray.yaml",
            ],
            "Essential": true,
            "HealthCheck": {
              "Command": [
                "CMD",
                "/healthcheck",
              ],
              "Interval": 5,
              "Retries": 3,
              "Timeout": 5,
            },
            "Image": "public.ecr.aws/aws-observability/aws-otel-collector:v0.35.0",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "Name": "CloudquerySource-AwsCostExplorerAWSOTELCollector",
            "PortMappings": [
              {
                "ContainerPort": 4318,
                "Protocol": "tcp",
              },
            ],
          },
          {
            "Command": [
              "/bin/sh",
              "-c",
              "psql -c "INSERT INTO cloudquery_table_frequency VALUES ('aws_costexplorer_%', 'WEEKLY') ON CONFLICT (table_name) DO UPDATE SET frequency = 'WEEKLY'"",
            ],
            "DockerLabels": {
              "App": "service-catalogue",
              "Name": "AwsCostExplorer",
              "Stack": "deploy",
              "Stage": "TEST",
            },
            "EntryPoint": [
              "",
            ],
            "Essential": false,
            "Image": "public.ecr.aws/docker/library/postgres:16-alpine",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "Name": "CloudquerySource-AwsCostExplorerPostgresContainer",
            "Secrets": [
              {
                "Name": "PGUSER",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              {
                "Name": "PGHOST",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              {
                "Name": "PGPASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
            ],
          },
          {
            "Environment": [
              {
                "Name": "STACK",
                "Value": "deploy",
              },
              {
                "Name": "STAGE",
                "Value": "TEST",
              },
              {
                "Name": "APP",
                "Value": "service-catalogue",
              },
              {
                "Name": "GU_REPO",
                "Value": "guardian/service-catalogue",
              },
            ],
            "Essential": true,
            "FirelensConfiguration": {
              "Type": "fluentbit",
            },
            "Image": "ghcr.io/guardian/devx-logs:2",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "CloudquerySourceAwsCostExplorerTaskDefinitionCloudquerySourceAwsCostExplorerFirelensLogGroup0D0D76FF",
                },
                "awslogs-region": {
                  "Ref": "AWS::Region",
                },
                "awslogs-stream-prefix": "deploy/TEST/service-catalogue",
              },
            },
            "Name": "CloudquerySource-AwsCostExplorerFirelens",
          },
        ],
        "Cpu": "256",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "CloudquerySourceAwsCostExplorerTaskDefinitionExecutionRoleD508639D",
            "Arn",
          ],
        },
        "Family": "ServiceCatalogueCloudquerySourceAwsCostExplorerTaskDefinitionD8C37FA5",
        "Memory": "512",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE",
        ],
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "AwsCostExplorer",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "servicecatalogueTESTtaskAwsCostExplorer78777A06",
            "Arn",
          ],
        },
        "Volumes": [
          {
            "Name": "config-volume",
          },
          {
            "Name": "cloudquery-volume",
          },
          {
            "Name": "tmp-volume",
          },
        ],
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "CloudquerySourceAwsCostExplorerTaskDefinitionCloudquerySourceAwsCostExplorerFirelensLogGroup0D0D76FF": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionInDays": 1,
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "AwsCostExplorer",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "CloudquerySourceAwsCostExplorerTaskDefinitionEventsRole71FB003A": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "AwsCostExplorer",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceAwsCostExplorerTaskDefinitionEventsRoleDefaultPolicy6D27ED91": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ecs:RunTask",
              "Condition": {
                "ArnEquals": {
                  "ecs:cluster": {
                    "Fn::GetAtt": [
                      "servicecatalogueCluster5FC34DC5",
                      "Arn",
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Resource": {
                "Ref": "CloudquerySourceAwsCostExplorerTaskDefinition62DC1A04",
              },
            },
            {
              "Action": "ecs:TagResource",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ecs:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":*:task/",
                    {
                      "Ref": "servicecatalogueCluster5FC34DC5",
                    },
                    "/*",
                  ],
                ],
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceAwsCostExplorerTaskDefinitionExecutionRoleD508639D",
                  "Arn",
                ],
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "servicecatalogueTESTtaskAwsCostExplorer78777A06",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceAwsCostExplorerTaskDefinitionEventsRoleDefaultPolicy6D27ED91",
        "Roles": [
          {
            "Ref": "CloudquerySourceAwsCostExplorerTaskDefinitionEventsRole71FB003A",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceAwsCostExplorerTaskDefinitionExecutionRoleD508639D": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "AwsCostExplorer",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceAwsCostExplorerTaskDefinitionExecutionRoleDefaultPolicyEBFC45ED": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
              },
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "cloudqueryapikeyCCF82F53",
              },
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceAwsCostExplorerTaskDefinitionCloudquerySourceAwsCostExplorerFirelensLogGroup0D0D76FF",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceAwsCostExplorerTaskDefinitionExecutionRoleDefaultPolicyEBFC45ED",
        "Roles": [
          {
            "Ref": "CloudquerySourceAwsCostExplorerTaskDefinitionExecutionRoleD508639D",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceDelegatedToSecurityAccountScheduledEventRuleC7320B4E": {
      "Properties": {
        "ScheduleExpression": "cron(0 22 * * ? *)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "servicecatalogueCluster5FC34DC5",
                "Arn",
              ],
            },
            "EcsParameters": {
              "LaunchType": "FARGATE",
              "NetworkConfiguration": {
                "AwsVpcConfiguration": {
                  "AssignPublicIp": "DISABLED",
                  "SecurityGroups": [
                    {
                      "Fn::GetAtt": [
                        "PostgresAccessSecurityGroupServicecatalogue03C78F14",
                        "GroupId",
                      ],
                    },
                  ],
                  "Subnets": {
                    "Ref": "PrivateSubnets",
                  },
                },
              },
              "PropagateTags": "TASK_DEFINITION",
              "TaskCount": 1,
              "TaskDefinitionArn": {
                "Ref": "CloudquerySourceDelegatedToSecurityAccountTaskDefinitionD407788D",
              },
            },
            "Id": "Target0",
            "Input": "{}",
            "RoleArn": {
              "Fn::GetAtt": [
                "CloudquerySourceDelegatedToSecurityAccountTaskDefinitionEventsRoleA78E8779",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "CloudquerySourceDelegatedToSecurityAccountTaskDefinitionCloudquerySourceDelegatedToSecurityAccountFirelensLogGroupEC2CB8DA": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionInDays": 1,
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "DelegatedToSecurityAccount",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "CloudquerySourceDelegatedToSecurityAccountTaskDefinitionD407788D": {
      "Properties": {
        "ContainerDefinitions": [
          {
            "Command": [
              "/bin/sh",
              "-c",
              "printf 'kind: source
spec:
  name: aws
  path: cloudquery/aws
  version: v23.6.1
  tables:
    - aws_accessanalyzer_*
    - aws_securityhub_*
  destinations:
    - postgresql
  otel_endpoint: 0.0.0.0:4318
  otel_endpoint_insecure: true
  spec:
    concurrency: 2000
    regions:
      - eu-west-1
      - eu-west-2
      - us-east-1
      - us-east-2
      - us-west-1
      - ap-southeast-2
      - ca-central-1
    accounts:
      - id: cq-for-000000000015
        role_arn: arn:aws:iam::000000000015:role/cloudquery-access
    table_options:
      aws_securityhub_findings:
        get_findings:
          - filters:
              record_state:
                - comparison: EQUALS
                  value: ACTIVE
              compliance_status:
                - comparison: NOT_EQUALS
                  value: PASSED
              workflow_status:
                - comparison: NOT_EQUALS
                  value: RESOLVED
              severity_normalized:
                - Gte: 50
' > /data/source.yaml;printf 'kind: destination
spec:
  name: postgresql
  registry: github
  path: cloudquery/postgresql
  version: v7.2.0
  migrate_mode: forced
  spec:
    connection_string: >-
      user=\${DB_USERNAME} password=\${DB_PASSWORD} host=\${DB_HOST} port=5432
      dbname=postgres sslmode=verify-full
' > /data/destination.yaml;/app/cloudquery sync /data/source.yaml /data/destination.yaml --log-format json --log-console --no-log-file",
            ],
            "DependsOn": [
              {
                "Condition": "HEALTHY",
                "ContainerName": "CloudquerySource-DelegatedToSecurityAccountAWSOTELCollector",
              },
            ],
            "DockerLabels": {
              "App": "service-catalogue",
              "Name": "DelegatedToSecurityAccount",
              "Stack": "deploy",
              "Stage": "TEST",
            },
            "EntryPoint": [
              "",
            ],
            "Environment": [
              {
                "Name": "GOMEMLIMIT",
                "Value": "1638MiB",
              },
            ],
            "Essential": true,
            "Image": "ghcr.io/guardian/service-catalogue/cloudquery:sha-0f2713edae5157260cfbf4eaa1f2d682e980fe7e",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "MountPoints": [
              {
                "ContainerPath": "/data",
                "ReadOnly": false,
                "SourceVolume": "config-volume",
              },
              {
                "ContainerPath": "/app/.cq",
                "ReadOnly": false,
                "SourceVolume": "cloudquery-volume",
              },
              {
                "ContainerPath": "/tmp",
                "ReadOnly": false,
                "SourceVolume": "tmp-volume",
              },
            ],
            "Name": "CloudquerySource-DelegatedToSecurityAccountContainer",
            "ReadonlyRootFilesystem": true,
            "Secrets": [
              {
                "Name": "DB_USERNAME",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_HOST",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_PASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
              {
                "Name": "CLOUDQUERY_API_KEY",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "cloudqueryapikeyCCF82F53",
                      },
                      ":api-key::",
                    ],
                  ],
                },
              },
            ],
          },
          {
            "Command": [
              "--config=/etc/ecs/ecs-xray.yaml",
            ],
            "Essential": true,
            "HealthCheck": {
              "Command": [
                "CMD",
                "/healthcheck",
              ],
              "Interval": 5,
              "Retries": 3,
              "Timeout": 5,
            },
            "Image": "public.ecr.aws/aws-observability/aws-otel-collector:v0.35.0",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "Name": "CloudquerySource-DelegatedToSecurityAccountAWSOTELCollector",
            "PortMappings": [
              {
                "ContainerPort": 4318,
                "Protocol": "tcp",
              },
            ],
          },
          {
            "Command": [
              "/bin/sh",
              "-c",
              "psql -c "INSERT INTO cloudquery_table_frequency VALUES ('aws_accessanalyzer_%', 'DAILY'),('aws_securityhub_%', 'DAILY') ON CONFLICT (table_name) DO UPDATE SET frequency = 'DAILY'"",
            ],
            "DockerLabels": {
              "App": "service-catalogue",
              "Name": "DelegatedToSecurityAccount",
              "Stack": "deploy",
              "Stage": "TEST",
            },
            "EntryPoint": [
              "",
            ],
            "Essential": false,
            "Image": "public.ecr.aws/docker/library/postgres:16-alpine",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "Name": "CloudquerySource-DelegatedToSecurityAccountPostgresContainer",
            "Secrets": [
              {
                "Name": "PGUSER",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              {
                "Name": "PGHOST",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              {
                "Name": "PGPASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
            ],
          },
          {
            "Environment": [
              {
                "Name": "STACK",
                "Value": "deploy",
              },
              {
                "Name": "STAGE",
                "Value": "TEST",
              },
              {
                "Name": "APP",
                "Value": "service-catalogue",
              },
              {
                "Name": "GU_REPO",
                "Value": "guardian/service-catalogue",
              },
            ],
            "Essential": true,
            "FirelensConfiguration": {
              "Type": "fluentbit",
            },
            "Image": "ghcr.io/guardian/devx-logs:2",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "CloudquerySourceDelegatedToSecurityAccountTaskDefinitionCloudquerySourceDelegatedToSecurityAccountFirelensLogGroupEC2CB8DA",
                },
                "awslogs-region": {
                  "Ref": "AWS::Region",
                },
                "awslogs-stream-prefix": "deploy/TEST/service-catalogue",
              },
            },
            "Name": "CloudquerySource-DelegatedToSecurityAccountFirelens",
          },
        ],
        "Cpu": "1024",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "CloudquerySourceDelegatedToSecurityAccountTaskDefinitionExecutionRole40841493",
            "Arn",
          ],
        },
        "Family": "ServiceCatalogueCloudquerySourceDelegatedToSecurityAccountTaskDefinitionCFCDF71C",
        "Memory": "2048",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE",
        ],
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "DelegatedToSecurityAccount",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "servicecatalogueTESTtaskDelegatedToSecurityAccountB1073007",
            "Arn",
          ],
        },
        "Volumes": [
          {
            "Name": "config-volume",
          },
          {
            "Name": "cloudquery-volume",
          },
          {
            "Name": "tmp-volume",
          },
        ],
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "CloudquerySourceDelegatedToSecurityAccountTaskDefinitionEventsRoleA78E8779": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "DelegatedToSecurityAccount",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceDelegatedToSecurityAccountTaskDefinitionEventsRoleDefaultPolicy54F7B08B": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ecs:RunTask",
              "Condition": {
                "ArnEquals": {
                  "ecs:cluster": {
                    "Fn::GetAtt": [
                      "servicecatalogueCluster5FC34DC5",
                      "Arn",
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Resource": {
                "Ref": "CloudquerySourceDelegatedToSecurityAccountTaskDefinitionD407788D",
              },
            },
            {
              "Action": "ecs:TagResource",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ecs:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":*:task/",
                    {
                      "Ref": "servicecatalogueCluster5FC34DC5",
                    },
                    "/*",
                  ],
                ],
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceDelegatedToSecurityAccountTaskDefinitionExecutionRole40841493",
                  "Arn",
                ],
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "servicecatalogueTESTtaskDelegatedToSecurityAccountB1073007",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceDelegatedToSecurityAccountTaskDefinitionEventsRoleDefaultPolicy54F7B08B",
        "Roles": [
          {
            "Ref": "CloudquerySourceDelegatedToSecurityAccountTaskDefinitionEventsRoleA78E8779",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceDelegatedToSecurityAccountTaskDefinitionExecutionRole40841493": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "DelegatedToSecurityAccount",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceDelegatedToSecurityAccountTaskDefinitionExecutionRoleDefaultPolicy7CA81E4D": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
              },
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "cloudqueryapikeyCCF82F53",
              },
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceDelegatedToSecurityAccountTaskDefinitionCloudquerySourceDelegatedToSecurityAccountFirelensLogGroupEC2CB8DA",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceDelegatedToSecurityAccountTaskDefinitionExecutionRoleDefaultPolicy7CA81E4D",
        "Roles": [
          {
            "Ref": "CloudquerySourceDelegatedToSecurityAccountTaskDefinitionExecutionRole40841493",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceDeployToolsListOrgsScheduledEventRuleDF9BD8AF": {
      "Properties": {
        "ScheduleExpression": "rate(1 day)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "servicecatalogueCluster5FC34DC5",
                "Arn",
              ],
            },
            "EcsParameters": {
              "LaunchType": "FARGATE",
              "NetworkConfiguration": {
                "AwsVpcConfiguration": {
                  "AssignPublicIp": "DISABLED",
                  "SecurityGroups": [
                    {
                      "Fn::GetAtt": [
                        "PostgresAccessSecurityGroupServicecatalogue03C78F14",
                        "GroupId",
                      ],
                    },
                  ],
                  "Subnets": {
                    "Ref": "PrivateSubnets",
                  },
                },
              },
              "PropagateTags": "TASK_DEFINITION",
              "TaskCount": 1,
              "TaskDefinitionArn": {
                "Ref": "CloudquerySourceDeployToolsListOrgsTaskDefinitionDE2A34D9",
              },
            },
            "Id": "Target0",
            "Input": "{}",
            "RoleArn": {
              "Fn::GetAtt": [
                "CloudquerySourceDeployToolsListOrgsTaskDefinitionEventsRole349D11D9",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "CloudquerySourceDeployToolsListOrgsTaskDefinitionCloudquerySourceDeployToolsListOrgsFirelensLogGroup27F2A6EA": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionInDays": 1,
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "DeployToolsListOrgs",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "CloudquerySourceDeployToolsListOrgsTaskDefinitionDE2A34D9": {
      "Properties": {
        "ContainerDefinitions": [
          {
            "Command": [
              "/bin/sh",
              "-c",
              "printf 'kind: source
spec:
  name: aws
  path: cloudquery/aws
  version: v23.6.1
  tables:
    - aws_organization*
  destinations:
    - postgresql
  otel_endpoint: 0.0.0.0:4318
  otel_endpoint_insecure: true
  spec:
    regions:
      - eu-west-1
      - eu-west-2
      - us-east-1
      - us-east-2
      - us-west-1
      - ap-southeast-2
      - ca-central-1
    accounts:
      - id: cq-for-000000000018
        role_arn: arn:aws:iam::000000000018:role/cloudquery-access
' > /data/source.yaml;printf 'kind: destination
spec:
  name: postgresql
  registry: github
  path: cloudquery/postgresql
  version: v7.2.0
  migrate_mode: forced
  spec:
    connection_string: >-
      user=\${DB_USERNAME} password=\${DB_PASSWORD} host=\${DB_HOST} port=5432
      dbname=postgres sslmode=verify-full
' > /data/destination.yaml;/app/cloudquery sync /data/source.yaml /data/destination.yaml --log-format json --log-console --no-log-file",
            ],
            "DependsOn": [
              {
                "Condition": "HEALTHY",
                "ContainerName": "CloudquerySource-DeployToolsListOrgsAWSOTELCollector",
              },
            ],
            "DockerLabels": {
              "App": "service-catalogue",
              "Name": "DeployToolsListOrgs",
              "Stack": "deploy",
              "Stage": "TEST",
            },
            "EntryPoint": [
              "",
            ],
            "Environment": [
              {
                "Name": "GOMEMLIMIT",
                "Value": "409MiB",
              },
            ],
            "Essential": true,
            "Image": "ghcr.io/guardian/service-catalogue/cloudquery:sha-0f2713edae5157260cfbf4eaa1f2d682e980fe7e",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "MountPoints": [
              {
                "ContainerPath": "/data",
                "ReadOnly": false,
                "SourceVolume": "config-volume",
              },
              {
                "ContainerPath": "/app/.cq",
                "ReadOnly": false,
                "SourceVolume": "cloudquery-volume",
              },
              {
                "ContainerPath": "/tmp",
                "ReadOnly": false,
                "SourceVolume": "tmp-volume",
              },
            ],
            "Name": "CloudquerySource-DeployToolsListOrgsContainer",
            "ReadonlyRootFilesystem": true,
            "Secrets": [
              {
                "Name": "DB_USERNAME",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_HOST",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_PASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
              {
                "Name": "CLOUDQUERY_API_KEY",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "cloudqueryapikeyCCF82F53",
                      },
                      ":api-key::",
                    ],
                  ],
                },
              },
            ],
          },
          {
            "Command": [
              "--config=/etc/ecs/ecs-xray.yaml",
            ],
            "Essential": true,
            "HealthCheck": {
              "Command": [
                "CMD",
                "/healthcheck",
              ],
              "Interval": 5,
              "Retries": 3,
              "Timeout": 5,
            },
            "Image": "public.ecr.aws/aws-observability/aws-otel-collector:v0.35.0",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "Name": "CloudquerySource-DeployToolsListOrgsAWSOTELCollector",
            "PortMappings": [
              {
                "ContainerPort": 4318,
                "Protocol": "tcp",
              },
            ],
          },
          {
            "Command": [
              "/bin/sh",
              "-c",
              "psql -c "INSERT INTO cloudquery_table_frequency VALUES ('aws_organization%', 'DAILY') ON CONFLICT (table_name) DO UPDATE SET frequency = 'DAILY'"",
            ],
            "DockerLabels": {
              "App": "service-catalogue",
              "Name": "DeployToolsListOrgs",
              "Stack": "deploy",
              "Stage": "TEST",
            },
            "EntryPoint": [
              "",
            ],
            "Essential": false,
            "Image": "public.ecr.aws/docker/library/postgres:16-alpine",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "Name": "CloudquerySource-DeployToolsListOrgsPostgresContainer",
            "Secrets": [
              {
                "Name": "PGUSER",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              {
                "Name": "PGHOST",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              {
                "Name": "PGPASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
            ],
          },
          {
            "Environment": [
              {
                "Name": "STACK",
                "Value": "deploy",
              },
              {
                "Name": "STAGE",
                "Value": "TEST",
              },
              {
                "Name": "APP",
                "Value": "service-catalogue",
              },
              {
                "Name": "GU_REPO",
                "Value": "guardian/service-catalogue",
              },
            ],
            "Essential": true,
            "FirelensConfiguration": {
              "Type": "fluentbit",
            },
            "Image": "ghcr.io/guardian/devx-logs:2",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "CloudquerySourceDeployToolsListOrgsTaskDefinitionCloudquerySourceDeployToolsListOrgsFirelensLogGroup27F2A6EA",
                },
                "awslogs-region": {
                  "Ref": "AWS::Region",
                },
                "awslogs-stream-prefix": "deploy/TEST/service-catalogue",
              },
            },
            "Name": "CloudquerySource-DeployToolsListOrgsFirelens",
          },
        ],
        "Cpu": "256",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "CloudquerySourceDeployToolsListOrgsTaskDefinitionExecutionRole8F75CE49",
            "Arn",
          ],
        },
        "Family": "ServiceCatalogueCloudquerySourceDeployToolsListOrgsTaskDefinitionDB3242BB",
        "Memory": "512",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE",
        ],
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "DeployToolsListOrgs",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "servicecatalogueTESTtaskDeployToolsListOrgs7EFA762E",
            "Arn",
          ],
        },
        "Volumes": [
          {
            "Name": "config-volume",
          },
          {
            "Name": "cloudquery-volume",
          },
          {
            "Name": "tmp-volume",
          },
        ],
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "CloudquerySourceDeployToolsListOrgsTaskDefinitionEventsRole349D11D9": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "DeployToolsListOrgs",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceDeployToolsListOrgsTaskDefinitionEventsRoleDefaultPolicy229537D4": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ecs:RunTask",
              "Condition": {
                "ArnEquals": {
                  "ecs:cluster": {
                    "Fn::GetAtt": [
                      "servicecatalogueCluster5FC34DC5",
                      "Arn",
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Resource": {
                "Ref": "CloudquerySourceDeployToolsListOrgsTaskDefinitionDE2A34D9",
              },
            },
            {
              "Action": "ecs:TagResource",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ecs:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":*:task/",
                    {
                      "Ref": "servicecatalogueCluster5FC34DC5",
                    },
                    "/*",
                  ],
                ],
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceDeployToolsListOrgsTaskDefinitionExecutionRole8F75CE49",
                  "Arn",
                ],
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "servicecatalogueTESTtaskDeployToolsListOrgs7EFA762E",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceDeployToolsListOrgsTaskDefinitionEventsRoleDefaultPolicy229537D4",
        "Roles": [
          {
            "Ref": "CloudquerySourceDeployToolsListOrgsTaskDefinitionEventsRole349D11D9",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceDeployToolsListOrgsTaskDefinitionExecutionRole8F75CE49": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "DeployToolsListOrgs",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceDeployToolsListOrgsTaskDefinitionExecutionRoleDefaultPolicyDA54629E": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
              },
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "cloudqueryapikeyCCF82F53",
              },
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceDeployToolsListOrgsTaskDefinitionCloudquerySourceDeployToolsListOrgsFirelensLogGroup27F2A6EA",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceDeployToolsListOrgsTaskDefinitionExecutionRoleDefaultPolicyDA54629E",
        "Roles": [
          {
            "Ref": "CloudquerySourceDeployToolsListOrgsTaskDefinitionExecutionRole8F75CE49",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceFastlyServicesScheduledEventRule1F83E593": {
      "Properties": {
        "ScheduleExpression": "rate(1 day)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "servicecatalogueCluster5FC34DC5",
                "Arn",
              ],
            },
            "EcsParameters": {
              "LaunchType": "FARGATE",
              "NetworkConfiguration": {
                "AwsVpcConfiguration": {
                  "AssignPublicIp": "DISABLED",
                  "SecurityGroups": [
                    {
                      "Fn::GetAtt": [
                        "PostgresAccessSecurityGroupServicecatalogue03C78F14",
                        "GroupId",
                      ],
                    },
                  ],
                  "Subnets": {
                    "Ref": "PrivateSubnets",
                  },
                },
              },
              "PropagateTags": "TASK_DEFINITION",
              "TaskCount": 1,
              "TaskDefinitionArn": {
                "Ref": "CloudquerySourceFastlyServicesTaskDefinitionDCCD3FD4",
              },
            },
            "Id": "Target0",
            "Input": "{}",
            "RoleArn": {
              "Fn::GetAtt": [
                "CloudquerySourceFastlyServicesTaskDefinitionEventsRoleE821B76C",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "CloudquerySourceFastlyServicesTaskDefinitionCloudquerySourceFastlyServicesFirelensLogGroupF5954401": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionInDays": 1,
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "FastlyServices",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "CloudquerySourceFastlyServicesTaskDefinitionDCCD3FD4": {
      "Properties": {
        "ContainerDefinitions": [
          {
            "Command": [
              "/bin/sh",
              "-c",
              "printf 'kind: source
spec:
  name: fastly
  path: cloudquery/fastly
  version: v3.0.7
  tables:
    - fastly_services
    - fastly_service_versions
    - fastly_service_backends
    - fastly_service_domains
    - fastly_service_health_checks
    - fastly_account_users
  destinations:
    - postgresql
  spec:
    concurrency: 1000
    fastly_api_key: \${FASTLY_API_KEY}
' > /data/source.yaml;printf 'kind: destination
spec:
  name: postgresql
  registry: github
  path: cloudquery/postgresql
  version: v7.2.0
  migrate_mode: forced
  spec:
    connection_string: >-
      user=\${DB_USERNAME} password=\${DB_PASSWORD} host=\${DB_HOST} port=5432
      dbname=postgres sslmode=verify-full
' > /data/destination.yaml;/app/cloudquery sync /data/source.yaml /data/destination.yaml --log-format json --log-console --no-log-file",
            ],
            "DependsOn": [
              {
                "Condition": "HEALTHY",
                "ContainerName": "CloudquerySource-FastlyServicesAWSOTELCollector",
              },
            ],
            "DockerLabels": {
              "App": "service-catalogue",
              "Name": "FastlyServices",
              "Stack": "deploy",
              "Stage": "TEST",
            },
            "EntryPoint": [
              "",
            ],
            "Environment": [
              {
                "Name": "GOMEMLIMIT",
                "Value": "409MiB",
              },
            ],
            "Essential": true,
            "Image": "ghcr.io/guardian/service-catalogue/cloudquery:sha-0f2713edae5157260cfbf4eaa1f2d682e980fe7e",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "MountPoints": [
              {
                "ContainerPath": "/data",
                "ReadOnly": false,
                "SourceVolume": "config-volume",
              },
              {
                "ContainerPath": "/app/.cq",
                "ReadOnly": false,
                "SourceVolume": "cloudquery-volume",
              },
              {
                "ContainerPath": "/tmp",
                "ReadOnly": false,
                "SourceVolume": "tmp-volume",
              },
            ],
            "Name": "CloudquerySource-FastlyServicesContainer",
            "ReadonlyRootFilesystem": true,
            "Secrets": [
              {
                "Name": "FASTLY_API_KEY",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "fastlycredentialsF42D3C80",
                      },
                      ":api-key::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_USERNAME",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_HOST",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_PASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
              {
                "Name": "CLOUDQUERY_API_KEY",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "cloudqueryapikeyCCF82F53",
                      },
                      ":api-key::",
                    ],
                  ],
                },
              },
            ],
          },
          {
            "Command": [
              "--config=/etc/ecs/ecs-xray.yaml",
            ],
            "Essential": true,
            "HealthCheck": {
              "Command": [
                "CMD",
                "/healthcheck",
              ],
              "Interval": 5,
              "Retries": 3,
              "Timeout": 5,
            },
            "Image": "public.ecr.aws/aws-observability/aws-otel-collector:v0.35.0",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "Name": "CloudquerySource-FastlyServicesAWSOTELCollector",
            "PortMappings": [
              {
                "ContainerPort": 4318,
                "Protocol": "tcp",
              },
            ],
          },
          {
            "Command": [
              "/bin/sh",
              "-c",
              "psql -c "INSERT INTO cloudquery_table_frequency VALUES ('fastly_services', 'DAILY'),('fastly_service_versions', 'DAILY'),('fastly_service_backends', 'DAILY'),('fastly_service_domains', 'DAILY'),('fastly_service_health_checks', 'DAILY'),('fastly_account_users', 'DAILY') ON CONFLICT (table_name) DO UPDATE SET frequency = 'DAILY'"",
            ],
            "DockerLabels": {
              "App": "service-catalogue",
              "Name": "FastlyServices",
              "Stack": "deploy",
              "Stage": "TEST",
            },
            "EntryPoint": [
              "",
            ],
            "Essential": false,
            "Image": "public.ecr.aws/docker/library/postgres:16-alpine",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "Name": "CloudquerySource-FastlyServicesPostgresContainer",
            "Secrets": [
              {
                "Name": "PGUSER",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              {
                "Name": "PGHOST",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              {
                "Name": "PGPASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
            ],
          },
          {
            "Environment": [
              {
                "Name": "STACK",
                "Value": "deploy",
              },
              {
                "Name": "STAGE",
                "Value": "TEST",
              },
              {
                "Name": "APP",
                "Value": "service-catalogue",
              },
              {
                "Name": "GU_REPO",
                "Value": "guardian/service-catalogue",
              },
            ],
            "Essential": true,
            "FirelensConfiguration": {
              "Type": "fluentbit",
            },
            "Image": "ghcr.io/guardian/devx-logs:2",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "CloudquerySourceFastlyServicesTaskDefinitionCloudquerySourceFastlyServicesFirelensLogGroupF5954401",
                },
                "awslogs-region": {
                  "Ref": "AWS::Region",
                },
                "awslogs-stream-prefix": "deploy/TEST/service-catalogue",
              },
            },
            "Name": "CloudquerySource-FastlyServicesFirelens",
          },
        ],
        "Cpu": "256",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "CloudquerySourceFastlyServicesTaskDefinitionExecutionRoleEF21A3A9",
            "Arn",
          ],
        },
        "Family": "ServiceCatalogueCloudquerySourceFastlyServicesTaskDefinition92125649",
        "Memory": "512",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE",
        ],
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "FastlyServices",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "servicecatalogueTESTtaskFastlyServices33D5467F",
            "Arn",
          ],
        },
        "Volumes": [
          {
            "Name": "config-volume",
          },
          {
            "Name": "cloudquery-volume",
          },
          {
            "Name": "tmp-volume",
          },
        ],
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "CloudquerySourceFastlyServicesTaskDefinitionEventsRoleDefaultPolicy4E34F504": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ecs:RunTask",
              "Condition": {
                "ArnEquals": {
                  "ecs:cluster": {
                    "Fn::GetAtt": [
                      "servicecatalogueCluster5FC34DC5",
                      "Arn",
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Resource": {
                "Ref": "CloudquerySourceFastlyServicesTaskDefinitionDCCD3FD4",
              },
            },
            {
              "Action": "ecs:TagResource",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ecs:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":*:task/",
                    {
                      "Ref": "servicecatalogueCluster5FC34DC5",
                    },
                    "/*",
                  ],
                ],
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceFastlyServicesTaskDefinitionExecutionRoleEF21A3A9",
                  "Arn",
                ],
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "servicecatalogueTESTtaskFastlyServices33D5467F",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceFastlyServicesTaskDefinitionEventsRoleDefaultPolicy4E34F504",
        "Roles": [
          {
            "Ref": "CloudquerySourceFastlyServicesTaskDefinitionEventsRoleE821B76C",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceFastlyServicesTaskDefinitionEventsRoleE821B76C": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "FastlyServices",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceFastlyServicesTaskDefinitionExecutionRoleDefaultPolicy1B888D16": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "fastlycredentialsF42D3C80",
              },
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
              },
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "cloudqueryapikeyCCF82F53",
              },
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceFastlyServicesTaskDefinitionCloudquerySourceFastlyServicesFirelensLogGroupF5954401",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceFastlyServicesTaskDefinitionExecutionRoleDefaultPolicy1B888D16",
        "Roles": [
          {
            "Ref": "CloudquerySourceFastlyServicesTaskDefinitionExecutionRoleEF21A3A9",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceFastlyServicesTaskDefinitionExecutionRoleEF21A3A9": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "FastlyServices",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceGalaxiesScheduledEventRuleCC774CB8": {
      "Properties": {
        "ScheduleExpression": "rate(1 day)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "servicecatalogueCluster5FC34DC5",
                "Arn",
              ],
            },
            "EcsParameters": {
              "LaunchType": "FARGATE",
              "NetworkConfiguration": {
                "AwsVpcConfiguration": {
                  "AssignPublicIp": "DISABLED",
                  "SecurityGroups": [
                    {
                      "Fn::GetAtt": [
                        "PostgresAccessSecurityGroupServicecatalogue03C78F14",
                        "GroupId",
                      ],
                    },
                  ],
                  "Subnets": {
                    "Ref": "PrivateSubnets",
                  },
                },
              },
              "PropagateTags": "TASK_DEFINITION",
              "TaskCount": 1,
              "TaskDefinitionArn": {
                "Ref": "CloudquerySourceGalaxiesTaskDefinition0777FEFC",
              },
            },
            "Id": "Target0",
            "Input": "{}",
            "RoleArn": {
              "Fn::GetAtt": [
                "CloudquerySourceGalaxiesTaskDefinitionEventsRoleD1AF9A82",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "CloudquerySourceGalaxiesTaskDefinition0777FEFC": {
      "Properties": {
        "ContainerDefinitions": [
          {
            "Command": [
              "/bin/sh",
              "-c",
              {
                "Fn::Join": [
                  "",
                  [
                    "printf 'kind: source
spec:
  name: galaxies
  path: guardian/galaxies
  registry: github
  version: v1.1.1
  destinations:
    - postgresql
  tables:
    - galaxies_people_table
    - galaxies_teams_table
    - galaxies_streams_table
    - galaxies_people_profile_info_table
  spec:
    bucket: ",
                    {
                      "Fn::Select": [
                        0,
                        {
                          "Fn::Split": [
                            "/",
                            {
                              "Fn::Select": [
                                5,
                                {
                                  "Fn::Split": [
                                    ":",
                                    {
                                      "Ref": "ActionsStaticSiteBucketArnParam",
                                    },
                                  ],
                                },
                              ],
                            },
                          ],
                        },
                      ],
                    },
                    "
' > /data/source.yaml;printf 'kind: destination
spec:
  name: postgresql
  registry: github
  path: cloudquery/postgresql
  version: v7.2.0
  migrate_mode: forced
  spec:
    connection_string: >-
      user=\${DB_USERNAME} password=\${DB_PASSWORD} host=\${DB_HOST} port=5432
      dbname=postgres sslmode=verify-full
' > /data/destination.yaml;/app/cloudquery sync /data/source.yaml /data/destination.yaml --log-format json --log-console --no-log-file",
                  ],
                ],
              },
            ],
            "DependsOn": [
              {
                "Condition": "HEALTHY",
                "ContainerName": "CloudquerySource-GalaxiesAWSOTELCollector",
              },
            ],
            "DockerLabels": {
              "App": "service-catalogue",
              "Name": "Galaxies",
              "Stack": "deploy",
              "Stage": "TEST",
            },
            "EntryPoint": [
              "",
            ],
            "Environment": [
              {
                "Name": "GOMEMLIMIT",
                "Value": "409MiB",
              },
            ],
            "Essential": true,
            "Image": "ghcr.io/guardian/service-catalogue/cloudquery:sha-0f2713edae5157260cfbf4eaa1f2d682e980fe7e",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "MountPoints": [
              {
                "ContainerPath": "/data",
                "ReadOnly": false,
                "SourceVolume": "config-volume",
              },
              {
                "ContainerPath": "/app/.cq",
                "ReadOnly": false,
                "SourceVolume": "cloudquery-volume",
              },
              {
                "ContainerPath": "/tmp",
                "ReadOnly": false,
                "SourceVolume": "tmp-volume",
              },
            ],
            "Name": "CloudquerySource-GalaxiesContainer",
            "ReadonlyRootFilesystem": true,
            "Secrets": [
              {
                "Name": "DB_USERNAME",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_HOST",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_PASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
              {
                "Name": "CLOUDQUERY_API_KEY",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "cloudqueryapikeyCCF82F53",
                      },
                      ":api-key::",
                    ],
                  ],
                },
              },
            ],
          },
          {
            "Command": [
              "--config=/etc/ecs/ecs-xray.yaml",
            ],
            "Essential": true,
            "HealthCheck": {
              "Command": [
                "CMD",
                "/healthcheck",
              ],
              "Interval": 5,
              "Retries": 3,
              "Timeout": 5,
            },
            "Image": "public.ecr.aws/aws-observability/aws-otel-collector:v0.35.0",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "Name": "CloudquerySource-GalaxiesAWSOTELCollector",
            "PortMappings": [
              {
                "ContainerPort": 4318,
                "Protocol": "tcp",
              },
            ],
          },
          {
            "Command": [
              "/bin/sh",
              "-c",
              "psql -c "INSERT INTO cloudquery_table_frequency VALUES ('galaxies_people_table', 'DAILY'),('galaxies_teams_table', 'DAILY'),('galaxies_streams_table', 'DAILY'),('galaxies_people_profile_info_table', 'DAILY') ON CONFLICT (table_name) DO UPDATE SET frequency = 'DAILY'"",
            ],
            "DockerLabels": {
              "App": "service-catalogue",
              "Name": "Galaxies",
              "Stack": "deploy",
              "Stage": "TEST",
            },
            "EntryPoint": [
              "",
            ],
            "Essential": false,
            "Image": "public.ecr.aws/docker/library/postgres:16-alpine",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "Name": "CloudquerySource-GalaxiesPostgresContainer",
            "Secrets": [
              {
                "Name": "PGUSER",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              {
                "Name": "PGHOST",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              {
                "Name": "PGPASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
            ],
          },
          {
            "Environment": [
              {
                "Name": "STACK",
                "Value": "deploy",
              },
              {
                "Name": "STAGE",
                "Value": "TEST",
              },
              {
                "Name": "APP",
                "Value": "service-catalogue",
              },
              {
                "Name": "GU_REPO",
                "Value": "guardian/service-catalogue",
              },
            ],
            "Essential": true,
            "FirelensConfiguration": {
              "Type": "fluentbit",
            },
            "Image": "ghcr.io/guardian/devx-logs:2",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "CloudquerySourceGalaxiesTaskDefinitionCloudquerySourceGalaxiesFirelensLogGroupB5272E0D",
                },
                "awslogs-region": {
                  "Ref": "AWS::Region",
                },
                "awslogs-stream-prefix": "deploy/TEST/service-catalogue",
              },
            },
            "Name": "CloudquerySource-GalaxiesFirelens",
          },
        ],
        "Cpu": "256",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "CloudquerySourceGalaxiesTaskDefinitionExecutionRoleDDB0DD4B",
            "Arn",
          ],
        },
        "Family": "ServiceCatalogueCloudquerySourceGalaxiesTaskDefinition6724C33F",
        "Memory": "512",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE",
        ],
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "Galaxies",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "servicecatalogueTESTtaskGalaxiesDBF8C9E4",
            "Arn",
          ],
        },
        "Volumes": [
          {
            "Name": "config-volume",
          },
          {
            "Name": "cloudquery-volume",
          },
          {
            "Name": "tmp-volume",
          },
        ],
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "CloudquerySourceGalaxiesTaskDefinitionCloudquerySourceGalaxiesFirelensLogGroupB5272E0D": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionInDays": 1,
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "Galaxies",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "CloudquerySourceGalaxiesTaskDefinitionEventsRoleD1AF9A82": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "Galaxies",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceGalaxiesTaskDefinitionEventsRoleDefaultPolicy022DA6EA": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ecs:RunTask",
              "Condition": {
                "ArnEquals": {
                  "ecs:cluster": {
                    "Fn::GetAtt": [
                      "servicecatalogueCluster5FC34DC5",
                      "Arn",
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Resource": {
                "Ref": "CloudquerySourceGalaxiesTaskDefinition0777FEFC",
              },
            },
            {
              "Action": "ecs:TagResource",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ecs:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":*:task/",
                    {
                      "Ref": "servicecatalogueCluster5FC34DC5",
                    },
                    "/*",
                  ],
                ],
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceGalaxiesTaskDefinitionExecutionRoleDDB0DD4B",
                  "Arn",
                ],
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "servicecatalogueTESTtaskGalaxiesDBF8C9E4",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceGalaxiesTaskDefinitionEventsRoleDefaultPolicy022DA6EA",
        "Roles": [
          {
            "Ref": "CloudquerySourceGalaxiesTaskDefinitionEventsRoleD1AF9A82",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceGalaxiesTaskDefinitionExecutionRoleDDB0DD4B": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "Galaxies",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceGalaxiesTaskDefinitionExecutionRoleDefaultPolicyB6D2CB7A": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
              },
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "cloudqueryapikeyCCF82F53",
              },
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceGalaxiesTaskDefinitionCloudquerySourceGalaxiesFirelensLogGroupB5272E0D",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceGalaxiesTaskDefinitionExecutionRoleDefaultPolicyB6D2CB7A",
        "Roles": [
          {
            "Ref": "CloudquerySourceGalaxiesTaskDefinitionExecutionRoleDDB0DD4B",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceGitHubIssuesScheduledEventRuleAF7C253C": {
      "Properties": {
        "ScheduleExpression": "cron(0 2 * * ? *)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "servicecatalogueCluster5FC34DC5",
                "Arn",
              ],
            },
            "EcsParameters": {
              "LaunchType": "FARGATE",
              "NetworkConfiguration": {
                "AwsVpcConfiguration": {
                  "AssignPublicIp": "DISABLED",
                  "SecurityGroups": [
                    {
                      "Fn::GetAtt": [
                        "PostgresAccessSecurityGroupServicecatalogue03C78F14",
                        "GroupId",
                      ],
                    },
                  ],
                  "Subnets": {
                    "Ref": "PrivateSubnets",
                  },
                },
              },
              "PropagateTags": "TASK_DEFINITION",
              "TaskCount": 1,
              "TaskDefinitionArn": {
                "Ref": "CloudquerySourceGitHubIssuesTaskDefinitionFA21D536",
              },
            },
            "Id": "Target0",
            "Input": "{}",
            "RoleArn": {
              "Fn::GetAtt": [
                "CloudquerySourceGitHubIssuesTaskDefinitionEventsRole056ACC7E",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "CloudquerySourceGitHubIssuesTaskDefinitionCloudquerySourceGitHubIssuesFirelensLogGroupE9112ED9": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionInDays": 1,
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "GitHubIssues",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "CloudquerySourceGitHubIssuesTaskDefinitionEventsRole056ACC7E": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "GitHubIssues",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceGitHubIssuesTaskDefinitionEventsRoleDefaultPolicy13E8811A": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ecs:RunTask",
              "Condition": {
                "ArnEquals": {
                  "ecs:cluster": {
                    "Fn::GetAtt": [
                      "servicecatalogueCluster5FC34DC5",
                      "Arn",
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Resource": {
                "Ref": "CloudquerySourceGitHubIssuesTaskDefinitionFA21D536",
              },
            },
            {
              "Action": "ecs:TagResource",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ecs:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":*:task/",
                    {
                      "Ref": "servicecatalogueCluster5FC34DC5",
                    },
                    "/*",
                  ],
                ],
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceGitHubIssuesTaskDefinitionExecutionRole6BDDECB3",
                  "Arn",
                ],
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "servicecatalogueTESTtaskGitHubIssues1EFFA3D3",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceGitHubIssuesTaskDefinitionEventsRoleDefaultPolicy13E8811A",
        "Roles": [
          {
            "Ref": "CloudquerySourceGitHubIssuesTaskDefinitionEventsRole056ACC7E",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceGitHubIssuesTaskDefinitionExecutionRole6BDDECB3": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "GitHubIssues",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceGitHubIssuesTaskDefinitionExecutionRoleDefaultPolicyFA58BC48": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "githubcredentialsAF453741",
              },
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
              },
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "cloudqueryapikeyCCF82F53",
              },
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceGitHubIssuesTaskDefinitionCloudquerySourceGitHubIssuesFirelensLogGroupE9112ED9",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceGitHubIssuesTaskDefinitionExecutionRoleDefaultPolicyFA58BC48",
        "Roles": [
          {
            "Ref": "CloudquerySourceGitHubIssuesTaskDefinitionExecutionRole6BDDECB3",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceGitHubIssuesTaskDefinitionFA21D536": {
      "Properties": {
        "ContainerDefinitions": [
          {
            "Command": [
              "/bin/sh",
              "-c",
              "echo -n $GITHUB_PRIVATE_KEY | base64 -d > /github-private-key;echo -n $GITHUB_APP_ID > /github-app-id;echo -n $GITHUB_INSTALLATION_ID > /github-installation-id;printf 'kind: source
spec:
  name: github
  path: cloudquery/github
  version: v8.1.3
  tables:
    - github_issues
  destinations:
    - postgresql
  spec:
    concurrency: 1000
    orgs:
      - guardian
    app_auth:
      - org: guardian
        private_key_path: /github-private-key
        app_id: \${file:/github-app-id}
        installation_id: \${file:/github-installation-id}
' > /data/source.yaml;printf 'kind: destination
spec:
  name: postgresql
  registry: github
  path: cloudquery/postgresql
  version: v7.2.0
  migrate_mode: forced
  spec:
    connection_string: >-
      user=\${DB_USERNAME} password=\${DB_PASSWORD} host=\${DB_HOST} port=5432
      dbname=postgres sslmode=verify-full
' > /data/destination.yaml;/app/cloudquery sync /data/source.yaml /data/destination.yaml --log-format json --log-console --no-log-file",
            ],
            "DependsOn": [
              {
                "Condition": "HEALTHY",
                "ContainerName": "CloudquerySource-GitHubIssuesAWSOTELCollector",
              },
            ],
            "DockerLabels": {
              "App": "service-catalogue",
              "Name": "GitHubIssues",
              "Stack": "deploy",
              "Stage": "TEST",
            },
            "EntryPoint": [
              "",
            ],
            "Environment": [
              {
                "Name": "GOMEMLIMIT",
                "Value": "819MiB",
              },
            ],
            "Essential": true,
            "Image": "ghcr.io/guardian/service-catalogue/cloudquery:sha-0f2713edae5157260cfbf4eaa1f2d682e980fe7e",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "MountPoints": [
              {
                "ContainerPath": "/data",
                "ReadOnly": false,
                "SourceVolume": "config-volume",
              },
              {
                "ContainerPath": "/app/.cq",
                "ReadOnly": false,
                "SourceVolume": "cloudquery-volume",
              },
              {
                "ContainerPath": "/tmp",
                "ReadOnly": false,
                "SourceVolume": "tmp-volume",
              },
            ],
            "Name": "CloudquerySource-GitHubIssuesContainer",
            "ReadonlyRootFilesystem": true,
            "Secrets": [
              {
                "Name": "GITHUB_PRIVATE_KEY",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "githubcredentialsAF453741",
                      },
                      ":private-key::",
                    ],
                  ],
                },
              },
              {
                "Name": "GITHUB_APP_ID",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "githubcredentialsAF453741",
                      },
                      ":app-id::",
                    ],
                  ],
                },
              },
              {
                "Name": "GITHUB_INSTALLATION_ID",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "githubcredentialsAF453741",
                      },
                      ":installation-id::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_USERNAME",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_HOST",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_PASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
              {
                "Name": "CLOUDQUERY_API_KEY",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "cloudqueryapikeyCCF82F53",
                      },
                      ":api-key::",
                    ],
                  ],
                },
              },
            ],
          },
          {
            "Command": [
              "--config=/etc/ecs/ecs-xray.yaml",
            ],
            "Essential": true,
            "HealthCheck": {
              "Command": [
                "CMD",
                "/healthcheck",
              ],
              "Interval": 5,
              "Retries": 3,
              "Timeout": 5,
            },
            "Image": "public.ecr.aws/aws-observability/aws-otel-collector:v0.35.0",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "Name": "CloudquerySource-GitHubIssuesAWSOTELCollector",
            "PortMappings": [
              {
                "ContainerPort": 4318,
                "Protocol": "tcp",
              },
            ],
          },
          {
            "Command": [
              "/bin/sh",
              "-c",
              "psql -c "INSERT INTO cloudquery_table_frequency VALUES ('github_issues', 'DAILY') ON CONFLICT (table_name) DO UPDATE SET frequency = 'DAILY'"",
            ],
            "DockerLabels": {
              "App": "service-catalogue",
              "Name": "GitHubIssues",
              "Stack": "deploy",
              "Stage": "TEST",
            },
            "EntryPoint": [
              "",
            ],
            "Essential": false,
            "Image": "public.ecr.aws/docker/library/postgres:16-alpine",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "Name": "CloudquerySource-GitHubIssuesPostgresContainer",
            "Secrets": [
              {
                "Name": "PGUSER",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              {
                "Name": "PGHOST",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              {
                "Name": "PGPASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
            ],
          },
          {
            "Environment": [
              {
                "Name": "STACK",
                "Value": "deploy",
              },
              {
                "Name": "STAGE",
                "Value": "TEST",
              },
              {
                "Name": "APP",
                "Value": "service-catalogue",
              },
              {
                "Name": "GU_REPO",
                "Value": "guardian/service-catalogue",
              },
            ],
            "Essential": true,
            "FirelensConfiguration": {
              "Type": "fluentbit",
            },
            "Image": "ghcr.io/guardian/devx-logs:2",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "CloudquerySourceGitHubIssuesTaskDefinitionCloudquerySourceGitHubIssuesFirelensLogGroupE9112ED9",
                },
                "awslogs-region": {
                  "Ref": "AWS::Region",
                },
                "awslogs-stream-prefix": "deploy/TEST/service-catalogue",
              },
            },
            "Name": "CloudquerySource-GitHubIssuesFirelens",
          },
        ],
        "Cpu": "256",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "CloudquerySourceGitHubIssuesTaskDefinitionExecutionRole6BDDECB3",
            "Arn",
          ],
        },
        "Family": "ServiceCatalogueCloudquerySourceGitHubIssuesTaskDefinition750BB414",
        "Memory": "1024",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE",
        ],
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "GitHubIssues",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "servicecatalogueTESTtaskGitHubIssues1EFFA3D3",
            "Arn",
          ],
        },
        "Volumes": [
          {
            "Name": "config-volume",
          },
          {
            "Name": "cloudquery-volume",
          },
          {
            "Name": "tmp-volume",
          },
        ],
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "CloudquerySourceGitHubLanguagesScheduledEventRule3F047D8E": {
      "Properties": {
        "ScheduleExpression": "rate(7 days)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "servicecatalogueCluster5FC34DC5",
                "Arn",
              ],
            },
            "EcsParameters": {
              "LaunchType": "FARGATE",
              "NetworkConfiguration": {
                "AwsVpcConfiguration": {
                  "AssignPublicIp": "DISABLED",
                  "SecurityGroups": [
                    {
                      "Fn::GetAtt": [
                        "PostgresAccessSecurityGroupServicecatalogue03C78F14",
                        "GroupId",
                      ],
                    },
                  ],
                  "Subnets": {
                    "Ref": "PrivateSubnets",
                  },
                },
              },
              "PropagateTags": "TASK_DEFINITION",
              "TaskCount": 1,
              "TaskDefinitionArn": {
                "Ref": "CloudquerySourceGitHubLanguagesTaskDefinitionDA995E2B",
              },
            },
            "Id": "Target0",
            "Input": "{}",
            "RoleArn": {
              "Fn::GetAtt": [
                "CloudquerySourceGitHubLanguagesTaskDefinitionEventsRoleD0480706",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "CloudquerySourceGitHubLanguagesTaskDefinitionCloudquerySourceGitHubLanguagesFirelensLogGroup38EAAC3E": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionInDays": 1,
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "GitHubLanguages",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "CloudquerySourceGitHubLanguagesTaskDefinitionDA995E2B": {
      "Properties": {
        "ContainerDefinitions": [
          {
            "Command": [
              "/bin/sh",
              "-c",
              "printf 'kind: source
spec:
  name: github-languages
  path: guardian/github-languages
  version: v0.0.4
  destinations:
    - postgresql
  tables:
    - github_languages
  registry: github
' > /data/source.yaml;printf 'kind: destination
spec:
  name: postgresql
  registry: github
  path: cloudquery/postgresql
  version: v7.2.0
  migrate_mode: forced
  spec:
    connection_string: >-
      user=\${DB_USERNAME} password=\${DB_PASSWORD} host=\${DB_HOST} port=5432
      dbname=postgres sslmode=verify-full
' > /data/destination.yaml;/app/cloudquery sync /data/source.yaml /data/destination.yaml --log-format json --log-console --no-log-file",
            ],
            "DependsOn": [
              {
                "Condition": "HEALTHY",
                "ContainerName": "CloudquerySource-GitHubLanguagesAWSOTELCollector",
              },
            ],
            "DockerLabels": {
              "App": "service-catalogue",
              "Name": "GitHubLanguages",
              "Stack": "deploy",
              "Stage": "TEST",
            },
            "EntryPoint": [
              "",
            ],
            "Environment": [
              {
                "Name": "GOMEMLIMIT",
                "Value": "409MiB",
              },
            ],
            "Essential": true,
            "Image": "ghcr.io/guardian/service-catalogue/cloudquery:sha-0f2713edae5157260cfbf4eaa1f2d682e980fe7e",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "MountPoints": [
              {
                "ContainerPath": "/data",
                "ReadOnly": false,
                "SourceVolume": "config-volume",
              },
              {
                "ContainerPath": "/app/.cq",
                "ReadOnly": false,
                "SourceVolume": "cloudquery-volume",
              },
              {
                "ContainerPath": "/tmp",
                "ReadOnly": false,
                "SourceVolume": "tmp-volume",
              },
            ],
            "Name": "CloudquerySource-GitHubLanguagesContainer",
            "ReadonlyRootFilesystem": true,
            "Secrets": [
              {
                "Name": "GITHUB_ACCESS_TOKEN",
                "ValueFrom": {
                  "Ref": "githublanguages5093EDEC",
                },
              },
              {
                "Name": "DB_USERNAME",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_HOST",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_PASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
              {
                "Name": "CLOUDQUERY_API_KEY",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "cloudqueryapikeyCCF82F53",
                      },
                      ":api-key::",
                    ],
                  ],
                },
              },
            ],
          },
          {
            "Command": [
              "--config=/etc/ecs/ecs-xray.yaml",
            ],
            "Essential": true,
            "HealthCheck": {
              "Command": [
                "CMD",
                "/healthcheck",
              ],
              "Interval": 5,
              "Retries": 3,
              "Timeout": 5,
            },
            "Image": "public.ecr.aws/aws-observability/aws-otel-collector:v0.35.0",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "Name": "CloudquerySource-GitHubLanguagesAWSOTELCollector",
            "PortMappings": [
              {
                "ContainerPort": 4318,
                "Protocol": "tcp",
              },
            ],
          },
          {
            "Command": [
              "/bin/sh",
              "-c",
              "psql -c "INSERT INTO cloudquery_table_frequency VALUES ('github_languages', 'WEEKLY') ON CONFLICT (table_name) DO UPDATE SET frequency = 'WEEKLY'"",
            ],
            "DockerLabels": {
              "App": "service-catalogue",
              "Name": "GitHubLanguages",
              "Stack": "deploy",
              "Stage": "TEST",
            },
            "EntryPoint": [
              "",
            ],
            "Essential": false,
            "Image": "public.ecr.aws/docker/library/postgres:16-alpine",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "Name": "CloudquerySource-GitHubLanguagesPostgresContainer",
            "Secrets": [
              {
                "Name": "PGUSER",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              {
                "Name": "PGHOST",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              {
                "Name": "PGPASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
            ],
          },
          {
            "Environment": [
              {
                "Name": "STACK",
                "Value": "deploy",
              },
              {
                "Name": "STAGE",
                "Value": "TEST",
              },
              {
                "Name": "APP",
                "Value": "service-catalogue",
              },
              {
                "Name": "GU_REPO",
                "Value": "guardian/service-catalogue",
              },
            ],
            "Essential": true,
            "FirelensConfiguration": {
              "Type": "fluentbit",
            },
            "Image": "ghcr.io/guardian/devx-logs:2",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "CloudquerySourceGitHubLanguagesTaskDefinitionCloudquerySourceGitHubLanguagesFirelensLogGroup38EAAC3E",
                },
                "awslogs-region": {
                  "Ref": "AWS::Region",
                },
                "awslogs-stream-prefix": "deploy/TEST/service-catalogue",
              },
            },
            "Name": "CloudquerySource-GitHubLanguagesFirelens",
          },
        ],
        "Cpu": "256",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "CloudquerySourceGitHubLanguagesTaskDefinitionExecutionRoleB77C8E3D",
            "Arn",
          ],
        },
        "Family": "ServiceCatalogueCloudquerySourceGitHubLanguagesTaskDefinitionB1DA60BF",
        "Memory": "512",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE",
        ],
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "GitHubLanguages",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "servicecatalogueTESTtaskGitHubLanguagesED141D27",
            "Arn",
          ],
        },
        "Volumes": [
          {
            "Name": "config-volume",
          },
          {
            "Name": "cloudquery-volume",
          },
          {
            "Name": "tmp-volume",
          },
        ],
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "CloudquerySourceGitHubLanguagesTaskDefinitionEventsRoleD0480706": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "GitHubLanguages",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceGitHubLanguagesTaskDefinitionEventsRoleDefaultPolicy1B11BE73": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ecs:RunTask",
              "Condition": {
                "ArnEquals": {
                  "ecs:cluster": {
                    "Fn::GetAtt": [
                      "servicecatalogueCluster5FC34DC5",
                      "Arn",
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Resource": {
                "Ref": "CloudquerySourceGitHubLanguagesTaskDefinitionDA995E2B",
              },
            },
            {
              "Action": "ecs:TagResource",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ecs:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":*:task/",
                    {
                      "Ref": "servicecatalogueCluster5FC34DC5",
                    },
                    "/*",
                  ],
                ],
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceGitHubLanguagesTaskDefinitionExecutionRoleB77C8E3D",
                  "Arn",
                ],
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "servicecatalogueTESTtaskGitHubLanguagesED141D27",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceGitHubLanguagesTaskDefinitionEventsRoleDefaultPolicy1B11BE73",
        "Roles": [
          {
            "Ref": "CloudquerySourceGitHubLanguagesTaskDefinitionEventsRoleD0480706",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceGitHubLanguagesTaskDefinitionExecutionRoleB77C8E3D": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "GitHubLanguages",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceGitHubLanguagesTaskDefinitionExecutionRoleDefaultPolicy9D57CA88": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "githublanguages5093EDEC",
              },
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
              },
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "cloudqueryapikeyCCF82F53",
              },
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceGitHubLanguagesTaskDefinitionCloudquerySourceGitHubLanguagesFirelensLogGroup38EAAC3E",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceGitHubLanguagesTaskDefinitionExecutionRoleDefaultPolicy9D57CA88",
        "Roles": [
          {
            "Ref": "CloudquerySourceGitHubLanguagesTaskDefinitionExecutionRoleB77C8E3D",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceGitHubRepositoriesScheduledEventRuleC7F5836E": {
      "Properties": {
        "ScheduleExpression": "cron(0 0 * * ? *)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "servicecatalogueCluster5FC34DC5",
                "Arn",
              ],
            },
            "EcsParameters": {
              "LaunchType": "FARGATE",
              "NetworkConfiguration": {
                "AwsVpcConfiguration": {
                  "AssignPublicIp": "DISABLED",
                  "SecurityGroups": [
                    {
                      "Fn::GetAtt": [
                        "PostgresAccessSecurityGroupServicecatalogue03C78F14",
                        "GroupId",
                      ],
                    },
                  ],
                  "Subnets": {
                    "Ref": "PrivateSubnets",
                  },
                },
              },
              "PropagateTags": "TASK_DEFINITION",
              "TaskCount": 1,
              "TaskDefinitionArn": {
                "Ref": "CloudquerySourceGitHubRepositoriesTaskDefinition921DC1BC",
              },
            },
            "Id": "Target0",
            "Input": "{}",
            "RoleArn": {
              "Fn::GetAtt": [
                "CloudquerySourceGitHubRepositoriesTaskDefinitionEventsRole93DB1A26",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "CloudquerySourceGitHubRepositoriesTaskDefinition921DC1BC": {
      "Properties": {
        "ContainerDefinitions": [
          {
            "Command": [
              "/bin/sh",
              "-c",
              "echo -n $GITHUB_PRIVATE_KEY | base64 -d > /github-private-key;echo -n $GITHUB_APP_ID > /github-app-id;echo -n $GITHUB_INSTALLATION_ID > /github-installation-id;printf 'kind: source
spec:
  name: github
  path: cloudquery/github
  version: v8.1.3
  tables:
    - github_repositories
    - github_repository_branches
    - github_workflows
  skip_tables:
    - github_releases
    - github_release_assets
    - github_repository_dependabot_alerts
    - github_repository_dependabot_secrets
  destinations:
    - postgresql
  spec:
    concurrency: 1000
    orgs:
      - guardian
    app_auth:
      - org: guardian
        private_key_path: /github-private-key
        app_id: \${file:/github-app-id}
        installation_id: \${file:/github-installation-id}
' > /data/source.yaml;printf 'kind: destination
spec:
  name: postgresql
  registry: github
  path: cloudquery/postgresql
  version: v7.2.0
  migrate_mode: forced
  spec:
    connection_string: >-
      user=\${DB_USERNAME} password=\${DB_PASSWORD} host=\${DB_HOST} port=5432
      dbname=postgres sslmode=verify-full
' > /data/destination.yaml;/app/cloudquery sync /data/source.yaml /data/destination.yaml --log-format json --log-console --no-log-file",
            ],
            "DependsOn": [
              {
                "Condition": "HEALTHY",
                "ContainerName": "CloudquerySource-GitHubRepositoriesAWSOTELCollector",
              },
            ],
            "DockerLabels": {
              "App": "service-catalogue",
              "Name": "GitHubRepositories",
              "Stack": "deploy",
              "Stage": "TEST",
            },
            "EntryPoint": [
              "",
            ],
            "Environment": [
              {
                "Name": "GOMEMLIMIT",
                "Value": "819MiB",
              },
            ],
            "Essential": true,
            "Image": "ghcr.io/guardian/service-catalogue/cloudquery:sha-0f2713edae5157260cfbf4eaa1f2d682e980fe7e",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "MountPoints": [
              {
                "ContainerPath": "/data",
                "ReadOnly": false,
                "SourceVolume": "config-volume",
              },
              {
                "ContainerPath": "/app/.cq",
                "ReadOnly": false,
                "SourceVolume": "cloudquery-volume",
              },
              {
                "ContainerPath": "/tmp",
                "ReadOnly": false,
                "SourceVolume": "tmp-volume",
              },
            ],
            "Name": "CloudquerySource-GitHubRepositoriesContainer",
            "ReadonlyRootFilesystem": true,
            "Secrets": [
              {
                "Name": "GITHUB_PRIVATE_KEY",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "githubcredentialsAF453741",
                      },
                      ":private-key::",
                    ],
                  ],
                },
              },
              {
                "Name": "GITHUB_APP_ID",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "githubcredentialsAF453741",
                      },
                      ":app-id::",
                    ],
                  ],
                },
              },
              {
                "Name": "GITHUB_INSTALLATION_ID",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "githubcredentialsAF453741",
                      },
                      ":installation-id::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_USERNAME",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_HOST",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_PASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
              {
                "Name": "CLOUDQUERY_API_KEY",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "cloudqueryapikeyCCF82F53",
                      },
                      ":api-key::",
                    ],
                  ],
                },
              },
            ],
          },
          {
            "Command": [
              "--config=/etc/ecs/ecs-xray.yaml",
            ],
            "Essential": true,
            "HealthCheck": {
              "Command": [
                "CMD",
                "/healthcheck",
              ],
              "Interval": 5,
              "Retries": 3,
              "Timeout": 5,
            },
            "Image": "public.ecr.aws/aws-observability/aws-otel-collector:v0.35.0",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "Name": "CloudquerySource-GitHubRepositoriesAWSOTELCollector",
            "PortMappings": [
              {
                "ContainerPort": 4318,
                "Protocol": "tcp",
              },
            ],
          },
          {
            "Command": [
              "/bin/sh",
              "-c",
              "psql -c "INSERT INTO cloudquery_table_frequency VALUES ('github_repositories', 'DAILY'),('github_repository_branches', 'DAILY'),('github_workflows', 'DAILY') ON CONFLICT (table_name) DO UPDATE SET frequency = 'DAILY'"",
            ],
            "DockerLabels": {
              "App": "service-catalogue",
              "Name": "GitHubRepositories",
              "Stack": "deploy",
              "Stage": "TEST",
            },
            "EntryPoint": [
              "",
            ],
            "Essential": false,
            "Image": "public.ecr.aws/docker/library/postgres:16-alpine",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "Name": "CloudquerySource-GitHubRepositoriesPostgresContainer",
            "Secrets": [
              {
                "Name": "PGUSER",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              {
                "Name": "PGHOST",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              {
                "Name": "PGPASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
            ],
          },
          {
            "Environment": [
              {
                "Name": "STACK",
                "Value": "deploy",
              },
              {
                "Name": "STAGE",
                "Value": "TEST",
              },
              {
                "Name": "APP",
                "Value": "service-catalogue",
              },
              {
                "Name": "GU_REPO",
                "Value": "guardian/service-catalogue",
              },
            ],
            "Essential": true,
            "FirelensConfiguration": {
              "Type": "fluentbit",
            },
            "Image": "ghcr.io/guardian/devx-logs:2",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "CloudquerySourceGitHubRepositoriesTaskDefinitionCloudquerySourceGitHubRepositoriesFirelensLogGroup42A4D85D",
                },
                "awslogs-region": {
                  "Ref": "AWS::Region",
                },
                "awslogs-stream-prefix": "deploy/TEST/service-catalogue",
              },
            },
            "Name": "CloudquerySource-GitHubRepositoriesFirelens",
          },
        ],
        "Cpu": "256",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "CloudquerySourceGitHubRepositoriesTaskDefinitionExecutionRole03A80EA4",
            "Arn",
          ],
        },
        "Family": "ServiceCatalogueCloudquerySourceGitHubRepositoriesTaskDefinition13A7DF48",
        "Memory": "1024",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE",
        ],
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "GitHubRepositories",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "servicecatalogueTESTtaskGitHubRepositories83F97F25",
            "Arn",
          ],
        },
        "Volumes": [
          {
            "Name": "config-volume",
          },
          {
            "Name": "cloudquery-volume",
          },
          {
            "Name": "tmp-volume",
          },
        ],
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "CloudquerySourceGitHubRepositoriesTaskDefinitionCloudquerySourceGitHubRepositoriesFirelensLogGroup42A4D85D": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionInDays": 1,
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "GitHubRepositories",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "CloudquerySourceGitHubRepositoriesTaskDefinitionEventsRole93DB1A26": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "GitHubRepositories",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceGitHubRepositoriesTaskDefinitionEventsRoleDefaultPolicy1ECEEEB2": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ecs:RunTask",
              "Condition": {
                "ArnEquals": {
                  "ecs:cluster": {
                    "Fn::GetAtt": [
                      "servicecatalogueCluster5FC34DC5",
                      "Arn",
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Resource": {
                "Ref": "CloudquerySourceGitHubRepositoriesTaskDefinition921DC1BC",
              },
            },
            {
              "Action": "ecs:TagResource",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ecs:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":*:task/",
                    {
                      "Ref": "servicecatalogueCluster5FC34DC5",
                    },
                    "/*",
                  ],
                ],
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceGitHubRepositoriesTaskDefinitionExecutionRole03A80EA4",
                  "Arn",
                ],
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "servicecatalogueTESTtaskGitHubRepositories83F97F25",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceGitHubRepositoriesTaskDefinitionEventsRoleDefaultPolicy1ECEEEB2",
        "Roles": [
          {
            "Ref": "CloudquerySourceGitHubRepositoriesTaskDefinitionEventsRole93DB1A26",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceGitHubRepositoriesTaskDefinitionExecutionRole03A80EA4": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "GitHubRepositories",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceGitHubRepositoriesTaskDefinitionExecutionRoleDefaultPolicy04F69199": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "githubcredentialsAF453741",
              },
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
              },
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "cloudqueryapikeyCCF82F53",
              },
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceGitHubRepositoriesTaskDefinitionCloudquerySourceGitHubRepositoriesFirelensLogGroup42A4D85D",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceGitHubRepositoriesTaskDefinitionExecutionRoleDefaultPolicy04F69199",
        "Roles": [
          {
            "Ref": "CloudquerySourceGitHubRepositoriesTaskDefinitionExecutionRole03A80EA4",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceGitHubTeamsScheduledEventRule051F542B": {
      "Properties": {
        "ScheduleExpression": "cron(0 10 ? * 1 *)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "servicecatalogueCluster5FC34DC5",
                "Arn",
              ],
            },
            "EcsParameters": {
              "LaunchType": "FARGATE",
              "NetworkConfiguration": {
                "AwsVpcConfiguration": {
                  "AssignPublicIp": "DISABLED",
                  "SecurityGroups": [
                    {
                      "Fn::GetAtt": [
                        "PostgresAccessSecurityGroupServicecatalogue03C78F14",
                        "GroupId",
                      ],
                    },
                  ],
                  "Subnets": {
                    "Ref": "PrivateSubnets",
                  },
                },
              },
              "PropagateTags": "TASK_DEFINITION",
              "TaskCount": 1,
              "TaskDefinitionArn": {
                "Ref": "CloudquerySourceGitHubTeamsTaskDefinitionB01C9D3C",
              },
            },
            "Id": "Target0",
            "Input": "{}",
            "RoleArn": {
              "Fn::GetAtt": [
                "CloudquerySourceGitHubTeamsTaskDefinitionEventsRole3E2A5002",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "CloudquerySourceGitHubTeamsTaskDefinitionB01C9D3C": {
      "Properties": {
        "ContainerDefinitions": [
          {
            "Command": [
              "/bin/sh",
              "-c",
              "echo -n $GITHUB_PRIVATE_KEY | base64 -d > /github-private-key;echo -n $GITHUB_APP_ID > /github-app-id;echo -n $GITHUB_INSTALLATION_ID > /github-installation-id;printf 'kind: source
spec:
  name: github
  path: cloudquery/github
  version: v8.1.3
  tables:
    - github_organizations
    - github_organization_members
    - github_teams
    - github_team_members
    - github_team_repositories
  skip_tables:
    - github_organization_dependabot_alerts
    - github_organization_dependabot_secrets
  destinations:
    - postgresql
  spec:
    concurrency: 1000
    orgs:
      - guardian
    app_auth:
      - org: guardian
        private_key_path: /github-private-key
        app_id: \${file:/github-app-id}
        installation_id: \${file:/github-installation-id}
' > /data/source.yaml;printf 'kind: destination
spec:
  name: postgresql
  registry: github
  path: cloudquery/postgresql
  version: v7.2.0
  migrate_mode: forced
  spec:
    connection_string: >-
      user=\${DB_USERNAME} password=\${DB_PASSWORD} host=\${DB_HOST} port=5432
      dbname=postgres sslmode=verify-full
' > /data/destination.yaml;/app/cloudquery sync /data/source.yaml /data/destination.yaml --log-format json --log-console --no-log-file",
            ],
            "DependsOn": [
              {
                "Condition": "HEALTHY",
                "ContainerName": "CloudquerySource-GitHubTeamsAWSOTELCollector",
              },
            ],
            "DockerLabels": {
              "App": "service-catalogue",
              "Name": "GitHubTeams",
              "Stack": "deploy",
              "Stage": "TEST",
            },
            "EntryPoint": [
              "",
            ],
            "Environment": [
              {
                "Name": "GOMEMLIMIT",
                "Value": "3276MiB",
              },
            ],
            "Essential": true,
            "Image": "ghcr.io/guardian/service-catalogue/cloudquery:sha-0f2713edae5157260cfbf4eaa1f2d682e980fe7e",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "MountPoints": [
              {
                "ContainerPath": "/data",
                "ReadOnly": false,
                "SourceVolume": "config-volume",
              },
              {
                "ContainerPath": "/app/.cq",
                "ReadOnly": false,
                "SourceVolume": "cloudquery-volume",
              },
              {
                "ContainerPath": "/tmp",
                "ReadOnly": false,
                "SourceVolume": "tmp-volume",
              },
            ],
            "Name": "CloudquerySource-GitHubTeamsContainer",
            "ReadonlyRootFilesystem": true,
            "Secrets": [
              {
                "Name": "GITHUB_PRIVATE_KEY",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "githubcredentialsAF453741",
                      },
                      ":private-key::",
                    ],
                  ],
                },
              },
              {
                "Name": "GITHUB_APP_ID",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "githubcredentialsAF453741",
                      },
                      ":app-id::",
                    ],
                  ],
                },
              },
              {
                "Name": "GITHUB_INSTALLATION_ID",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "githubcredentialsAF453741",
                      },
                      ":installation-id::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_USERNAME",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_HOST",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_PASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
              {
                "Name": "CLOUDQUERY_API_KEY",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "cloudqueryapikeyCCF82F53",
                      },
                      ":api-key::",
                    ],
                  ],
                },
              },
            ],
          },
          {
            "Command": [
              "--config=/etc/ecs/ecs-xray.yaml",
            ],
            "Essential": true,
            "HealthCheck": {
              "Command": [
                "CMD",
                "/healthcheck",
              ],
              "Interval": 5,
              "Retries": 3,
              "Timeout": 5,
            },
            "Image": "public.ecr.aws/aws-observability/aws-otel-collector:v0.35.0",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "Name": "CloudquerySource-GitHubTeamsAWSOTELCollector",
            "PortMappings": [
              {
                "ContainerPort": 4318,
                "Protocol": "tcp",
              },
            ],
          },
          {
            "Command": [
              "/bin/sh",
              "-c",
              "psql -c "INSERT INTO cloudquery_table_frequency VALUES ('github_organizations', 'WEEKLY'),('github_organization_members', 'WEEKLY'),('github_teams', 'WEEKLY'),('github_team_members', 'WEEKLY'),('github_team_repositories', 'WEEKLY') ON CONFLICT (table_name) DO UPDATE SET frequency = 'WEEKLY'"",
            ],
            "DockerLabels": {
              "App": "service-catalogue",
              "Name": "GitHubTeams",
              "Stack": "deploy",
              "Stage": "TEST",
            },
            "EntryPoint": [
              "",
            ],
            "Essential": false,
            "Image": "public.ecr.aws/docker/library/postgres:16-alpine",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "Name": "CloudquerySource-GitHubTeamsPostgresContainer",
            "Secrets": [
              {
                "Name": "PGUSER",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              {
                "Name": "PGHOST",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              {
                "Name": "PGPASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
            ],
          },
          {
            "Environment": [
              {
                "Name": "STACK",
                "Value": "deploy",
              },
              {
                "Name": "STAGE",
                "Value": "TEST",
              },
              {
                "Name": "APP",
                "Value": "service-catalogue",
              },
              {
                "Name": "GU_REPO",
                "Value": "guardian/service-catalogue",
              },
            ],
            "Essential": true,
            "FirelensConfiguration": {
              "Type": "fluentbit",
            },
            "Image": "ghcr.io/guardian/devx-logs:2",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "CloudquerySourceGitHubTeamsTaskDefinitionCloudquerySourceGitHubTeamsFirelensLogGroup8B1FFADC",
                },
                "awslogs-region": {
                  "Ref": "AWS::Region",
                },
                "awslogs-stream-prefix": "deploy/TEST/service-catalogue",
              },
            },
            "Name": "CloudquerySource-GitHubTeamsFirelens",
          },
        ],
        "Cpu": "2048",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "CloudquerySourceGitHubTeamsTaskDefinitionExecutionRole9DEDACFD",
            "Arn",
          ],
        },
        "Family": "ServiceCatalogueCloudquerySourceGitHubTeamsTaskDefinition5CFD9707",
        "Memory": "4096",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE",
        ],
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "GitHubTeams",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "servicecatalogueTESTtaskGitHubTeams5756A4ED",
            "Arn",
          ],
        },
        "Volumes": [
          {
            "Name": "config-volume",
          },
          {
            "Name": "cloudquery-volume",
          },
          {
            "Name": "tmp-volume",
          },
        ],
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "CloudquerySourceGitHubTeamsTaskDefinitionCloudquerySourceGitHubTeamsFirelensLogGroup8B1FFADC": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionInDays": 1,
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "GitHubTeams",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "CloudquerySourceGitHubTeamsTaskDefinitionEventsRole3E2A5002": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "GitHubTeams",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceGitHubTeamsTaskDefinitionEventsRoleDefaultPolicy5B79609C": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ecs:RunTask",
              "Condition": {
                "ArnEquals": {
                  "ecs:cluster": {
                    "Fn::GetAtt": [
                      "servicecatalogueCluster5FC34DC5",
                      "Arn",
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Resource": {
                "Ref": "CloudquerySourceGitHubTeamsTaskDefinitionB01C9D3C",
              },
            },
            {
              "Action": "ecs:TagResource",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ecs:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":*:task/",
                    {
                      "Ref": "servicecatalogueCluster5FC34DC5",
                    },
                    "/*",
                  ],
                ],
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceGitHubTeamsTaskDefinitionExecutionRole9DEDACFD",
                  "Arn",
                ],
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "servicecatalogueTESTtaskGitHubTeams5756A4ED",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceGitHubTeamsTaskDefinitionEventsRoleDefaultPolicy5B79609C",
        "Roles": [
          {
            "Ref": "CloudquerySourceGitHubTeamsTaskDefinitionEventsRole3E2A5002",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceGitHubTeamsTaskDefinitionExecutionRole9DEDACFD": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "GitHubTeams",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceGitHubTeamsTaskDefinitionExecutionRoleDefaultPolicy3618CA18": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "githubcredentialsAF453741",
              },
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
              },
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "cloudqueryapikeyCCF82F53",
              },
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceGitHubTeamsTaskDefinitionCloudquerySourceGitHubTeamsFirelensLogGroup8B1FFADC",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceGitHubTeamsTaskDefinitionExecutionRoleDefaultPolicy3618CA18",
        "Roles": [
          {
            "Ref": "CloudquerySourceGitHubTeamsTaskDefinitionExecutionRole9DEDACFD",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceNS1ScheduledEventRule1D618E3C": {
      "Properties": {
        "ScheduleExpression": "cron(0 0 * * ? *)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "servicecatalogueCluster5FC34DC5",
                "Arn",
              ],
            },
            "EcsParameters": {
              "LaunchType": "FARGATE",
              "NetworkConfiguration": {
                "AwsVpcConfiguration": {
                  "AssignPublicIp": "DISABLED",
                  "SecurityGroups": [
                    {
                      "Fn::GetAtt": [
                        "PostgresAccessSecurityGroupServicecatalogue03C78F14",
                        "GroupId",
                      ],
                    },
                  ],
                  "Subnets": {
                    "Ref": "PrivateSubnets",
                  },
                },
              },
              "PropagateTags": "TASK_DEFINITION",
              "TaskCount": 1,
              "TaskDefinitionArn": {
                "Ref": "CloudquerySourceNS1TaskDefinition56258A70",
              },
            },
            "Id": "Target0",
            "Input": "{}",
            "RoleArn": {
              "Fn::GetAtt": [
                "CloudquerySourceNS1TaskDefinitionEventsRole2D5A948C",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "CloudquerySourceNS1TaskDefinition56258A70": {
      "Properties": {
        "ContainerDefinitions": [
          {
            "Command": [
              "/bin/sh",
              "-c",
              "printf 'kind: source
spec:
  name: ns1
  registry: grpc
  path: localhost:7777
  version: v0.0.0
  tables:
    - ns1_*
  destinations:
    - postgresql
  spec:
    apiKey: \${NS1_API_KEY}
' > /data/source.yaml;printf 'kind: destination
spec:
  name: postgresql
  registry: github
  path: cloudquery/postgresql
  version: v7.2.0
  migrate_mode: forced
  spec:
    connection_string: >-
      user=\${DB_USERNAME} password=\${DB_PASSWORD} host=\${DB_HOST} port=5432
      dbname=postgres sslmode=verify-full
' > /data/destination.yaml;/app/cloudquery sync /data/source.yaml /data/destination.yaml --log-format json --log-console --no-log-file",
            ],
            "DependsOn": [
              {
                "Condition": "HEALTHY",
                "ContainerName": "CloudquerySource-NS1AWSOTELCollector",
              },
              {
                "Condition": "START",
                "ContainerName": "CloudquerySource-NS1PluginContainer",
              },
            ],
            "DockerLabels": {
              "App": "service-catalogue",
              "Name": "NS1",
              "Stack": "deploy",
              "Stage": "TEST",
            },
            "EntryPoint": [
              "",
            ],
            "Environment": [
              {
                "Name": "GOMEMLIMIT",
                "Value": "409MiB",
              },
            ],
            "Essential": true,
            "Image": "ghcr.io/guardian/service-catalogue/cloudquery:sha-0f2713edae5157260cfbf4eaa1f2d682e980fe7e",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "MountPoints": [
              {
                "ContainerPath": "/data",
                "ReadOnly": false,
                "SourceVolume": "config-volume",
              },
              {
                "ContainerPath": "/app/.cq",
                "ReadOnly": false,
                "SourceVolume": "cloudquery-volume",
              },
              {
                "ContainerPath": "/tmp",
                "ReadOnly": false,
                "SourceVolume": "tmp-volume",
              },
            ],
            "Name": "CloudquerySource-NS1Container",
            "ReadonlyRootFilesystem": true,
            "Secrets": [
              {
                "Name": "NS1_API_KEY",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "ns1credentialsA8DD3B2D",
                      },
                      ":api-key::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_USERNAME",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_HOST",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_PASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
              {
                "Name": "CLOUDQUERY_API_KEY",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "cloudqueryapikeyCCF82F53",
                      },
                      ":api-key::",
                    ],
                  ],
                },
              },
            ],
          },
          {
            "Command": [
              "--config=/etc/ecs/ecs-xray.yaml",
            ],
            "Essential": true,
            "HealthCheck": {
              "Command": [
                "CMD",
                "/healthcheck",
              ],
              "Interval": 5,
              "Retries": 3,
              "Timeout": 5,
            },
            "Image": "public.ecr.aws/aws-observability/aws-otel-collector:v0.35.0",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "Name": "CloudquerySource-NS1AWSOTELCollector",
            "PortMappings": [
              {
                "ContainerPort": 4318,
                "Protocol": "tcp",
              },
            ],
          },
          {
            "Essential": false,
            "Image": "ghcr.io/guardian/cq-source-ns1:0.0.4",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "Name": "CloudquerySource-NS1PluginContainer",
          },
          {
            "Command": [
              "/bin/sh",
              "-c",
              "psql -c "INSERT INTO cloudquery_table_frequency VALUES ('ns1_%', 'DAILY') ON CONFLICT (table_name) DO UPDATE SET frequency = 'DAILY'"",
            ],
            "DockerLabels": {
              "App": "service-catalogue",
              "Name": "NS1",
              "Stack": "deploy",
              "Stage": "TEST",
            },
            "EntryPoint": [
              "",
            ],
            "Essential": false,
            "Image": "public.ecr.aws/docker/library/postgres:16-alpine",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "Name": "CloudquerySource-NS1PostgresContainer",
            "Secrets": [
              {
                "Name": "PGUSER",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              {
                "Name": "PGHOST",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              {
                "Name": "PGPASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
            ],
          },
          {
            "Environment": [
              {
                "Name": "STACK",
                "Value": "deploy",
              },
              {
                "Name": "STAGE",
                "Value": "TEST",
              },
              {
                "Name": "APP",
                "Value": "service-catalogue",
              },
              {
                "Name": "GU_REPO",
                "Value": "guardian/service-catalogue",
              },
            ],
            "Essential": true,
            "FirelensConfiguration": {
              "Type": "fluentbit",
            },
            "Image": "ghcr.io/guardian/devx-logs:2",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "CloudquerySourceNS1TaskDefinitionCloudquerySourceNS1FirelensLogGroup3A327514",
                },
                "awslogs-region": {
                  "Ref": "AWS::Region",
                },
                "awslogs-stream-prefix": "deploy/TEST/service-catalogue",
              },
            },
            "Name": "CloudquerySource-NS1Firelens",
          },
        ],
        "Cpu": "256",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "CloudquerySourceNS1TaskDefinitionExecutionRoleECC80718",
            "Arn",
          ],
        },
        "Family": "ServiceCatalogueCloudquerySourceNS1TaskDefinitionE32F0EBB",
        "Memory": "512",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE",
        ],
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "NS1",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "servicecatalogueTESTtaskNS1B2D0D4B7",
            "Arn",
          ],
        },
        "Volumes": [
          {
            "Name": "config-volume",
          },
          {
            "Name": "cloudquery-volume",
          },
          {
            "Name": "tmp-volume",
          },
        ],
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "CloudquerySourceNS1TaskDefinitionCloudquerySourceNS1FirelensLogGroup3A327514": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionInDays": 1,
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "NS1",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "CloudquerySourceNS1TaskDefinitionEventsRole2D5A948C": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "NS1",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceNS1TaskDefinitionEventsRoleDefaultPolicyE40A5A68": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ecs:RunTask",
              "Condition": {
                "ArnEquals": {
                  "ecs:cluster": {
                    "Fn::GetAtt": [
                      "servicecatalogueCluster5FC34DC5",
                      "Arn",
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Resource": {
                "Ref": "CloudquerySourceNS1TaskDefinition56258A70",
              },
            },
            {
              "Action": "ecs:TagResource",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ecs:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":*:task/",
                    {
                      "Ref": "servicecatalogueCluster5FC34DC5",
                    },
                    "/*",
                  ],
                ],
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceNS1TaskDefinitionExecutionRoleECC80718",
                  "Arn",
                ],
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "servicecatalogueTESTtaskNS1B2D0D4B7",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceNS1TaskDefinitionEventsRoleDefaultPolicyE40A5A68",
        "Roles": [
          {
            "Ref": "CloudquerySourceNS1TaskDefinitionEventsRole2D5A948C",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceNS1TaskDefinitionExecutionRoleDefaultPolicyA99171A1": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "ns1credentialsA8DD3B2D",
              },
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
              },
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "cloudqueryapikeyCCF82F53",
              },
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceNS1TaskDefinitionCloudquerySourceNS1FirelensLogGroup3A327514",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceNS1TaskDefinitionExecutionRoleDefaultPolicyA99171A1",
        "Roles": [
          {
            "Ref": "CloudquerySourceNS1TaskDefinitionExecutionRoleECC80718",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceNS1TaskDefinitionExecutionRoleECC80718": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "NS1",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceOrgWideAutoScalingGroupsScheduledEventRuleC637A0C6": {
      "Properties": {
        "ScheduleExpression": "cron(0 0 * * ? *)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "servicecatalogueCluster5FC34DC5",
                "Arn",
              ],
            },
            "EcsParameters": {
              "LaunchType": "FARGATE",
              "NetworkConfiguration": {
                "AwsVpcConfiguration": {
                  "AssignPublicIp": "DISABLED",
                  "SecurityGroups": [
                    {
                      "Fn::GetAtt": [
                        "PostgresAccessSecurityGroupServicecatalogue03C78F14",
                        "GroupId",
                      ],
                    },
                  ],
                  "Subnets": {
                    "Ref": "PrivateSubnets",
                  },
                },
              },
              "PropagateTags": "TASK_DEFINITION",
              "TaskCount": 1,
              "TaskDefinitionArn": {
                "Ref": "CloudquerySourceOrgWideAutoScalingGroupsTaskDefinition90175FA6",
              },
            },
            "Id": "Target0",
            "Input": "{}",
            "RoleArn": {
              "Fn::GetAtt": [
                "CloudquerySourceOrgWideAutoScalingGroupsTaskDefinitionEventsRoleB208939C",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "CloudquerySourceOrgWideAutoScalingGroupsTaskDefinition90175FA6": {
      "Properties": {
        "ContainerDefinitions": [
          {
            "Command": [
              "/bin/sh",
              "-c",
              "printf 'kind: source
spec:
  name: aws
  path: cloudquery/aws
  version: v23.6.1
  tables:
    - aws_autoscaling_groups
  destinations:
    - postgresql
  otel_endpoint: 0.0.0.0:4318
  otel_endpoint_insecure: true
  spec:
    regions:
      - eu-west-1
      - eu-west-2
      - us-east-1
      - us-east-2
      - us-west-1
      - ap-southeast-2
      - ca-central-1
    org:
      member_role_name: cloudquery-access
      organization_units:
        - ou-123
' > /data/source.yaml;printf 'kind: destination
spec:
  name: postgresql
  registry: github
  path: cloudquery/postgresql
  version: v7.2.0
  migrate_mode: forced
  spec:
    connection_string: >-
      user=\${DB_USERNAME} password=\${DB_PASSWORD} host=\${DB_HOST} port=5432
      dbname=postgres sslmode=verify-full
' > /data/destination.yaml;/app/cloudquery sync /data/source.yaml /data/destination.yaml --log-format json --log-console --no-log-file",
            ],
            "DependsOn": [
              {
                "Condition": "HEALTHY",
                "ContainerName": "CloudquerySource-OrgWideAutoScalingGroupsAWSOTELCollector",
              },
            ],
            "DockerLabels": {
              "App": "service-catalogue",
              "Name": "OrgWideAutoScalingGroups",
              "Stack": "deploy",
              "Stage": "TEST",
            },
            "EntryPoint": [
              "",
            ],
            "Environment": [
              {
                "Name": "GOMEMLIMIT",
                "Value": "409MiB",
              },
            ],
            "Essential": true,
            "Image": "ghcr.io/guardian/service-catalogue/cloudquery:sha-0f2713edae5157260cfbf4eaa1f2d682e980fe7e",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "MountPoints": [
              {
                "ContainerPath": "/data",
                "ReadOnly": false,
                "SourceVolume": "config-volume",
              },
              {
                "ContainerPath": "/app/.cq",
                "ReadOnly": false,
                "SourceVolume": "cloudquery-volume",
              },
              {
                "ContainerPath": "/tmp",
                "ReadOnly": false,
                "SourceVolume": "tmp-volume",
              },
            ],
            "Name": "CloudquerySource-OrgWideAutoScalingGroupsContainer",
            "ReadonlyRootFilesystem": true,
            "Secrets": [
              {
                "Name": "DB_USERNAME",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_HOST",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_PASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
              {
                "Name": "CLOUDQUERY_API_KEY",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "cloudqueryapikeyCCF82F53",
                      },
                      ":api-key::",
                    ],
                  ],
                },
              },
            ],
          },
          {
            "Command": [
              "--config=/etc/ecs/ecs-xray.yaml",
            ],
            "Essential": true,
            "HealthCheck": {
              "Command": [
                "CMD",
                "/healthcheck",
              ],
              "Interval": 5,
              "Retries": 3,
              "Timeout": 5,
            },
            "Image": "public.ecr.aws/aws-observability/aws-otel-collector:v0.35.0",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "Name": "CloudquerySource-OrgWideAutoScalingGroupsAWSOTELCollector",
            "PortMappings": [
              {
                "ContainerPort": 4318,
                "Protocol": "tcp",
              },
            ],
          },
          {
            "Command": [
              "/bin/sh",
              "-c",
              "psql -c "INSERT INTO cloudquery_table_frequency VALUES ('aws_autoscaling_groups', 'DAILY') ON CONFLICT (table_name) DO UPDATE SET frequency = 'DAILY'"",
            ],
            "DockerLabels": {
              "App": "service-catalogue",
              "Name": "OrgWideAutoScalingGroups",
              "Stack": "deploy",
              "Stage": "TEST",
            },
            "EntryPoint": [
              "",
            ],
            "Essential": false,
            "Image": "public.ecr.aws/docker/library/postgres:16-alpine",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "Name": "CloudquerySource-OrgWideAutoScalingGroupsPostgresContainer",
            "Secrets": [
              {
                "Name": "PGUSER",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              {
                "Name": "PGHOST",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              {
                "Name": "PGPASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
            ],
          },
          {
            "Environment": [
              {
                "Name": "STACK",
                "Value": "deploy",
              },
              {
                "Name": "STAGE",
                "Value": "TEST",
              },
              {
                "Name": "APP",
                "Value": "service-catalogue",
              },
              {
                "Name": "GU_REPO",
                "Value": "guardian/service-catalogue",
              },
            ],
            "Essential": true,
            "FirelensConfiguration": {
              "Type": "fluentbit",
            },
            "Image": "ghcr.io/guardian/devx-logs:2",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "CloudquerySourceOrgWideAutoScalingGroupsTaskDefinitionCloudquerySourceOrgWideAutoScalingGroupsFirelensLogGroup5F30203D",
                },
                "awslogs-region": {
                  "Ref": "AWS::Region",
                },
                "awslogs-stream-prefix": "deploy/TEST/service-catalogue",
              },
            },
            "Name": "CloudquerySource-OrgWideAutoScalingGroupsFirelens",
          },
        ],
        "Cpu": "256",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "CloudquerySourceOrgWideAutoScalingGroupsTaskDefinitionExecutionRole87E65E0F",
            "Arn",
          ],
        },
        "Family": "ServiceCatalogueCloudquerySourceOrgWideAutoScalingGroupsTaskDefinitionE2706D00",
        "Memory": "512",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE",
        ],
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "OrgWideAutoScalingGroups",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "servicecatalogueTESTtaskOrgWideAutoScalingGroups55BC34E1",
            "Arn",
          ],
        },
        "Volumes": [
          {
            "Name": "config-volume",
          },
          {
            "Name": "cloudquery-volume",
          },
          {
            "Name": "tmp-volume",
          },
        ],
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "CloudquerySourceOrgWideAutoScalingGroupsTaskDefinitionCloudquerySourceOrgWideAutoScalingGroupsFirelensLogGroup5F30203D": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionInDays": 1,
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "OrgWideAutoScalingGroups",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "CloudquerySourceOrgWideAutoScalingGroupsTaskDefinitionEventsRoleB208939C": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "OrgWideAutoScalingGroups",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceOrgWideAutoScalingGroupsTaskDefinitionEventsRoleDefaultPolicy604A8C66": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ecs:RunTask",
              "Condition": {
                "ArnEquals": {
                  "ecs:cluster": {
                    "Fn::GetAtt": [
                      "servicecatalogueCluster5FC34DC5",
                      "Arn",
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Resource": {
                "Ref": "CloudquerySourceOrgWideAutoScalingGroupsTaskDefinition90175FA6",
              },
            },
            {
              "Action": "ecs:TagResource",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ecs:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":*:task/",
                    {
                      "Ref": "servicecatalogueCluster5FC34DC5",
                    },
                    "/*",
                  ],
                ],
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceOrgWideAutoScalingGroupsTaskDefinitionExecutionRole87E65E0F",
                  "Arn",
                ],
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "servicecatalogueTESTtaskOrgWideAutoScalingGroups55BC34E1",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceOrgWideAutoScalingGroupsTaskDefinitionEventsRoleDefaultPolicy604A8C66",
        "Roles": [
          {
            "Ref": "CloudquerySourceOrgWideAutoScalingGroupsTaskDefinitionEventsRoleB208939C",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceOrgWideAutoScalingGroupsTaskDefinitionExecutionRole87E65E0F": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "OrgWideAutoScalingGroups",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceOrgWideAutoScalingGroupsTaskDefinitionExecutionRoleDefaultPolicyB16C02D7": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
              },
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "cloudqueryapikeyCCF82F53",
              },
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceOrgWideAutoScalingGroupsTaskDefinitionCloudquerySourceOrgWideAutoScalingGroupsFirelensLogGroup5F30203D",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceOrgWideAutoScalingGroupsTaskDefinitionExecutionRoleDefaultPolicyB16C02D7",
        "Roles": [
          {
            "Ref": "CloudquerySourceOrgWideAutoScalingGroupsTaskDefinitionExecutionRole87E65E0F",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceOrgWideBackupScheduledEventRuleF35A6F79": {
      "Properties": {
        "ScheduleExpression": "cron(0 7 * * ? *)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "servicecatalogueCluster5FC34DC5",
                "Arn",
              ],
            },
            "EcsParameters": {
              "LaunchType": "FARGATE",
              "NetworkConfiguration": {
                "AwsVpcConfiguration": {
                  "AssignPublicIp": "DISABLED",
                  "SecurityGroups": [
                    {
                      "Fn::GetAtt": [
                        "PostgresAccessSecurityGroupServicecatalogue03C78F14",
                        "GroupId",
                      ],
                    },
                  ],
                  "Subnets": {
                    "Ref": "PrivateSubnets",
                  },
                },
              },
              "PropagateTags": "TASK_DEFINITION",
              "TaskCount": 1,
              "TaskDefinitionArn": {
                "Ref": "CloudquerySourceOrgWideBackupTaskDefinition9BAD0C75",
              },
            },
            "Id": "Target0",
            "Input": "{}",
            "RoleArn": {
              "Fn::GetAtt": [
                "CloudquerySourceOrgWideBackupTaskDefinitionEventsRoleEEE9119D",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "CloudquerySourceOrgWideBackupTaskDefinition9BAD0C75": {
      "Properties": {
        "ContainerDefinitions": [
          {
            "Command": [
              "/bin/sh",
              "-c",
              "printf 'kind: source
spec:
  name: aws
  path: cloudquery/aws
  version: v23.6.1
  tables:
    - aws_backup_protected_resources
    - aws_backup_vaults
    - aws_backup_vault_recovery_points
  destinations:
    - postgresql
  otel_endpoint: 0.0.0.0:4318
  otel_endpoint_insecure: true
  spec:
    regions:
      - eu-west-1
      - eu-west-2
      - us-east-1
      - us-east-2
      - us-west-1
      - ap-southeast-2
      - ca-central-1
    org:
      member_role_name: cloudquery-access
      organization_units:
        - ou-123
' > /data/source.yaml;printf 'kind: destination
spec:
  name: postgresql
  registry: github
  path: cloudquery/postgresql
  version: v7.2.0
  migrate_mode: forced
  spec:
    connection_string: >-
      user=\${DB_USERNAME} password=\${DB_PASSWORD} host=\${DB_HOST} port=5432
      dbname=postgres sslmode=verify-full
' > /data/destination.yaml;/app/cloudquery sync /data/source.yaml /data/destination.yaml --log-format json --log-console --no-log-file",
            ],
            "DependsOn": [
              {
                "Condition": "HEALTHY",
                "ContainerName": "CloudquerySource-OrgWideBackupAWSOTELCollector",
              },
            ],
            "DockerLabels": {
              "App": "service-catalogue",
              "Name": "OrgWideBackup",
              "Stack": "deploy",
              "Stage": "TEST",
            },
            "EntryPoint": [
              "",
            ],
            "Environment": [
              {
                "Name": "GOMEMLIMIT",
                "Value": "409MiB",
              },
            ],
            "Essential": true,
            "Image": "ghcr.io/guardian/service-catalogue/cloudquery:sha-0f2713edae5157260cfbf4eaa1f2d682e980fe7e",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "MountPoints": [
              {
                "ContainerPath": "/data",
                "ReadOnly": false,
                "SourceVolume": "config-volume",
              },
              {
                "ContainerPath": "/app/.cq",
                "ReadOnly": false,
                "SourceVolume": "cloudquery-volume",
              },
              {
                "ContainerPath": "/tmp",
                "ReadOnly": false,
                "SourceVolume": "tmp-volume",
              },
            ],
            "Name": "CloudquerySource-OrgWideBackupContainer",
            "ReadonlyRootFilesystem": true,
            "Secrets": [
              {
                "Name": "DB_USERNAME",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_HOST",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_PASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
              {
                "Name": "CLOUDQUERY_API_KEY",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "cloudqueryapikeyCCF82F53",
                      },
                      ":api-key::",
                    ],
                  ],
                },
              },
            ],
          },
          {
            "Command": [
              "--config=/etc/ecs/ecs-xray.yaml",
            ],
            "Essential": true,
            "HealthCheck": {
              "Command": [
                "CMD",
                "/healthcheck",
              ],
              "Interval": 5,
              "Retries": 3,
              "Timeout": 5,
            },
            "Image": "public.ecr.aws/aws-observability/aws-otel-collector:v0.35.0",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "Name": "CloudquerySource-OrgWideBackupAWSOTELCollector",
            "PortMappings": [
              {
                "ContainerPort": 4318,
                "Protocol": "tcp",
              },
            ],
          },
          {
            "Command": [
              "/bin/sh",
              "-c",
              "psql -c "INSERT INTO cloudquery_table_frequency VALUES ('aws_backup_protected_resources', 'DAILY'),('aws_backup_vaults', 'DAILY'),('aws_backup_vault_recovery_points', 'DAILY') ON CONFLICT (table_name) DO UPDATE SET frequency = 'DAILY'"",
            ],
            "DockerLabels": {
              "App": "service-catalogue",
              "Name": "OrgWideBackup",
              "Stack": "deploy",
              "Stage": "TEST",
            },
            "EntryPoint": [
              "",
            ],
            "Essential": false,
            "Image": "public.ecr.aws/docker/library/postgres:16-alpine",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "Name": "CloudquerySource-OrgWideBackupPostgresContainer",
            "Secrets": [
              {
                "Name": "PGUSER",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              {
                "Name": "PGHOST",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              {
                "Name": "PGPASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
            ],
          },
          {
            "Environment": [
              {
                "Name": "STACK",
                "Value": "deploy",
              },
              {
                "Name": "STAGE",
                "Value": "TEST",
              },
              {
                "Name": "APP",
                "Value": "service-catalogue",
              },
              {
                "Name": "GU_REPO",
                "Value": "guardian/service-catalogue",
              },
            ],
            "Essential": true,
            "FirelensConfiguration": {
              "Type": "fluentbit",
            },
            "Image": "ghcr.io/guardian/devx-logs:2",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "CloudquerySourceOrgWideBackupTaskDefinitionCloudquerySourceOrgWideBackupFirelensLogGroup10DF9407",
                },
                "awslogs-region": {
                  "Ref": "AWS::Region",
                },
                "awslogs-stream-prefix": "deploy/TEST/service-catalogue",
              },
            },
            "Name": "CloudquerySource-OrgWideBackupFirelens",
          },
        ],
        "Cpu": "256",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "CloudquerySourceOrgWideBackupTaskDefinitionExecutionRole1071B910",
            "Arn",
          ],
        },
        "Family": "ServiceCatalogueCloudquerySourceOrgWideBackupTaskDefinition54AA6947",
        "Memory": "512",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE",
        ],
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "OrgWideBackup",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "servicecatalogueTESTtaskOrgWideBackup14B6CAD7",
            "Arn",
          ],
        },
        "Volumes": [
          {
            "Name": "config-volume",
          },
          {
            "Name": "cloudquery-volume",
          },
          {
            "Name": "tmp-volume",
          },
        ],
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "CloudquerySourceOrgWideBackupTaskDefinitionCloudquerySourceOrgWideBackupFirelensLogGroup10DF9407": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionInDays": 1,
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "OrgWideBackup",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "CloudquerySourceOrgWideBackupTaskDefinitionEventsRoleDefaultPolicyA631E86F": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ecs:RunTask",
              "Condition": {
                "ArnEquals": {
                  "ecs:cluster": {
                    "Fn::GetAtt": [
                      "servicecatalogueCluster5FC34DC5",
                      "Arn",
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Resource": {
                "Ref": "CloudquerySourceOrgWideBackupTaskDefinition9BAD0C75",
              },
            },
            {
              "Action": "ecs:TagResource",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ecs:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":*:task/",
                    {
                      "Ref": "servicecatalogueCluster5FC34DC5",
                    },
                    "/*",
                  ],
                ],
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceOrgWideBackupTaskDefinitionExecutionRole1071B910",
                  "Arn",
                ],
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "servicecatalogueTESTtaskOrgWideBackup14B6CAD7",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceOrgWideBackupTaskDefinitionEventsRoleDefaultPolicyA631E86F",
        "Roles": [
          {
            "Ref": "CloudquerySourceOrgWideBackupTaskDefinitionEventsRoleEEE9119D",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceOrgWideBackupTaskDefinitionEventsRoleEEE9119D": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "OrgWideBackup",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceOrgWideBackupTaskDefinitionExecutionRole1071B910": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "OrgWideBackup",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceOrgWideBackupTaskDefinitionExecutionRoleDefaultPolicyEAD210FD": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
              },
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "cloudqueryapikeyCCF82F53",
              },
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceOrgWideBackupTaskDefinitionCloudquerySourceOrgWideBackupFirelensLogGroup10DF9407",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceOrgWideBackupTaskDefinitionExecutionRoleDefaultPolicyEAD210FD",
        "Roles": [
          {
            "Ref": "CloudquerySourceOrgWideBackupTaskDefinitionExecutionRole1071B910",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceOrgWideCertificatesScheduledEventRule2D4505F4": {
      "Properties": {
        "ScheduleExpression": "cron(0 1 * * ? *)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "servicecatalogueCluster5FC34DC5",
                "Arn",
              ],
            },
            "EcsParameters": {
              "LaunchType": "FARGATE",
              "NetworkConfiguration": {
                "AwsVpcConfiguration": {
                  "AssignPublicIp": "DISABLED",
                  "SecurityGroups": [
                    {
                      "Fn::GetAtt": [
                        "PostgresAccessSecurityGroupServicecatalogue03C78F14",
                        "GroupId",
                      ],
                    },
                  ],
                  "Subnets": {
                    "Ref": "PrivateSubnets",
                  },
                },
              },
              "PropagateTags": "TASK_DEFINITION",
              "TaskCount": 1,
              "TaskDefinitionArn": {
                "Ref": "CloudquerySourceOrgWideCertificatesTaskDefinition47A214D9",
              },
            },
            "Id": "Target0",
            "Input": "{}",
            "RoleArn": {
              "Fn::GetAtt": [
                "CloudquerySourceOrgWideCertificatesTaskDefinitionEventsRoleAEA3DD58",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "CloudquerySourceOrgWideCertificatesTaskDefinition47A214D9": {
      "Properties": {
        "ContainerDefinitions": [
          {
            "Command": [
              "/bin/sh",
              "-c",
              "printf 'kind: source
spec:
  name: aws
  path: cloudquery/aws
  version: v23.6.1
  tables:
    - aws_acm*
  destinations:
    - postgresql
  otel_endpoint: 0.0.0.0:4318
  otel_endpoint_insecure: true
  spec:
    regions:
      - eu-west-1
      - eu-west-2
      - us-east-1
      - us-east-2
      - us-west-1
      - ap-southeast-2
      - ca-central-1
    org:
      member_role_name: cloudquery-access
      organization_units:
        - ou-123
' > /data/source.yaml;printf 'kind: destination
spec:
  name: postgresql
  registry: github
  path: cloudquery/postgresql
  version: v7.2.0
  migrate_mode: forced
  spec:
    connection_string: >-
      user=\${DB_USERNAME} password=\${DB_PASSWORD} host=\${DB_HOST} port=5432
      dbname=postgres sslmode=verify-full
' > /data/destination.yaml;/app/cloudquery sync /data/source.yaml /data/destination.yaml --log-format json --log-console --no-log-file",
            ],
            "DependsOn": [
              {
                "Condition": "HEALTHY",
                "ContainerName": "CloudquerySource-OrgWideCertificatesAWSOTELCollector",
              },
            ],
            "DockerLabels": {
              "App": "service-catalogue",
              "Name": "OrgWideCertificates",
              "Stack": "deploy",
              "Stage": "TEST",
            },
            "EntryPoint": [
              "",
            ],
            "Environment": [
              {
                "Name": "GOMEMLIMIT",
                "Value": "409MiB",
              },
            ],
            "Essential": true,
            "Image": "ghcr.io/guardian/service-catalogue/cloudquery:sha-0f2713edae5157260cfbf4eaa1f2d682e980fe7e",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "MountPoints": [
              {
                "ContainerPath": "/data",
                "ReadOnly": false,
                "SourceVolume": "config-volume",
              },
              {
                "ContainerPath": "/app/.cq",
                "ReadOnly": false,
                "SourceVolume": "cloudquery-volume",
              },
              {
                "ContainerPath": "/tmp",
                "ReadOnly": false,
                "SourceVolume": "tmp-volume",
              },
            ],
            "Name": "CloudquerySource-OrgWideCertificatesContainer",
            "ReadonlyRootFilesystem": true,
            "Secrets": [
              {
                "Name": "DB_USERNAME",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_HOST",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_PASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
              {
                "Name": "CLOUDQUERY_API_KEY",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "cloudqueryapikeyCCF82F53",
                      },
                      ":api-key::",
                    ],
                  ],
                },
              },
            ],
          },
          {
            "Command": [
              "--config=/etc/ecs/ecs-xray.yaml",
            ],
            "Essential": true,
            "HealthCheck": {
              "Command": [
                "CMD",
                "/healthcheck",
              ],
              "Interval": 5,
              "Retries": 3,
              "Timeout": 5,
            },
            "Image": "public.ecr.aws/aws-observability/aws-otel-collector:v0.35.0",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "Name": "CloudquerySource-OrgWideCertificatesAWSOTELCollector",
            "PortMappings": [
              {
                "ContainerPort": 4318,
                "Protocol": "tcp",
              },
            ],
          },
          {
            "Command": [
              "/bin/sh",
              "-c",
              "psql -c "INSERT INTO cloudquery_table_frequency VALUES ('aws_acm%', 'DAILY') ON CONFLICT (table_name) DO UPDATE SET frequency = 'DAILY'"",
            ],
            "DockerLabels": {
              "App": "service-catalogue",
              "Name": "OrgWideCertificates",
              "Stack": "deploy",
              "Stage": "TEST",
            },
            "EntryPoint": [
              "",
            ],
            "Essential": false,
            "Image": "public.ecr.aws/docker/library/postgres:16-alpine",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "Name": "CloudquerySource-OrgWideCertificatesPostgresContainer",
            "Secrets": [
              {
                "Name": "PGUSER",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              {
                "Name": "PGHOST",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              {
                "Name": "PGPASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
            ],
          },
          {
            "Environment": [
              {
                "Name": "STACK",
                "Value": "deploy",
              },
              {
                "Name": "STAGE",
                "Value": "TEST",
              },
              {
                "Name": "APP",
                "Value": "service-catalogue",
              },
              {
                "Name": "GU_REPO",
                "Value": "guardian/service-catalogue",
              },
            ],
            "Essential": true,
            "FirelensConfiguration": {
              "Type": "fluentbit",
            },
            "Image": "ghcr.io/guardian/devx-logs:2",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "CloudquerySourceOrgWideCertificatesTaskDefinitionCloudquerySourceOrgWideCertificatesFirelensLogGroup3FA5384C",
                },
                "awslogs-region": {
                  "Ref": "AWS::Region",
                },
                "awslogs-stream-prefix": "deploy/TEST/service-catalogue",
              },
            },
            "Name": "CloudquerySource-OrgWideCertificatesFirelens",
          },
        ],
        "Cpu": "256",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "CloudquerySourceOrgWideCertificatesTaskDefinitionExecutionRoleDD0758F2",
            "Arn",
          ],
        },
        "Family": "ServiceCatalogueCloudquerySourceOrgWideCertificatesTaskDefinitionF1FAA598",
        "Memory": "512",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE",
        ],
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "OrgWideCertificates",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "servicecatalogueTESTtaskOrgWideCertificates11B791C3",
            "Arn",
          ],
        },
        "Volumes": [
          {
            "Name": "config-volume",
          },
          {
            "Name": "cloudquery-volume",
          },
          {
            "Name": "tmp-volume",
          },
        ],
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "CloudquerySourceOrgWideCertificatesTaskDefinitionCloudquerySourceOrgWideCertificatesFirelensLogGroup3FA5384C": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionInDays": 1,
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "OrgWideCertificates",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "CloudquerySourceOrgWideCertificatesTaskDefinitionEventsRoleAEA3DD58": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "OrgWideCertificates",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceOrgWideCertificatesTaskDefinitionEventsRoleDefaultPolicyD224AA54": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ecs:RunTask",
              "Condition": {
                "ArnEquals": {
                  "ecs:cluster": {
                    "Fn::GetAtt": [
                      "servicecatalogueCluster5FC34DC5",
                      "Arn",
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Resource": {
                "Ref": "CloudquerySourceOrgWideCertificatesTaskDefinition47A214D9",
              },
            },
            {
              "Action": "ecs:TagResource",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ecs:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":*:task/",
                    {
                      "Ref": "servicecatalogueCluster5FC34DC5",
                    },
                    "/*",
                  ],
                ],
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceOrgWideCertificatesTaskDefinitionExecutionRoleDD0758F2",
                  "Arn",
                ],
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "servicecatalogueTESTtaskOrgWideCertificates11B791C3",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceOrgWideCertificatesTaskDefinitionEventsRoleDefaultPolicyD224AA54",
        "Roles": [
          {
            "Ref": "CloudquerySourceOrgWideCertificatesTaskDefinitionEventsRoleAEA3DD58",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceOrgWideCertificatesTaskDefinitionExecutionRoleDD0758F2": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "OrgWideCertificates",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceOrgWideCertificatesTaskDefinitionExecutionRoleDefaultPolicyD50E0943": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
              },
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "cloudqueryapikeyCCF82F53",
              },
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceOrgWideCertificatesTaskDefinitionCloudquerySourceOrgWideCertificatesFirelensLogGroup3FA5384C",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceOrgWideCertificatesTaskDefinitionExecutionRoleDefaultPolicyD50E0943",
        "Roles": [
          {
            "Ref": "CloudquerySourceOrgWideCertificatesTaskDefinitionExecutionRoleDD0758F2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceOrgWideCloudFormationScheduledEventRule83F64E14": {
      "Properties": {
        "ScheduleExpression": "rate(3 hours)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "servicecatalogueCluster5FC34DC5",
                "Arn",
              ],
            },
            "EcsParameters": {
              "LaunchType": "FARGATE",
              "NetworkConfiguration": {
                "AwsVpcConfiguration": {
                  "AssignPublicIp": "DISABLED",
                  "SecurityGroups": [
                    {
                      "Fn::GetAtt": [
                        "PostgresAccessSecurityGroupServicecatalogue03C78F14",
                        "GroupId",
                      ],
                    },
                  ],
                  "Subnets": {
                    "Ref": "PrivateSubnets",
                  },
                },
              },
              "PropagateTags": "TASK_DEFINITION",
              "TaskCount": 1,
              "TaskDefinitionArn": {
                "Ref": "CloudquerySourceOrgWideCloudFormationTaskDefinitionDA4F8A51",
              },
            },
            "Id": "Target0",
            "Input": "{}",
            "RoleArn": {
              "Fn::GetAtt": [
                "CloudquerySourceOrgWideCloudFormationTaskDefinitionEventsRole2C0BF887",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "CloudquerySourceOrgWideCloudFormationTaskDefinitionCloudquerySourceOrgWideCloudFormationFirelensLogGroup36609B15": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionInDays": 1,
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "OrgWideCloudFormation",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "CloudquerySourceOrgWideCloudFormationTaskDefinitionDA4F8A51": {
      "Properties": {
        "ContainerDefinitions": [
          {
            "Command": [
              "/bin/sh",
              "-c",
              "printf 'kind: source
spec:
  name: aws
  path: cloudquery/aws
  version: v23.6.1
  tables:
    - aws_cloudformation_*
  destinations:
    - postgresql
  otel_endpoint: 0.0.0.0:4318
  otel_endpoint_insecure: true
  spec:
    regions:
      - eu-west-1
      - eu-west-2
      - us-east-1
      - us-east-2
      - us-west-1
      - ap-southeast-2
      - ca-central-1
    org:
      member_role_name: cloudquery-access
      organization_units:
        - ou-123
' > /data/source.yaml;printf 'kind: destination
spec:
  name: postgresql
  registry: github
  path: cloudquery/postgresql
  version: v7.2.0
  migrate_mode: forced
  spec:
    connection_string: >-
      user=\${DB_USERNAME} password=\${DB_PASSWORD} host=\${DB_HOST} port=5432
      dbname=postgres sslmode=verify-full
' > /data/destination.yaml;/app/cloudquery sync /data/source.yaml /data/destination.yaml --log-format json --log-console --no-log-file",
            ],
            "DependsOn": [
              {
                "Condition": "HEALTHY",
                "ContainerName": "CloudquerySource-OrgWideCloudFormationAWSOTELCollector",
              },
            ],
            "DockerLabels": {
              "App": "service-catalogue",
              "Name": "OrgWideCloudFormation",
              "Stack": "deploy",
              "Stage": "TEST",
            },
            "EntryPoint": [
              "",
            ],
            "Environment": [
              {
                "Name": "GOMEMLIMIT",
                "Value": "819MiB",
              },
            ],
            "Essential": true,
            "Image": "ghcr.io/guardian/service-catalogue/cloudquery:sha-0f2713edae5157260cfbf4eaa1f2d682e980fe7e",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "MountPoints": [
              {
                "ContainerPath": "/data",
                "ReadOnly": false,
                "SourceVolume": "config-volume",
              },
              {
                "ContainerPath": "/app/.cq",
                "ReadOnly": false,
                "SourceVolume": "cloudquery-volume",
              },
              {
                "ContainerPath": "/tmp",
                "ReadOnly": false,
                "SourceVolume": "tmp-volume",
              },
            ],
            "Name": "CloudquerySource-OrgWideCloudFormationContainer",
            "ReadonlyRootFilesystem": true,
            "Secrets": [
              {
                "Name": "DB_USERNAME",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_HOST",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_PASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
              {
                "Name": "CLOUDQUERY_API_KEY",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "cloudqueryapikeyCCF82F53",
                      },
                      ":api-key::",
                    ],
                  ],
                },
              },
            ],
          },
          {
            "Command": [
              "--config=/etc/ecs/ecs-xray.yaml",
            ],
            "Essential": true,
            "HealthCheck": {
              "Command": [
                "CMD",
                "/healthcheck",
              ],
              "Interval": 5,
              "Retries": 3,
              "Timeout": 5,
            },
            "Image": "public.ecr.aws/aws-observability/aws-otel-collector:v0.35.0",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "Name": "CloudquerySource-OrgWideCloudFormationAWSOTELCollector",
            "PortMappings": [
              {
                "ContainerPort": 4318,
                "Protocol": "tcp",
              },
            ],
          },
          {
            "Command": [
              "/bin/sh",
              "-c",
              "psql -c "INSERT INTO cloudquery_table_frequency VALUES ('aws_cloudformation_%', 'DAILY') ON CONFLICT (table_name) DO UPDATE SET frequency = 'DAILY'"",
            ],
            "DockerLabels": {
              "App": "service-catalogue",
              "Name": "OrgWideCloudFormation",
              "Stack": "deploy",
              "Stage": "TEST",
            },
            "EntryPoint": [
              "",
            ],
            "Essential": false,
            "Image": "public.ecr.aws/docker/library/postgres:16-alpine",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "Name": "CloudquerySource-OrgWideCloudFormationPostgresContainer",
            "Secrets": [
              {
                "Name": "PGUSER",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              {
                "Name": "PGHOST",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              {
                "Name": "PGPASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
            ],
          },
          {
            "Environment": [
              {
                "Name": "STACK",
                "Value": "deploy",
              },
              {
                "Name": "STAGE",
                "Value": "TEST",
              },
              {
                "Name": "APP",
                "Value": "service-catalogue",
              },
              {
                "Name": "GU_REPO",
                "Value": "guardian/service-catalogue",
              },
            ],
            "Essential": true,
            "FirelensConfiguration": {
              "Type": "fluentbit",
            },
            "Image": "ghcr.io/guardian/devx-logs:2",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "CloudquerySourceOrgWideCloudFormationTaskDefinitionCloudquerySourceOrgWideCloudFormationFirelensLogGroup36609B15",
                },
                "awslogs-region": {
                  "Ref": "AWS::Region",
                },
                "awslogs-stream-prefix": "deploy/TEST/service-catalogue",
              },
            },
            "Name": "CloudquerySource-OrgWideCloudFormationFirelens",
          },
        ],
        "Cpu": "256",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "CloudquerySourceOrgWideCloudFormationTaskDefinitionExecutionRole73C70234",
            "Arn",
          ],
        },
        "Family": "ServiceCatalogueCloudquerySourceOrgWideCloudFormationTaskDefinitionC6E96023",
        "Memory": "1024",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE",
        ],
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "OrgWideCloudFormation",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "servicecatalogueTESTtaskOrgWideCloudFormationEB323E17",
            "Arn",
          ],
        },
        "Volumes": [
          {
            "Name": "config-volume",
          },
          {
            "Name": "cloudquery-volume",
          },
          {
            "Name": "tmp-volume",
          },
        ],
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "CloudquerySourceOrgWideCloudFormationTaskDefinitionEventsRole2C0BF887": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "OrgWideCloudFormation",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceOrgWideCloudFormationTaskDefinitionEventsRoleDefaultPolicy74F50F3C": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ecs:RunTask",
              "Condition": {
                "ArnEquals": {
                  "ecs:cluster": {
                    "Fn::GetAtt": [
                      "servicecatalogueCluster5FC34DC5",
                      "Arn",
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Resource": {
                "Ref": "CloudquerySourceOrgWideCloudFormationTaskDefinitionDA4F8A51",
              },
            },
            {
              "Action": "ecs:TagResource",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ecs:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":*:task/",
                    {
                      "Ref": "servicecatalogueCluster5FC34DC5",
                    },
                    "/*",
                  ],
                ],
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceOrgWideCloudFormationTaskDefinitionExecutionRole73C70234",
                  "Arn",
                ],
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "servicecatalogueTESTtaskOrgWideCloudFormationEB323E17",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceOrgWideCloudFormationTaskDefinitionEventsRoleDefaultPolicy74F50F3C",
        "Roles": [
          {
            "Ref": "CloudquerySourceOrgWideCloudFormationTaskDefinitionEventsRole2C0BF887",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceOrgWideCloudFormationTaskDefinitionExecutionRole73C70234": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "OrgWideCloudFormation",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceOrgWideCloudFormationTaskDefinitionExecutionRoleDefaultPolicy789C9373": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
              },
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "cloudqueryapikeyCCF82F53",
              },
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceOrgWideCloudFormationTaskDefinitionCloudquerySourceOrgWideCloudFormationFirelensLogGroup36609B15",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceOrgWideCloudFormationTaskDefinitionExecutionRoleDefaultPolicy789C9373",
        "Roles": [
          {
            "Ref": "CloudquerySourceOrgWideCloudFormationTaskDefinitionExecutionRole73C70234",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceOrgWideCloudwatchAlarmsScheduledEventRuleB72D02A5": {
      "Properties": {
        "ScheduleExpression": "cron(0 2 * * ? *)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "servicecatalogueCluster5FC34DC5",
                "Arn",
              ],
            },
            "EcsParameters": {
              "LaunchType": "FARGATE",
              "NetworkConfiguration": {
                "AwsVpcConfiguration": {
                  "AssignPublicIp": "DISABLED",
                  "SecurityGroups": [
                    {
                      "Fn::GetAtt": [
                        "PostgresAccessSecurityGroupServicecatalogue03C78F14",
                        "GroupId",
                      ],
                    },
                  ],
                  "Subnets": {
                    "Ref": "PrivateSubnets",
                  },
                },
              },
              "PropagateTags": "TASK_DEFINITION",
              "TaskCount": 1,
              "TaskDefinitionArn": {
                "Ref": "CloudquerySourceOrgWideCloudwatchAlarmsTaskDefinitionF28C916F",
              },
            },
            "Id": "Target0",
            "Input": "{}",
            "RoleArn": {
              "Fn::GetAtt": [
                "CloudquerySourceOrgWideCloudwatchAlarmsTaskDefinitionEventsRole44F1283B",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "CloudquerySourceOrgWideCloudwatchAlarmsTaskDefinitionCloudquerySourceOrgWideCloudwatchAlarmsFirelensLogGroup5A8CFBF6": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionInDays": 1,
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "OrgWideCloudwatchAlarms",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "CloudquerySourceOrgWideCloudwatchAlarmsTaskDefinitionEventsRole44F1283B": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "OrgWideCloudwatchAlarms",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceOrgWideCloudwatchAlarmsTaskDefinitionEventsRoleDefaultPolicyFFA9197F": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ecs:RunTask",
              "Condition": {
                "ArnEquals": {
                  "ecs:cluster": {
                    "Fn::GetAtt": [
                      "servicecatalogueCluster5FC34DC5",
                      "Arn",
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Resource": {
                "Ref": "CloudquerySourceOrgWideCloudwatchAlarmsTaskDefinitionF28C916F",
              },
            },
            {
              "Action": "ecs:TagResource",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ecs:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":*:task/",
                    {
                      "Ref": "servicecatalogueCluster5FC34DC5",
                    },
                    "/*",
                  ],
                ],
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceOrgWideCloudwatchAlarmsTaskDefinitionExecutionRole6970372F",
                  "Arn",
                ],
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "servicecatalogueTESTtaskOrgWideCloudwatchAlarmsAA3FE326",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceOrgWideCloudwatchAlarmsTaskDefinitionEventsRoleDefaultPolicyFFA9197F",
        "Roles": [
          {
            "Ref": "CloudquerySourceOrgWideCloudwatchAlarmsTaskDefinitionEventsRole44F1283B",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceOrgWideCloudwatchAlarmsTaskDefinitionExecutionRole6970372F": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "OrgWideCloudwatchAlarms",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceOrgWideCloudwatchAlarmsTaskDefinitionExecutionRoleDefaultPolicy7EA502FA": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
              },
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "cloudqueryapikeyCCF82F53",
              },
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceOrgWideCloudwatchAlarmsTaskDefinitionCloudquerySourceOrgWideCloudwatchAlarmsFirelensLogGroup5A8CFBF6",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceOrgWideCloudwatchAlarmsTaskDefinitionExecutionRoleDefaultPolicy7EA502FA",
        "Roles": [
          {
            "Ref": "CloudquerySourceOrgWideCloudwatchAlarmsTaskDefinitionExecutionRole6970372F",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceOrgWideCloudwatchAlarmsTaskDefinitionF28C916F": {
      "Properties": {
        "ContainerDefinitions": [
          {
            "Command": [
              "/bin/sh",
              "-c",
              "printf 'kind: source
spec:
  name: aws
  path: cloudquery/aws
  version: v23.6.1
  tables:
    - aws_cloudwatch_alarms
  destinations:
    - postgresql
  otel_endpoint: 0.0.0.0:4318
  otel_endpoint_insecure: true
  spec:
    regions:
      - eu-west-1
      - eu-west-2
      - us-east-1
      - us-east-2
      - us-west-1
      - ap-southeast-2
      - ca-central-1
    org:
      member_role_name: cloudquery-access
      organization_units:
        - ou-123
' > /data/source.yaml;printf 'kind: destination
spec:
  name: postgresql
  registry: github
  path: cloudquery/postgresql
  version: v7.2.0
  migrate_mode: forced
  spec:
    connection_string: >-
      user=\${DB_USERNAME} password=\${DB_PASSWORD} host=\${DB_HOST} port=5432
      dbname=postgres sslmode=verify-full
' > /data/destination.yaml;/app/cloudquery sync /data/source.yaml /data/destination.yaml --log-format json --log-console --no-log-file",
            ],
            "DependsOn": [
              {
                "Condition": "HEALTHY",
                "ContainerName": "CloudquerySource-OrgWideCloudwatchAlarmsAWSOTELCollector",
              },
            ],
            "DockerLabels": {
              "App": "service-catalogue",
              "Name": "OrgWideCloudwatchAlarms",
              "Stack": "deploy",
              "Stage": "TEST",
            },
            "EntryPoint": [
              "",
            ],
            "Environment": [
              {
                "Name": "GOMEMLIMIT",
                "Value": "409MiB",
              },
            ],
            "Essential": true,
            "Image": "ghcr.io/guardian/service-catalogue/cloudquery:sha-0f2713edae5157260cfbf4eaa1f2d682e980fe7e",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "MountPoints": [
              {
                "ContainerPath": "/data",
                "ReadOnly": false,
                "SourceVolume": "config-volume",
              },
              {
                "ContainerPath": "/app/.cq",
                "ReadOnly": false,
                "SourceVolume": "cloudquery-volume",
              },
              {
                "ContainerPath": "/tmp",
                "ReadOnly": false,
                "SourceVolume": "tmp-volume",
              },
            ],
            "Name": "CloudquerySource-OrgWideCloudwatchAlarmsContainer",
            "ReadonlyRootFilesystem": true,
            "Secrets": [
              {
                "Name": "DB_USERNAME",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_HOST",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_PASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
              {
                "Name": "CLOUDQUERY_API_KEY",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "cloudqueryapikeyCCF82F53",
                      },
                      ":api-key::",
                    ],
                  ],
                },
              },
            ],
          },
          {
            "Command": [
              "--config=/etc/ecs/ecs-xray.yaml",
            ],
            "Essential": true,
            "HealthCheck": {
              "Command": [
                "CMD",
                "/healthcheck",
              ],
              "Interval": 5,
              "Retries": 3,
              "Timeout": 5,
            },
            "Image": "public.ecr.aws/aws-observability/aws-otel-collector:v0.35.0",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "Name": "CloudquerySource-OrgWideCloudwatchAlarmsAWSOTELCollector",
            "PortMappings": [
              {
                "ContainerPort": 4318,
                "Protocol": "tcp",
              },
            ],
          },
          {
            "Command": [
              "/bin/sh",
              "-c",
              "psql -c "INSERT INTO cloudquery_table_frequency VALUES ('aws_cloudwatch_alarms', 'DAILY') ON CONFLICT (table_name) DO UPDATE SET frequency = 'DAILY'"",
            ],
            "DockerLabels": {
              "App": "service-catalogue",
              "Name": "OrgWideCloudwatchAlarms",
              "Stack": "deploy",
              "Stage": "TEST",
            },
            "EntryPoint": [
              "",
            ],
            "Essential": false,
            "Image": "public.ecr.aws/docker/library/postgres:16-alpine",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "Name": "CloudquerySource-OrgWideCloudwatchAlarmsPostgresContainer",
            "Secrets": [
              {
                "Name": "PGUSER",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              {
                "Name": "PGHOST",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              {
                "Name": "PGPASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
            ],
          },
          {
            "Environment": [
              {
                "Name": "STACK",
                "Value": "deploy",
              },
              {
                "Name": "STAGE",
                "Value": "TEST",
              },
              {
                "Name": "APP",
                "Value": "service-catalogue",
              },
              {
                "Name": "GU_REPO",
                "Value": "guardian/service-catalogue",
              },
            ],
            "Essential": true,
            "FirelensConfiguration": {
              "Type": "fluentbit",
            },
            "Image": "ghcr.io/guardian/devx-logs:2",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "CloudquerySourceOrgWideCloudwatchAlarmsTaskDefinitionCloudquerySourceOrgWideCloudwatchAlarmsFirelensLogGroup5A8CFBF6",
                },
                "awslogs-region": {
                  "Ref": "AWS::Region",
                },
                "awslogs-stream-prefix": "deploy/TEST/service-catalogue",
              },
            },
            "Name": "CloudquerySource-OrgWideCloudwatchAlarmsFirelens",
          },
        ],
        "Cpu": "256",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "CloudquerySourceOrgWideCloudwatchAlarmsTaskDefinitionExecutionRole6970372F",
            "Arn",
          ],
        },
        "Family": "ServiceCatalogueCloudquerySourceOrgWideCloudwatchAlarmsTaskDefinition61B22AE9",
        "Memory": "512",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE",
        ],
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "OrgWideCloudwatchAlarms",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "servicecatalogueTESTtaskOrgWideCloudwatchAlarmsAA3FE326",
            "Arn",
          ],
        },
        "Volumes": [
          {
            "Name": "config-volume",
          },
          {
            "Name": "cloudquery-volume",
          },
          {
            "Name": "tmp-volume",
          },
        ],
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "CloudquerySourceOrgWideDynamoDBScheduledEventRule6AF4B752": {
      "Properties": {
        "ScheduleExpression": "cron(0 5 * * ? *)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "servicecatalogueCluster5FC34DC5",
                "Arn",
              ],
            },
            "EcsParameters": {
              "LaunchType": "FARGATE",
              "NetworkConfiguration": {
                "AwsVpcConfiguration": {
                  "AssignPublicIp": "DISABLED",
                  "SecurityGroups": [
                    {
                      "Fn::GetAtt": [
                        "PostgresAccessSecurityGroupServicecatalogue03C78F14",
                        "GroupId",
                      ],
                    },
                  ],
                  "Subnets": {
                    "Ref": "PrivateSubnets",
                  },
                },
              },
              "PropagateTags": "TASK_DEFINITION",
              "TaskCount": 1,
              "TaskDefinitionArn": {
                "Ref": "CloudquerySourceOrgWideDynamoDBTaskDefinition7016173E",
              },
            },
            "Id": "Target0",
            "Input": "{}",
            "RoleArn": {
              "Fn::GetAtt": [
                "CloudquerySourceOrgWideDynamoDBTaskDefinitionEventsRole9D48B8A8",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "CloudquerySourceOrgWideDynamoDBTaskDefinition7016173E": {
      "Properties": {
        "ContainerDefinitions": [
          {
            "Command": [
              "/bin/sh",
              "-c",
              "printf 'kind: source
spec:
  name: aws
  path: cloudquery/aws
  version: v23.6.1
  tables:
    - aws_dynamodb*
  destinations:
    - postgresql
  otel_endpoint: 0.0.0.0:4318
  otel_endpoint_insecure: true
  spec:
    regions:
      - eu-west-1
      - eu-west-2
      - us-east-1
      - us-east-2
      - us-west-1
      - ap-southeast-2
      - ca-central-1
    org:
      member_role_name: cloudquery-access
      organization_units:
        - ou-123
' > /data/source.yaml;printf 'kind: destination
spec:
  name: postgresql
  registry: github
  path: cloudquery/postgresql
  version: v7.2.0
  migrate_mode: forced
  spec:
    connection_string: >-
      user=\${DB_USERNAME} password=\${DB_PASSWORD} host=\${DB_HOST} port=5432
      dbname=postgres sslmode=verify-full
' > /data/destination.yaml;/app/cloudquery sync /data/source.yaml /data/destination.yaml --log-format json --log-console --no-log-file",
            ],
            "DependsOn": [
              {
                "Condition": "HEALTHY",
                "ContainerName": "CloudquerySource-OrgWideDynamoDBAWSOTELCollector",
              },
            ],
            "DockerLabels": {
              "App": "service-catalogue",
              "Name": "OrgWideDynamoDB",
              "Stack": "deploy",
              "Stage": "TEST",
            },
            "EntryPoint": [
              "",
            ],
            "Environment": [
              {
                "Name": "GOMEMLIMIT",
                "Value": "409MiB",
              },
            ],
            "Essential": true,
            "Image": "ghcr.io/guardian/service-catalogue/cloudquery:sha-0f2713edae5157260cfbf4eaa1f2d682e980fe7e",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "MountPoints": [
              {
                "ContainerPath": "/data",
                "ReadOnly": false,
                "SourceVolume": "config-volume",
              },
              {
                "ContainerPath": "/app/.cq",
                "ReadOnly": false,
                "SourceVolume": "cloudquery-volume",
              },
              {
                "ContainerPath": "/tmp",
                "ReadOnly": false,
                "SourceVolume": "tmp-volume",
              },
            ],
            "Name": "CloudquerySource-OrgWideDynamoDBContainer",
            "ReadonlyRootFilesystem": true,
            "Secrets": [
              {
                "Name": "DB_USERNAME",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_HOST",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_PASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
              {
                "Name": "CLOUDQUERY_API_KEY",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "cloudqueryapikeyCCF82F53",
                      },
                      ":api-key::",
                    ],
                  ],
                },
              },
            ],
          },
          {
            "Command": [
              "--config=/etc/ecs/ecs-xray.yaml",
            ],
            "Essential": true,
            "HealthCheck": {
              "Command": [
                "CMD",
                "/healthcheck",
              ],
              "Interval": 5,
              "Retries": 3,
              "Timeout": 5,
            },
            "Image": "public.ecr.aws/aws-observability/aws-otel-collector:v0.35.0",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "Name": "CloudquerySource-OrgWideDynamoDBAWSOTELCollector",
            "PortMappings": [
              {
                "ContainerPort": 4318,
                "Protocol": "tcp",
              },
            ],
          },
          {
            "Command": [
              "/bin/sh",
              "-c",
              "psql -c "INSERT INTO cloudquery_table_frequency VALUES ('aws_dynamodb%', 'DAILY') ON CONFLICT (table_name) DO UPDATE SET frequency = 'DAILY'"",
            ],
            "DockerLabels": {
              "App": "service-catalogue",
              "Name": "OrgWideDynamoDB",
              "Stack": "deploy",
              "Stage": "TEST",
            },
            "EntryPoint": [
              "",
            ],
            "Essential": false,
            "Image": "public.ecr.aws/docker/library/postgres:16-alpine",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "Name": "CloudquerySource-OrgWideDynamoDBPostgresContainer",
            "Secrets": [
              {
                "Name": "PGUSER",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              {
                "Name": "PGHOST",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              {
                "Name": "PGPASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
            ],
          },
          {
            "Environment": [
              {
                "Name": "STACK",
                "Value": "deploy",
              },
              {
                "Name": "STAGE",
                "Value": "TEST",
              },
              {
                "Name": "APP",
                "Value": "service-catalogue",
              },
              {
                "Name": "GU_REPO",
                "Value": "guardian/service-catalogue",
              },
            ],
            "Essential": true,
            "FirelensConfiguration": {
              "Type": "fluentbit",
            },
            "Image": "ghcr.io/guardian/devx-logs:2",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "CloudquerySourceOrgWideDynamoDBTaskDefinitionCloudquerySourceOrgWideDynamoDBFirelensLogGroup6E2D315C",
                },
                "awslogs-region": {
                  "Ref": "AWS::Region",
                },
                "awslogs-stream-prefix": "deploy/TEST/service-catalogue",
              },
            },
            "Name": "CloudquerySource-OrgWideDynamoDBFirelens",
          },
        ],
        "Cpu": "256",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "CloudquerySourceOrgWideDynamoDBTaskDefinitionExecutionRole1667A93E",
            "Arn",
          ],
        },
        "Family": "ServiceCatalogueCloudquerySourceOrgWideDynamoDBTaskDefinition7EBC3978",
        "Memory": "512",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE",
        ],
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "OrgWideDynamoDB",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "servicecatalogueTESTtaskOrgWideDynamoDB7E89D82B",
            "Arn",
          ],
        },
        "Volumes": [
          {
            "Name": "config-volume",
          },
          {
            "Name": "cloudquery-volume",
          },
          {
            "Name": "tmp-volume",
          },
        ],
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "CloudquerySourceOrgWideDynamoDBTaskDefinitionCloudquerySourceOrgWideDynamoDBFirelensLogGroup6E2D315C": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionInDays": 1,
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "OrgWideDynamoDB",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "CloudquerySourceOrgWideDynamoDBTaskDefinitionEventsRole9D48B8A8": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "OrgWideDynamoDB",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceOrgWideDynamoDBTaskDefinitionEventsRoleDefaultPolicy7E238787": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ecs:RunTask",
              "Condition": {
                "ArnEquals": {
                  "ecs:cluster": {
                    "Fn::GetAtt": [
                      "servicecatalogueCluster5FC34DC5",
                      "Arn",
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Resource": {
                "Ref": "CloudquerySourceOrgWideDynamoDBTaskDefinition7016173E",
              },
            },
            {
              "Action": "ecs:TagResource",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ecs:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":*:task/",
                    {
                      "Ref": "servicecatalogueCluster5FC34DC5",
                    },
                    "/*",
                  ],
                ],
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceOrgWideDynamoDBTaskDefinitionExecutionRole1667A93E",
                  "Arn",
                ],
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "servicecatalogueTESTtaskOrgWideDynamoDB7E89D82B",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceOrgWideDynamoDBTaskDefinitionEventsRoleDefaultPolicy7E238787",
        "Roles": [
          {
            "Ref": "CloudquerySourceOrgWideDynamoDBTaskDefinitionEventsRole9D48B8A8",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceOrgWideDynamoDBTaskDefinitionExecutionRole1667A93E": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "OrgWideDynamoDB",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceOrgWideDynamoDBTaskDefinitionExecutionRoleDefaultPolicyA773299D": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
              },
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "cloudqueryapikeyCCF82F53",
              },
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceOrgWideDynamoDBTaskDefinitionCloudquerySourceOrgWideDynamoDBFirelensLogGroup6E2D315C",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceOrgWideDynamoDBTaskDefinitionExecutionRoleDefaultPolicyA773299D",
        "Roles": [
          {
            "Ref": "CloudquerySourceOrgWideDynamoDBTaskDefinitionExecutionRole1667A93E",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceOrgWideEc2ScheduledEventRule3D54BEFB": {
      "Properties": {
        "ScheduleExpression": "rate(30 minutes)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "servicecatalogueCluster5FC34DC5",
                "Arn",
              ],
            },
            "EcsParameters": {
              "LaunchType": "FARGATE",
              "NetworkConfiguration": {
                "AwsVpcConfiguration": {
                  "AssignPublicIp": "DISABLED",
                  "SecurityGroups": [
                    {
                      "Fn::GetAtt": [
                        "PostgresAccessSecurityGroupServicecatalogue03C78F14",
                        "GroupId",
                      ],
                    },
                  ],
                  "Subnets": {
                    "Ref": "PrivateSubnets",
                  },
                },
              },
              "PropagateTags": "TASK_DEFINITION",
              "TaskCount": 1,
              "TaskDefinitionArn": {
                "Ref": "CloudquerySourceOrgWideEc2TaskDefinition7E4B2AE4",
              },
            },
            "Id": "Target0",
            "Input": "{}",
            "RoleArn": {
              "Fn::GetAtt": [
                "CloudquerySourceOrgWideEc2TaskDefinitionEventsRole34519DB3",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "CloudquerySourceOrgWideEc2TaskDefinition7E4B2AE4": {
      "Properties": {
        "ContainerDefinitions": [
          {
            "Command": [
              "/bin/sh",
              "-c",
              "printf 'kind: source
spec:
  name: aws
  path: cloudquery/aws
  version: v23.6.1
  tables:
    - aws_ec2_instances
    - aws_ec2_security_groups
    - aws_ec2_images
  destinations:
    - postgresql
  otel_endpoint: 0.0.0.0:4318
  otel_endpoint_insecure: true
  spec:
    regions:
      - eu-west-1
      - eu-west-2
      - us-east-1
      - us-east-2
      - us-west-1
      - ap-southeast-2
      - ca-central-1
    org:
      member_role_name: cloudquery-access
      organization_units:
        - ou-123
' > /data/source.yaml;printf 'kind: destination
spec:
  name: postgresql
  registry: github
  path: cloudquery/postgresql
  version: v7.2.0
  migrate_mode: forced
  spec:
    connection_string: >-
      user=\${DB_USERNAME} password=\${DB_PASSWORD} host=\${DB_HOST} port=5432
      dbname=postgres sslmode=verify-full
' > /data/destination.yaml;/app/cloudquery sync /data/source.yaml /data/destination.yaml --log-format json --log-console --no-log-file",
            ],
            "DependsOn": [
              {
                "Condition": "HEALTHY",
                "ContainerName": "CloudquerySource-OrgWideEc2AWSOTELCollector",
              },
              {
                "Condition": "SUCCESS",
                "ContainerName": "CloudquerySource-OrgWideEc2AwsCli",
              },
            ],
            "DockerLabels": {
              "App": "service-catalogue",
              "Name": "OrgWideEc2",
              "Stack": "deploy",
              "Stage": "TEST",
            },
            "EntryPoint": [
              "",
            ],
            "Environment": [
              {
                "Name": "GOMEMLIMIT",
                "Value": "819MiB",
              },
            ],
            "Essential": true,
            "Image": "ghcr.io/guardian/service-catalogue/cloudquery:sha-0f2713edae5157260cfbf4eaa1f2d682e980fe7e",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "MountPoints": [
              {
                "ContainerPath": "/data",
                "ReadOnly": false,
                "SourceVolume": "config-volume",
              },
              {
                "ContainerPath": "/app/.cq",
                "ReadOnly": false,
                "SourceVolume": "cloudquery-volume",
              },
              {
                "ContainerPath": "/tmp",
                "ReadOnly": false,
                "SourceVolume": "tmp-volume",
              },
            ],
            "Name": "CloudquerySource-OrgWideEc2Container",
            "ReadonlyRootFilesystem": true,
            "Secrets": [
              {
                "Name": "DB_USERNAME",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_HOST",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_PASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
              {
                "Name": "CLOUDQUERY_API_KEY",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "cloudqueryapikeyCCF82F53",
                      },
                      ":api-key::",
                    ],
                  ],
                },
              },
            ],
          },
          {
            "Command": [
              "--config=/etc/ecs/ecs-xray.yaml",
            ],
            "Essential": true,
            "HealthCheck": {
              "Command": [
                "CMD",
                "/healthcheck",
              ],
              "Interval": 5,
              "Retries": 3,
              "Timeout": 5,
            },
            "Image": "public.ecr.aws/aws-observability/aws-otel-collector:v0.35.0",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "Name": "CloudquerySource-OrgWideEc2AWSOTELCollector",
            "PortMappings": [
              {
                "ContainerPort": 4318,
                "Protocol": "tcp",
              },
            ],
          },
          {
            "Command": [
              "/bin/bash",
              "-c",
              "yum install -y -q jq awscli;ECS_CLUSTER=$(curl -s $ECS_CONTAINER_METADATA_URI/task | jq -r '.Cluster');ECS_FAMILY=$(curl -s $ECS_CONTAINER_METADATA_URI/task | jq -r '.Family');ECS_TASK_ARN=$(curl -s $ECS_CONTAINER_METADATA_URI/task | jq -r '.TaskARN');RUNNING=$(aws ecs list-tasks --cluster $ECS_CLUSTER --family $ECS_FAMILY | jq '.taskArns | length');[[ \${RUNNING} > 1 ]] && exit 114 || exit 0",
            ],
            "EntryPoint": [
              "",
            ],
            "Essential": false,
            "Image": "public.ecr.aws/amazonlinux/amazonlinux:latest",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "Name": "CloudquerySource-OrgWideEc2AwsCli",
          },
          {
            "Command": [
              "/bin/sh",
              "-c",
              "psql -c "INSERT INTO cloudquery_table_frequency VALUES ('aws_ec2_instances', 'DAILY'),('aws_ec2_security_groups', 'DAILY'),('aws_ec2_images', 'DAILY') ON CONFLICT (table_name) DO UPDATE SET frequency = 'DAILY'"",
            ],
            "DockerLabels": {
              "App": "service-catalogue",
              "Name": "OrgWideEc2",
              "Stack": "deploy",
              "Stage": "TEST",
            },
            "EntryPoint": [
              "",
            ],
            "Essential": false,
            "Image": "public.ecr.aws/docker/library/postgres:16-alpine",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "Name": "CloudquerySource-OrgWideEc2PostgresContainer",
            "Secrets": [
              {
                "Name": "PGUSER",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              {
                "Name": "PGHOST",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              {
                "Name": "PGPASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
            ],
          },
          {
            "Environment": [
              {
                "Name": "STACK",
                "Value": "deploy",
              },
              {
                "Name": "STAGE",
                "Value": "TEST",
              },
              {
                "Name": "APP",
                "Value": "service-catalogue",
              },
              {
                "Name": "GU_REPO",
                "Value": "guardian/service-catalogue",
              },
            ],
            "Essential": true,
            "FirelensConfiguration": {
              "Type": "fluentbit",
            },
            "Image": "ghcr.io/guardian/devx-logs:2",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "CloudquerySourceOrgWideEc2TaskDefinitionCloudquerySourceOrgWideEc2FirelensLogGroup5214B9E0",
                },
                "awslogs-region": {
                  "Ref": "AWS::Region",
                },
                "awslogs-stream-prefix": "deploy/TEST/service-catalogue",
              },
            },
            "Name": "CloudquerySource-OrgWideEc2Firelens",
          },
        ],
        "Cpu": "256",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "CloudquerySourceOrgWideEc2TaskDefinitionExecutionRole806432F0",
            "Arn",
          ],
        },
        "Family": "ServiceCatalogueCloudquerySourceOrgWideEc2TaskDefinition93B6B037",
        "Memory": "1024",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE",
        ],
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "OrgWideEc2",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "servicecatalogueTESTtaskOrgWideEc2AD6BFB41",
            "Arn",
          ],
        },
        "Volumes": [
          {
            "Name": "config-volume",
          },
          {
            "Name": "cloudquery-volume",
          },
          {
            "Name": "tmp-volume",
          },
        ],
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "CloudquerySourceOrgWideEc2TaskDefinitionCloudquerySourceOrgWideEc2FirelensLogGroup5214B9E0": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionInDays": 1,
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "OrgWideEc2",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "CloudquerySourceOrgWideEc2TaskDefinitionEventsRole34519DB3": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "OrgWideEc2",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceOrgWideEc2TaskDefinitionEventsRoleDefaultPolicyA48042A3": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ecs:RunTask",
              "Condition": {
                "ArnEquals": {
                  "ecs:cluster": {
                    "Fn::GetAtt": [
                      "servicecatalogueCluster5FC34DC5",
                      "Arn",
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Resource": {
                "Ref": "CloudquerySourceOrgWideEc2TaskDefinition7E4B2AE4",
              },
            },
            {
              "Action": "ecs:TagResource",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ecs:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":*:task/",
                    {
                      "Ref": "servicecatalogueCluster5FC34DC5",
                    },
                    "/*",
                  ],
                ],
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceOrgWideEc2TaskDefinitionExecutionRole806432F0",
                  "Arn",
                ],
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "servicecatalogueTESTtaskOrgWideEc2AD6BFB41",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceOrgWideEc2TaskDefinitionEventsRoleDefaultPolicyA48042A3",
        "Roles": [
          {
            "Ref": "CloudquerySourceOrgWideEc2TaskDefinitionEventsRole34519DB3",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceOrgWideEc2TaskDefinitionExecutionRole806432F0": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "OrgWideEc2",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceOrgWideEc2TaskDefinitionExecutionRoleDefaultPolicy1BF4301F": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
              },
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "cloudqueryapikeyCCF82F53",
              },
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceOrgWideEc2TaskDefinitionCloudquerySourceOrgWideEc2FirelensLogGroup5214B9E0",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceOrgWideEc2TaskDefinitionExecutionRoleDefaultPolicy1BF4301F",
        "Roles": [
          {
            "Ref": "CloudquerySourceOrgWideEc2TaskDefinitionExecutionRole806432F0",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceOrgWideInspectorScheduledEventRule0152ABA6": {
      "Properties": {
        "ScheduleExpression": "cron(0 3 * * ? *)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "servicecatalogueCluster5FC34DC5",
                "Arn",
              ],
            },
            "EcsParameters": {
              "LaunchType": "FARGATE",
              "NetworkConfiguration": {
                "AwsVpcConfiguration": {
                  "AssignPublicIp": "DISABLED",
                  "SecurityGroups": [
                    {
                      "Fn::GetAtt": [
                        "PostgresAccessSecurityGroupServicecatalogue03C78F14",
                        "GroupId",
                      ],
                    },
                  ],
                  "Subnets": {
                    "Ref": "PrivateSubnets",
                  },
                },
              },
              "PropagateTags": "TASK_DEFINITION",
              "TaskCount": 1,
              "TaskDefinitionArn": {
                "Ref": "CloudquerySourceOrgWideInspectorTaskDefinition25FAB51D",
              },
            },
            "Id": "Target0",
            "Input": "{}",
            "RoleArn": {
              "Fn::GetAtt": [
                "CloudquerySourceOrgWideInspectorTaskDefinitionEventsRoleF72F2CE5",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "CloudquerySourceOrgWideInspectorTaskDefinition25FAB51D": {
      "Properties": {
        "ContainerDefinitions": [
          {
            "Command": [
              "/bin/sh",
              "-c",
              "printf 'kind: source
spec:
  name: aws
  path: cloudquery/aws
  version: v23.6.1
  tables:
    - aws_inspector_findings
    - aws_inspector2_findings
  destinations:
    - postgresql
  otel_endpoint: 0.0.0.0:4318
  otel_endpoint_insecure: true
  spec:
    regions:
      - eu-west-1
      - eu-west-2
      - us-east-1
      - us-east-2
      - us-west-1
      - ap-southeast-2
      - ca-central-1
    org:
      member_role_name: cloudquery-access
      organization_units:
        - ou-123
' > /data/source.yaml;printf 'kind: destination
spec:
  name: postgresql
  registry: github
  path: cloudquery/postgresql
  version: v7.2.0
  migrate_mode: forced
  spec:
    connection_string: >-
      user=\${DB_USERNAME} password=\${DB_PASSWORD} host=\${DB_HOST} port=5432
      dbname=postgres sslmode=verify-full
' > /data/destination.yaml;/app/cloudquery sync /data/source.yaml /data/destination.yaml --log-format json --log-console --no-log-file",
            ],
            "DependsOn": [
              {
                "Condition": "HEALTHY",
                "ContainerName": "CloudquerySource-OrgWideInspectorAWSOTELCollector",
              },
            ],
            "DockerLabels": {
              "App": "service-catalogue",
              "Name": "OrgWideInspector",
              "Stack": "deploy",
              "Stage": "TEST",
            },
            "EntryPoint": [
              "",
            ],
            "Environment": [
              {
                "Name": "GOMEMLIMIT",
                "Value": "819MiB",
              },
            ],
            "Essential": true,
            "Image": "ghcr.io/guardian/service-catalogue/cloudquery:sha-0f2713edae5157260cfbf4eaa1f2d682e980fe7e",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "MountPoints": [
              {
                "ContainerPath": "/data",
                "ReadOnly": false,
                "SourceVolume": "config-volume",
              },
              {
                "ContainerPath": "/app/.cq",
                "ReadOnly": false,
                "SourceVolume": "cloudquery-volume",
              },
              {
                "ContainerPath": "/tmp",
                "ReadOnly": false,
                "SourceVolume": "tmp-volume",
              },
            ],
            "Name": "CloudquerySource-OrgWideInspectorContainer",
            "ReadonlyRootFilesystem": true,
            "Secrets": [
              {
                "Name": "DB_USERNAME",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_HOST",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_PASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
              {
                "Name": "CLOUDQUERY_API_KEY",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "cloudqueryapikeyCCF82F53",
                      },
                      ":api-key::",
                    ],
                  ],
                },
              },
            ],
          },
          {
            "Command": [
              "--config=/etc/ecs/ecs-xray.yaml",
            ],
            "Essential": true,
            "HealthCheck": {
              "Command": [
                "CMD",
                "/healthcheck",
              ],
              "Interval": 5,
              "Retries": 3,
              "Timeout": 5,
            },
            "Image": "public.ecr.aws/aws-observability/aws-otel-collector:v0.35.0",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "Name": "CloudquerySource-OrgWideInspectorAWSOTELCollector",
            "PortMappings": [
              {
                "ContainerPort": 4318,
                "Protocol": "tcp",
              },
            ],
          },
          {
            "Command": [
              "/bin/sh",
              "-c",
              "psql -c "INSERT INTO cloudquery_table_frequency VALUES ('aws_inspector_findings', 'DAILY'),('aws_inspector2_findings', 'DAILY') ON CONFLICT (table_name) DO UPDATE SET frequency = 'DAILY'"",
            ],
            "DockerLabels": {
              "App": "service-catalogue",
              "Name": "OrgWideInspector",
              "Stack": "deploy",
              "Stage": "TEST",
            },
            "EntryPoint": [
              "",
            ],
            "Essential": false,
            "Image": "public.ecr.aws/docker/library/postgres:16-alpine",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "Name": "CloudquerySource-OrgWideInspectorPostgresContainer",
            "Secrets": [
              {
                "Name": "PGUSER",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              {
                "Name": "PGHOST",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              {
                "Name": "PGPASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
            ],
          },
          {
            "Environment": [
              {
                "Name": "STACK",
                "Value": "deploy",
              },
              {
                "Name": "STAGE",
                "Value": "TEST",
              },
              {
                "Name": "APP",
                "Value": "service-catalogue",
              },
              {
                "Name": "GU_REPO",
                "Value": "guardian/service-catalogue",
              },
            ],
            "Essential": true,
            "FirelensConfiguration": {
              "Type": "fluentbit",
            },
            "Image": "ghcr.io/guardian/devx-logs:2",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "CloudquerySourceOrgWideInspectorTaskDefinitionCloudquerySourceOrgWideInspectorFirelensLogGroupCDA3721C",
                },
                "awslogs-region": {
                  "Ref": "AWS::Region",
                },
                "awslogs-stream-prefix": "deploy/TEST/service-catalogue",
              },
            },
            "Name": "CloudquerySource-OrgWideInspectorFirelens",
          },
        ],
        "Cpu": "256",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "CloudquerySourceOrgWideInspectorTaskDefinitionExecutionRoleBF64FC99",
            "Arn",
          ],
        },
        "Family": "ServiceCatalogueCloudquerySourceOrgWideInspectorTaskDefinition280F3CC7",
        "Memory": "1024",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE",
        ],
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "OrgWideInspector",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "servicecatalogueTESTtaskOrgWideInspector057F690E",
            "Arn",
          ],
        },
        "Volumes": [
          {
            "Name": "config-volume",
          },
          {
            "Name": "cloudquery-volume",
          },
          {
            "Name": "tmp-volume",
          },
        ],
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "CloudquerySourceOrgWideInspectorTaskDefinitionCloudquerySourceOrgWideInspectorFirelensLogGroupCDA3721C": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionInDays": 1,
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "OrgWideInspector",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "CloudquerySourceOrgWideInspectorTaskDefinitionEventsRoleDefaultPolicy94BFDDF0": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ecs:RunTask",
              "Condition": {
                "ArnEquals": {
                  "ecs:cluster": {
                    "Fn::GetAtt": [
                      "servicecatalogueCluster5FC34DC5",
                      "Arn",
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Resource": {
                "Ref": "CloudquerySourceOrgWideInspectorTaskDefinition25FAB51D",
              },
            },
            {
              "Action": "ecs:TagResource",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ecs:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":*:task/",
                    {
                      "Ref": "servicecatalogueCluster5FC34DC5",
                    },
                    "/*",
                  ],
                ],
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceOrgWideInspectorTaskDefinitionExecutionRoleBF64FC99",
                  "Arn",
                ],
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "servicecatalogueTESTtaskOrgWideInspector057F690E",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceOrgWideInspectorTaskDefinitionEventsRoleDefaultPolicy94BFDDF0",
        "Roles": [
          {
            "Ref": "CloudquerySourceOrgWideInspectorTaskDefinitionEventsRoleF72F2CE5",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceOrgWideInspectorTaskDefinitionEventsRoleF72F2CE5": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "OrgWideInspector",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceOrgWideInspectorTaskDefinitionExecutionRoleBF64FC99": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "OrgWideInspector",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceOrgWideInspectorTaskDefinitionExecutionRoleDefaultPolicyBD358658": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
              },
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "cloudqueryapikeyCCF82F53",
              },
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceOrgWideInspectorTaskDefinitionCloudquerySourceOrgWideInspectorFirelensLogGroupCDA3721C",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceOrgWideInspectorTaskDefinitionExecutionRoleDefaultPolicyBD358658",
        "Roles": [
          {
            "Ref": "CloudquerySourceOrgWideInspectorTaskDefinitionExecutionRoleBF64FC99",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceOrgWideLoadBalancersScheduledEventRule1B13EFF3": {
      "Properties": {
        "ScheduleExpression": "cron(0 23 * * ? *)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "servicecatalogueCluster5FC34DC5",
                "Arn",
              ],
            },
            "EcsParameters": {
              "LaunchType": "FARGATE",
              "NetworkConfiguration": {
                "AwsVpcConfiguration": {
                  "AssignPublicIp": "DISABLED",
                  "SecurityGroups": [
                    {
                      "Fn::GetAtt": [
                        "PostgresAccessSecurityGroupServicecatalogue03C78F14",
                        "GroupId",
                      ],
                    },
                  ],
                  "Subnets": {
                    "Ref": "PrivateSubnets",
                  },
                },
              },
              "PropagateTags": "TASK_DEFINITION",
              "TaskCount": 1,
              "TaskDefinitionArn": {
                "Ref": "CloudquerySourceOrgWideLoadBalancersTaskDefinitionF1D11F23",
              },
            },
            "Id": "Target0",
            "Input": "{}",
            "RoleArn": {
              "Fn::GetAtt": [
                "CloudquerySourceOrgWideLoadBalancersTaskDefinitionEventsRoleC6DAFC26",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "CloudquerySourceOrgWideLoadBalancersTaskDefinitionCloudquerySourceOrgWideLoadBalancersFirelensLogGroupC2738C36": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionInDays": 1,
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "OrgWideLoadBalancers",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "CloudquerySourceOrgWideLoadBalancersTaskDefinitionEventsRoleC6DAFC26": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "OrgWideLoadBalancers",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceOrgWideLoadBalancersTaskDefinitionEventsRoleDefaultPolicy0BDC4116": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ecs:RunTask",
              "Condition": {
                "ArnEquals": {
                  "ecs:cluster": {
                    "Fn::GetAtt": [
                      "servicecatalogueCluster5FC34DC5",
                      "Arn",
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Resource": {
                "Ref": "CloudquerySourceOrgWideLoadBalancersTaskDefinitionF1D11F23",
              },
            },
            {
              "Action": "ecs:TagResource",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ecs:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":*:task/",
                    {
                      "Ref": "servicecatalogueCluster5FC34DC5",
                    },
                    "/*",
                  ],
                ],
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceOrgWideLoadBalancersTaskDefinitionExecutionRole78CACF8A",
                  "Arn",
                ],
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "servicecatalogueTESTtaskOrgWideLoadBalancers98E48713",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceOrgWideLoadBalancersTaskDefinitionEventsRoleDefaultPolicy0BDC4116",
        "Roles": [
          {
            "Ref": "CloudquerySourceOrgWideLoadBalancersTaskDefinitionEventsRoleC6DAFC26",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceOrgWideLoadBalancersTaskDefinitionExecutionRole78CACF8A": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "OrgWideLoadBalancers",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceOrgWideLoadBalancersTaskDefinitionExecutionRoleDefaultPolicy3D7183B9": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
              },
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "cloudqueryapikeyCCF82F53",
              },
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceOrgWideLoadBalancersTaskDefinitionCloudquerySourceOrgWideLoadBalancersFirelensLogGroupC2738C36",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceOrgWideLoadBalancersTaskDefinitionExecutionRoleDefaultPolicy3D7183B9",
        "Roles": [
          {
            "Ref": "CloudquerySourceOrgWideLoadBalancersTaskDefinitionExecutionRole78CACF8A",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceOrgWideLoadBalancersTaskDefinitionF1D11F23": {
      "Properties": {
        "ContainerDefinitions": [
          {
            "Command": [
              "/bin/sh",
              "-c",
              "printf 'kind: source
spec:
  name: aws
  path: cloudquery/aws
  version: v23.6.1
  tables:
    - aws_elbv1_*
    - aws_elbv2_*
  destinations:
    - postgresql
  otel_endpoint: 0.0.0.0:4318
  otel_endpoint_insecure: true
  spec:
    regions:
      - eu-west-1
      - eu-west-2
      - us-east-1
      - us-east-2
      - us-west-1
      - ap-southeast-2
      - ca-central-1
    org:
      member_role_name: cloudquery-access
      organization_units:
        - ou-123
' > /data/source.yaml;printf 'kind: destination
spec:
  name: postgresql
  registry: github
  path: cloudquery/postgresql
  version: v7.2.0
  migrate_mode: forced
  spec:
    connection_string: >-
      user=\${DB_USERNAME} password=\${DB_PASSWORD} host=\${DB_HOST} port=5432
      dbname=postgres sslmode=verify-full
' > /data/destination.yaml;/app/cloudquery sync /data/source.yaml /data/destination.yaml --log-format json --log-console --no-log-file",
            ],
            "DependsOn": [
              {
                "Condition": "HEALTHY",
                "ContainerName": "CloudquerySource-OrgWideLoadBalancersAWSOTELCollector",
              },
            ],
            "DockerLabels": {
              "App": "service-catalogue",
              "Name": "OrgWideLoadBalancers",
              "Stack": "deploy",
              "Stage": "TEST",
            },
            "EntryPoint": [
              "",
            ],
            "Environment": [
              {
                "Name": "GOMEMLIMIT",
                "Value": "409MiB",
              },
            ],
            "Essential": true,
            "Image": "ghcr.io/guardian/service-catalogue/cloudquery:sha-0f2713edae5157260cfbf4eaa1f2d682e980fe7e",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "MountPoints": [
              {
                "ContainerPath": "/data",
                "ReadOnly": false,
                "SourceVolume": "config-volume",
              },
              {
                "ContainerPath": "/app/.cq",
                "ReadOnly": false,
                "SourceVolume": "cloudquery-volume",
              },
              {
                "ContainerPath": "/tmp",
                "ReadOnly": false,
                "SourceVolume": "tmp-volume",
              },
            ],
            "Name": "CloudquerySource-OrgWideLoadBalancersContainer",
            "ReadonlyRootFilesystem": true,
            "Secrets": [
              {
                "Name": "DB_USERNAME",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_HOST",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_PASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
              {
                "Name": "CLOUDQUERY_API_KEY",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "cloudqueryapikeyCCF82F53",
                      },
                      ":api-key::",
                    ],
                  ],
                },
              },
            ],
          },
          {
            "Command": [
              "--config=/etc/ecs/ecs-xray.yaml",
            ],
            "Essential": true,
            "HealthCheck": {
              "Command": [
                "CMD",
                "/healthcheck",
              ],
              "Interval": 5,
              "Retries": 3,
              "Timeout": 5,
            },
            "Image": "public.ecr.aws/aws-observability/aws-otel-collector:v0.35.0",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "Name": "CloudquerySource-OrgWideLoadBalancersAWSOTELCollector",
            "PortMappings": [
              {
                "ContainerPort": 4318,
                "Protocol": "tcp",
              },
            ],
          },
          {
            "Command": [
              "/bin/sh",
              "-c",
              "psql -c "INSERT INTO cloudquery_table_frequency VALUES ('aws_elbv1_%', 'DAILY'),('aws_elbv2_%', 'DAILY') ON CONFLICT (table_name) DO UPDATE SET frequency = 'DAILY'"",
            ],
            "DockerLabels": {
              "App": "service-catalogue",
              "Name": "OrgWideLoadBalancers",
              "Stack": "deploy",
              "Stage": "TEST",
            },
            "EntryPoint": [
              "",
            ],
            "Essential": false,
            "Image": "public.ecr.aws/docker/library/postgres:16-alpine",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "Name": "CloudquerySource-OrgWideLoadBalancersPostgresContainer",
            "Secrets": [
              {
                "Name": "PGUSER",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              {
                "Name": "PGHOST",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              {
                "Name": "PGPASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
            ],
          },
          {
            "Environment": [
              {
                "Name": "STACK",
                "Value": "deploy",
              },
              {
                "Name": "STAGE",
                "Value": "TEST",
              },
              {
                "Name": "APP",
                "Value": "service-catalogue",
              },
              {
                "Name": "GU_REPO",
                "Value": "guardian/service-catalogue",
              },
            ],
            "Essential": true,
            "FirelensConfiguration": {
              "Type": "fluentbit",
            },
            "Image": "ghcr.io/guardian/devx-logs:2",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "CloudquerySourceOrgWideLoadBalancersTaskDefinitionCloudquerySourceOrgWideLoadBalancersFirelensLogGroupC2738C36",
                },
                "awslogs-region": {
                  "Ref": "AWS::Region",
                },
                "awslogs-stream-prefix": "deploy/TEST/service-catalogue",
              },
            },
            "Name": "CloudquerySource-OrgWideLoadBalancersFirelens",
          },
        ],
        "Cpu": "256",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "CloudquerySourceOrgWideLoadBalancersTaskDefinitionExecutionRole78CACF8A",
            "Arn",
          ],
        },
        "Family": "ServiceCatalogueCloudquerySourceOrgWideLoadBalancersTaskDefinition572402B4",
        "Memory": "512",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE",
        ],
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "OrgWideLoadBalancers",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "servicecatalogueTESTtaskOrgWideLoadBalancers98E48713",
            "Arn",
          ],
        },
        "Volumes": [
          {
            "Name": "config-volume",
          },
          {
            "Name": "cloudquery-volume",
          },
          {
            "Name": "tmp-volume",
          },
        ],
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "CloudquerySourceOrgWideRDSScheduledEventRuleD2037915": {
      "Properties": {
        "ScheduleExpression": "cron(0 6 * * ? *)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "servicecatalogueCluster5FC34DC5",
                "Arn",
              ],
            },
            "EcsParameters": {
              "LaunchType": "FARGATE",
              "NetworkConfiguration": {
                "AwsVpcConfiguration": {
                  "AssignPublicIp": "DISABLED",
                  "SecurityGroups": [
                    {
                      "Fn::GetAtt": [
                        "PostgresAccessSecurityGroupServicecatalogue03C78F14",
                        "GroupId",
                      ],
                    },
                  ],
                  "Subnets": {
                    "Ref": "PrivateSubnets",
                  },
                },
              },
              "PropagateTags": "TASK_DEFINITION",
              "TaskCount": 1,
              "TaskDefinitionArn": {
                "Ref": "CloudquerySourceOrgWideRDSTaskDefinitionFDF4F4E5",
              },
            },
            "Id": "Target0",
            "Input": "{}",
            "RoleArn": {
              "Fn::GetAtt": [
                "CloudquerySourceOrgWideRDSTaskDefinitionEventsRoleA4A3D1A7",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "CloudquerySourceOrgWideRDSTaskDefinitionCloudquerySourceOrgWideRDSFirelensLogGroup1324D19F": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionInDays": 1,
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "OrgWideRDS",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "CloudquerySourceOrgWideRDSTaskDefinitionEventsRoleA4A3D1A7": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "OrgWideRDS",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceOrgWideRDSTaskDefinitionEventsRoleDefaultPolicyF90E32FB": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ecs:RunTask",
              "Condition": {
                "ArnEquals": {
                  "ecs:cluster": {
                    "Fn::GetAtt": [
                      "servicecatalogueCluster5FC34DC5",
                      "Arn",
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Resource": {
                "Ref": "CloudquerySourceOrgWideRDSTaskDefinitionFDF4F4E5",
              },
            },
            {
              "Action": "ecs:TagResource",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ecs:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":*:task/",
                    {
                      "Ref": "servicecatalogueCluster5FC34DC5",
                    },
                    "/*",
                  ],
                ],
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceOrgWideRDSTaskDefinitionExecutionRole419A7267",
                  "Arn",
                ],
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "servicecatalogueTESTtaskOrgWideRDS66AC88D6",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceOrgWideRDSTaskDefinitionEventsRoleDefaultPolicyF90E32FB",
        "Roles": [
          {
            "Ref": "CloudquerySourceOrgWideRDSTaskDefinitionEventsRoleA4A3D1A7",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceOrgWideRDSTaskDefinitionExecutionRole419A7267": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "OrgWideRDS",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceOrgWideRDSTaskDefinitionExecutionRoleDefaultPolicy7D4FBE6E": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
              },
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "cloudqueryapikeyCCF82F53",
              },
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceOrgWideRDSTaskDefinitionCloudquerySourceOrgWideRDSFirelensLogGroup1324D19F",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceOrgWideRDSTaskDefinitionExecutionRoleDefaultPolicy7D4FBE6E",
        "Roles": [
          {
            "Ref": "CloudquerySourceOrgWideRDSTaskDefinitionExecutionRole419A7267",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceOrgWideRDSTaskDefinitionFDF4F4E5": {
      "Properties": {
        "ContainerDefinitions": [
          {
            "Command": [
              "/bin/sh",
              "-c",
              "printf 'kind: source
spec:
  name: aws
  path: cloudquery/aws
  version: v23.6.1
  tables:
    - aws_rds_instances
    - aws_rds_clusters
    - aws_rds_db_snapshots
    - aws_rds_cluster_snapshots
  destinations:
    - postgresql
  otel_endpoint: 0.0.0.0:4318
  otel_endpoint_insecure: true
  spec:
    regions:
      - eu-west-1
      - eu-west-2
      - us-east-1
      - us-east-2
      - us-west-1
      - ap-southeast-2
      - ca-central-1
    org:
      member_role_name: cloudquery-access
      organization_units:
        - ou-123
' > /data/source.yaml;printf 'kind: destination
spec:
  name: postgresql
  registry: github
  path: cloudquery/postgresql
  version: v7.2.0
  migrate_mode: forced
  spec:
    connection_string: >-
      user=\${DB_USERNAME} password=\${DB_PASSWORD} host=\${DB_HOST} port=5432
      dbname=postgres sslmode=verify-full
' > /data/destination.yaml;/app/cloudquery sync /data/source.yaml /data/destination.yaml --log-format json --log-console --no-log-file",
            ],
            "DependsOn": [
              {
                "Condition": "HEALTHY",
                "ContainerName": "CloudquerySource-OrgWideRDSAWSOTELCollector",
              },
            ],
            "DockerLabels": {
              "App": "service-catalogue",
              "Name": "OrgWideRDS",
              "Stack": "deploy",
              "Stage": "TEST",
            },
            "EntryPoint": [
              "",
            ],
            "Environment": [
              {
                "Name": "GOMEMLIMIT",
                "Value": "409MiB",
              },
            ],
            "Essential": true,
            "Image": "ghcr.io/guardian/service-catalogue/cloudquery:sha-0f2713edae5157260cfbf4eaa1f2d682e980fe7e",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "MountPoints": [
              {
                "ContainerPath": "/data",
                "ReadOnly": false,
                "SourceVolume": "config-volume",
              },
              {
                "ContainerPath": "/app/.cq",
                "ReadOnly": false,
                "SourceVolume": "cloudquery-volume",
              },
              {
                "ContainerPath": "/tmp",
                "ReadOnly": false,
                "SourceVolume": "tmp-volume",
              },
            ],
            "Name": "CloudquerySource-OrgWideRDSContainer",
            "ReadonlyRootFilesystem": true,
            "Secrets": [
              {
                "Name": "DB_USERNAME",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_HOST",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_PASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
              {
                "Name": "CLOUDQUERY_API_KEY",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "cloudqueryapikeyCCF82F53",
                      },
                      ":api-key::",
                    ],
                  ],
                },
              },
            ],
          },
          {
            "Command": [
              "--config=/etc/ecs/ecs-xray.yaml",
            ],
            "Essential": true,
            "HealthCheck": {
              "Command": [
                "CMD",
                "/healthcheck",
              ],
              "Interval": 5,
              "Retries": 3,
              "Timeout": 5,
            },
            "Image": "public.ecr.aws/aws-observability/aws-otel-collector:v0.35.0",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "Name": "CloudquerySource-OrgWideRDSAWSOTELCollector",
            "PortMappings": [
              {
                "ContainerPort": 4318,
                "Protocol": "tcp",
              },
            ],
          },
          {
            "Command": [
              "/bin/sh",
              "-c",
              "psql -c "INSERT INTO cloudquery_table_frequency VALUES ('aws_rds_instances', 'DAILY'),('aws_rds_clusters', 'DAILY'),('aws_rds_db_snapshots', 'DAILY'),('aws_rds_cluster_snapshots', 'DAILY') ON CONFLICT (table_name) DO UPDATE SET frequency = 'DAILY'"",
            ],
            "DockerLabels": {
              "App": "service-catalogue",
              "Name": "OrgWideRDS",
              "Stack": "deploy",
              "Stage": "TEST",
            },
            "EntryPoint": [
              "",
            ],
            "Essential": false,
            "Image": "public.ecr.aws/docker/library/postgres:16-alpine",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "Name": "CloudquerySource-OrgWideRDSPostgresContainer",
            "Secrets": [
              {
                "Name": "PGUSER",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              {
                "Name": "PGHOST",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              {
                "Name": "PGPASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
            ],
          },
          {
            "Environment": [
              {
                "Name": "STACK",
                "Value": "deploy",
              },
              {
                "Name": "STAGE",
                "Value": "TEST",
              },
              {
                "Name": "APP",
                "Value": "service-catalogue",
              },
              {
                "Name": "GU_REPO",
                "Value": "guardian/service-catalogue",
              },
            ],
            "Essential": true,
            "FirelensConfiguration": {
              "Type": "fluentbit",
            },
            "Image": "ghcr.io/guardian/devx-logs:2",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "CloudquerySourceOrgWideRDSTaskDefinitionCloudquerySourceOrgWideRDSFirelensLogGroup1324D19F",
                },
                "awslogs-region": {
                  "Ref": "AWS::Region",
                },
                "awslogs-stream-prefix": "deploy/TEST/service-catalogue",
              },
            },
            "Name": "CloudquerySource-OrgWideRDSFirelens",
          },
        ],
        "Cpu": "256",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "CloudquerySourceOrgWideRDSTaskDefinitionExecutionRole419A7267",
            "Arn",
          ],
        },
        "Family": "ServiceCatalogueCloudquerySourceOrgWideRDSTaskDefinition382DCCB0",
        "Memory": "512",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE",
        ],
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "OrgWideRDS",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "servicecatalogueTESTtaskOrgWideRDS66AC88D6",
            "Arn",
          ],
        },
        "Volumes": [
          {
            "Name": "config-volume",
          },
          {
            "Name": "cloudquery-volume",
          },
          {
            "Name": "tmp-volume",
          },
        ],
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "CloudquerySourceOrgWideS3ScheduledEventRuleB310F050": {
      "Properties": {
        "ScheduleExpression": "cron(0 4 * * ? *)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "servicecatalogueCluster5FC34DC5",
                "Arn",
              ],
            },
            "EcsParameters": {
              "LaunchType": "FARGATE",
              "NetworkConfiguration": {
                "AwsVpcConfiguration": {
                  "AssignPublicIp": "DISABLED",
                  "SecurityGroups": [
                    {
                      "Fn::GetAtt": [
                        "PostgresAccessSecurityGroupServicecatalogue03C78F14",
                        "GroupId",
                      ],
                    },
                  ],
                  "Subnets": {
                    "Ref": "PrivateSubnets",
                  },
                },
              },
              "PropagateTags": "TASK_DEFINITION",
              "TaskCount": 1,
              "TaskDefinitionArn": {
                "Ref": "CloudquerySourceOrgWideS3TaskDefinition8B6BA52D",
              },
            },
            "Id": "Target0",
            "Input": "{}",
            "RoleArn": {
              "Fn::GetAtt": [
                "CloudquerySourceOrgWideS3TaskDefinitionEventsRole9E60BBDE",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "CloudquerySourceOrgWideS3TaskDefinition8B6BA52D": {
      "Properties": {
        "ContainerDefinitions": [
          {
            "Command": [
              "/bin/sh",
              "-c",
              "printf 'kind: source
spec:
  name: aws
  path: cloudquery/aws
  version: v23.6.1
  tables:
    - aws_s3*
  destinations:
    - postgresql
  otel_endpoint: 0.0.0.0:4318
  otel_endpoint_insecure: true
  spec:
    regions:
      - eu-west-1
      - eu-west-2
      - us-east-1
      - us-east-2
      - us-west-1
      - ap-southeast-2
      - ca-central-1
    org:
      member_role_name: cloudquery-access
      organization_units:
        - ou-123
' > /data/source.yaml;printf 'kind: destination
spec:
  name: postgresql
  registry: github
  path: cloudquery/postgresql
  version: v7.2.0
  migrate_mode: forced
  spec:
    connection_string: >-
      user=\${DB_USERNAME} password=\${DB_PASSWORD} host=\${DB_HOST} port=5432
      dbname=postgres sslmode=verify-full
' > /data/destination.yaml;/app/cloudquery sync /data/source.yaml /data/destination.yaml --log-format json --log-console --no-log-file",
            ],
            "DependsOn": [
              {
                "Condition": "HEALTHY",
                "ContainerName": "CloudquerySource-OrgWideS3AWSOTELCollector",
              },
            ],
            "DockerLabels": {
              "App": "service-catalogue",
              "Name": "OrgWideS3",
              "Stack": "deploy",
              "Stage": "TEST",
            },
            "EntryPoint": [
              "",
            ],
            "Environment": [
              {
                "Name": "GOMEMLIMIT",
                "Value": "409MiB",
              },
            ],
            "Essential": true,
            "Image": "ghcr.io/guardian/service-catalogue/cloudquery:sha-0f2713edae5157260cfbf4eaa1f2d682e980fe7e",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "MountPoints": [
              {
                "ContainerPath": "/data",
                "ReadOnly": false,
                "SourceVolume": "config-volume",
              },
              {
                "ContainerPath": "/app/.cq",
                "ReadOnly": false,
                "SourceVolume": "cloudquery-volume",
              },
              {
                "ContainerPath": "/tmp",
                "ReadOnly": false,
                "SourceVolume": "tmp-volume",
              },
            ],
            "Name": "CloudquerySource-OrgWideS3Container",
            "ReadonlyRootFilesystem": true,
            "Secrets": [
              {
                "Name": "DB_USERNAME",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_HOST",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_PASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
              {
                "Name": "CLOUDQUERY_API_KEY",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "cloudqueryapikeyCCF82F53",
                      },
                      ":api-key::",
                    ],
                  ],
                },
              },
            ],
          },
          {
            "Command": [
              "--config=/etc/ecs/ecs-xray.yaml",
            ],
            "Essential": true,
            "HealthCheck": {
              "Command": [
                "CMD",
                "/healthcheck",
              ],
              "Interval": 5,
              "Retries": 3,
              "Timeout": 5,
            },
            "Image": "public.ecr.aws/aws-observability/aws-otel-collector:v0.35.0",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "Name": "CloudquerySource-OrgWideS3AWSOTELCollector",
            "PortMappings": [
              {
                "ContainerPort": 4318,
                "Protocol": "tcp",
              },
            ],
          },
          {
            "Command": [
              "/bin/sh",
              "-c",
              "psql -c "INSERT INTO cloudquery_table_frequency VALUES ('aws_s3%', 'DAILY') ON CONFLICT (table_name) DO UPDATE SET frequency = 'DAILY'"",
            ],
            "DockerLabels": {
              "App": "service-catalogue",
              "Name": "OrgWideS3",
              "Stack": "deploy",
              "Stage": "TEST",
            },
            "EntryPoint": [
              "",
            ],
            "Essential": false,
            "Image": "public.ecr.aws/docker/library/postgres:16-alpine",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "Name": "CloudquerySource-OrgWideS3PostgresContainer",
            "Secrets": [
              {
                "Name": "PGUSER",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              {
                "Name": "PGHOST",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              {
                "Name": "PGPASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
            ],
          },
          {
            "Environment": [
              {
                "Name": "STACK",
                "Value": "deploy",
              },
              {
                "Name": "STAGE",
                "Value": "TEST",
              },
              {
                "Name": "APP",
                "Value": "service-catalogue",
              },
              {
                "Name": "GU_REPO",
                "Value": "guardian/service-catalogue",
              },
            ],
            "Essential": true,
            "FirelensConfiguration": {
              "Type": "fluentbit",
            },
            "Image": "ghcr.io/guardian/devx-logs:2",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "CloudquerySourceOrgWideS3TaskDefinitionCloudquerySourceOrgWideS3FirelensLogGroupF8BCB6DF",
                },
                "awslogs-region": {
                  "Ref": "AWS::Region",
                },
                "awslogs-stream-prefix": "deploy/TEST/service-catalogue",
              },
            },
            "Name": "CloudquerySource-OrgWideS3Firelens",
          },
        ],
        "Cpu": "256",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "CloudquerySourceOrgWideS3TaskDefinitionExecutionRole4F6DD2B0",
            "Arn",
          ],
        },
        "Family": "ServiceCatalogueCloudquerySourceOrgWideS3TaskDefinition7DEB6275",
        "Memory": "512",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE",
        ],
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "OrgWideS3",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "servicecatalogueTESTtaskOrgWideS36081636C",
            "Arn",
          ],
        },
        "Volumes": [
          {
            "Name": "config-volume",
          },
          {
            "Name": "cloudquery-volume",
          },
          {
            "Name": "tmp-volume",
          },
        ],
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "CloudquerySourceOrgWideS3TaskDefinitionCloudquerySourceOrgWideS3FirelensLogGroupF8BCB6DF": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionInDays": 1,
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "OrgWideS3",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "CloudquerySourceOrgWideS3TaskDefinitionEventsRole9E60BBDE": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "OrgWideS3",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceOrgWideS3TaskDefinitionEventsRoleDefaultPolicy214D9C1E": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ecs:RunTask",
              "Condition": {
                "ArnEquals": {
                  "ecs:cluster": {
                    "Fn::GetAtt": [
                      "servicecatalogueCluster5FC34DC5",
                      "Arn",
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Resource": {
                "Ref": "CloudquerySourceOrgWideS3TaskDefinition8B6BA52D",
              },
            },
            {
              "Action": "ecs:TagResource",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ecs:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":*:task/",
                    {
                      "Ref": "servicecatalogueCluster5FC34DC5",
                    },
                    "/*",
                  ],
                ],
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceOrgWideS3TaskDefinitionExecutionRole4F6DD2B0",
                  "Arn",
                ],
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "servicecatalogueTESTtaskOrgWideS36081636C",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceOrgWideS3TaskDefinitionEventsRoleDefaultPolicy214D9C1E",
        "Roles": [
          {
            "Ref": "CloudquerySourceOrgWideS3TaskDefinitionEventsRole9E60BBDE",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceOrgWideS3TaskDefinitionExecutionRole4F6DD2B0": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "OrgWideS3",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceOrgWideS3TaskDefinitionExecutionRoleDefaultPolicy6874A226": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
              },
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "cloudqueryapikeyCCF82F53",
              },
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceOrgWideS3TaskDefinitionCloudquerySourceOrgWideS3FirelensLogGroupF8BCB6DF",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceOrgWideS3TaskDefinitionExecutionRoleDefaultPolicy6874A226",
        "Roles": [
          {
            "Ref": "CloudquerySourceOrgWideS3TaskDefinitionExecutionRole4F6DD2B0",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceRemainingAwsDataScheduledEventRuleAE2A0ED1": {
      "Properties": {
        "ScheduleExpression": "cron(0 16 ? * SAT *)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "servicecatalogueCluster5FC34DC5",
                "Arn",
              ],
            },
            "EcsParameters": {
              "LaunchType": "FARGATE",
              "NetworkConfiguration": {
                "AwsVpcConfiguration": {
                  "AssignPublicIp": "DISABLED",
                  "SecurityGroups": [
                    {
                      "Fn::GetAtt": [
                        "PostgresAccessSecurityGroupServicecatalogue03C78F14",
                        "GroupId",
                      ],
                    },
                  ],
                  "Subnets": {
                    "Ref": "PrivateSubnets",
                  },
                },
              },
              "PropagateTags": "TASK_DEFINITION",
              "TaskCount": 1,
              "TaskDefinitionArn": {
                "Ref": "CloudquerySourceRemainingAwsDataTaskDefinition8790EDD9",
              },
            },
            "Id": "Target0",
            "Input": "{}",
            "RoleArn": {
              "Fn::GetAtt": [
                "CloudquerySourceRemainingAwsDataTaskDefinitionEventsRole7E7383AF",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "CloudquerySourceRemainingAwsDataTaskDefinition8790EDD9": {
      "Properties": {
        "ContainerDefinitions": [
          {
            "Command": [
              "/bin/sh",
              "-c",
              "printf 'kind: source
spec:
  name: aws
  path: cloudquery/aws
  version: v23.6.1
  tables:
    - aws_*
  skip_tables:
    - aws_ec2_vpc_endpoint_services
    - aws_cloudtrail_events
    - aws_docdb_cluster_parameter_groups
    - aws_docdb_engine_versions
    - aws_ec2_instance_types
    - aws_elasticache_engine_versions
    - aws_elasticache_parameter_groups
    - aws_elasticache_reserved_cache_nodes_offerings
    - aws_elasticache_service_updates
    - aws_emr_supported_instance_types
    - aws_neptune_cluster_parameter_groups
    - aws_neptune_db_parameter_groups
    - aws_rds_cluster_parameter_groups
    - aws_rds_db_parameter_groups
    - aws_rds_engine_versions
    - aws_servicequotas_services
    - aws_identitystore_users
    - aws_identitystore_groups
    - aws_quicksight_data_sets
    - aws_quicksight_dashboards
    - aws_quicksight_analyses
    - aws_quicksight_users
    - aws_quicksight_templates
    - aws_quicksight_groups
    - aws_quicksight_folders
    - aws_quicksight_data_sources
    - aws_amp_workspaces
    - aws_ssoadmin_instances
    - aws_glue_connections
    - aws_computeoptimizer_ecs_service_recommendations
    - aws_xray_sampling_rules
    - aws_xray_resource_policies
    - aws_xray_groups
    - aws_wellarchitected_*
    - aws_stepfunctions_map_runs
    - aws_stepfunctions_map_run_executions
    - aws_stepfunctions_executions
    - aws_organization*
    - aws_accessanalyzer_*
    - aws_securityhub_*
    - aws_cloudformation_*
    - aws_costexplorer_*
    - aws_elbv1_*
    - aws_elbv2_*
    - aws_autoscaling_groups
    - aws_acm*
    - aws_cloudwatch_alarms
    - aws_inspector_findings
    - aws_inspector2_findings
    - aws_s3*
    - aws_dynamodb*
    - aws_rds_instances
    - aws_rds_clusters
    - aws_rds_db_snapshots
    - aws_rds_cluster_snapshots
    - aws_backup_protected_resources
    - aws_backup_vaults
    - aws_backup_vault_recovery_points
    - aws_ec2_instances
    - aws_ec2_security_groups
    - aws_ec2_images
  destinations:
    - postgresql
  otel_endpoint: 0.0.0.0:4318
  otel_endpoint_insecure: true
  spec:
    concurrency: 2000
    regions:
      - eu-west-1
      - eu-west-2
      - us-east-1
      - us-east-2
      - us-west-1
      - ap-southeast-2
      - ca-central-1
    org:
      member_role_name: cloudquery-access
      organization_units:
        - ou-123
' > /data/source.yaml;printf 'kind: destination
spec:
  name: postgresql
  registry: github
  path: cloudquery/postgresql
  version: v7.2.0
  migrate_mode: forced
  spec:
    connection_string: >-
      user=\${DB_USERNAME} password=\${DB_PASSWORD} host=\${DB_HOST} port=5432
      dbname=postgres sslmode=verify-full
' > /data/destination.yaml;/app/cloudquery sync /data/source.yaml /data/destination.yaml --log-format json --log-console --no-log-file",
            ],
            "DependsOn": [
              {
                "Condition": "HEALTHY",
                "ContainerName": "CloudquerySource-RemainingAwsDataAWSOTELCollector",
              },
            ],
            "DockerLabels": {
              "App": "service-catalogue",
              "Name": "RemainingAwsData",
              "Stack": "deploy",
              "Stage": "TEST",
            },
            "EntryPoint": [
              "",
            ],
            "Environment": [
              {
                "Name": "GOMEMLIMIT",
                "Value": "1638MiB",
              },
            ],
            "Essential": true,
            "Image": "ghcr.io/guardian/service-catalogue/cloudquery:sha-0f2713edae5157260cfbf4eaa1f2d682e980fe7e",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "MountPoints": [
              {
                "ContainerPath": "/data",
                "ReadOnly": false,
                "SourceVolume": "config-volume",
              },
              {
                "ContainerPath": "/app/.cq",
                "ReadOnly": false,
                "SourceVolume": "cloudquery-volume",
              },
              {
                "ContainerPath": "/tmp",
                "ReadOnly": false,
                "SourceVolume": "tmp-volume",
              },
            ],
            "Name": "CloudquerySource-RemainingAwsDataContainer",
            "ReadonlyRootFilesystem": true,
            "Secrets": [
              {
                "Name": "DB_USERNAME",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_HOST",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_PASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
              {
                "Name": "CLOUDQUERY_API_KEY",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "cloudqueryapikeyCCF82F53",
                      },
                      ":api-key::",
                    ],
                  ],
                },
              },
            ],
          },
          {
            "Command": [
              "--config=/etc/ecs/ecs-xray.yaml",
            ],
            "Essential": true,
            "HealthCheck": {
              "Command": [
                "CMD",
                "/healthcheck",
              ],
              "Interval": 5,
              "Retries": 3,
              "Timeout": 5,
            },
            "Image": "public.ecr.aws/aws-observability/aws-otel-collector:v0.35.0",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "Name": "CloudquerySource-RemainingAwsDataAWSOTELCollector",
            "PortMappings": [
              {
                "ContainerPort": 4318,
                "Protocol": "tcp",
              },
            ],
          },
          {
            "Command": [
              "/bin/sh",
              "-c",
              "psql -c "INSERT INTO cloudquery_table_frequency VALUES ('aws_%', 'WEEKLY') ON CONFLICT (table_name) DO UPDATE SET frequency = 'WEEKLY'"",
            ],
            "DockerLabels": {
              "App": "service-catalogue",
              "Name": "RemainingAwsData",
              "Stack": "deploy",
              "Stage": "TEST",
            },
            "EntryPoint": [
              "",
            ],
            "Essential": false,
            "Image": "public.ecr.aws/docker/library/postgres:16-alpine",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "Name": "CloudquerySource-RemainingAwsDataPostgresContainer",
            "Secrets": [
              {
                "Name": "PGUSER",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              {
                "Name": "PGHOST",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              {
                "Name": "PGPASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
            ],
          },
          {
            "Environment": [
              {
                "Name": "STACK",
                "Value": "deploy",
              },
              {
                "Name": "STAGE",
                "Value": "TEST",
              },
              {
                "Name": "APP",
                "Value": "service-catalogue",
              },
              {
                "Name": "GU_REPO",
                "Value": "guardian/service-catalogue",
              },
            ],
            "Essential": true,
            "FirelensConfiguration": {
              "Type": "fluentbit",
            },
            "Image": "ghcr.io/guardian/devx-logs:2",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "CloudquerySourceRemainingAwsDataTaskDefinitionCloudquerySourceRemainingAwsDataFirelensLogGroupBC28DA66",
                },
                "awslogs-region": {
                  "Ref": "AWS::Region",
                },
                "awslogs-stream-prefix": "deploy/TEST/service-catalogue",
              },
            },
            "Name": "CloudquerySource-RemainingAwsDataFirelens",
          },
        ],
        "Cpu": "1024",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "CloudquerySourceRemainingAwsDataTaskDefinitionExecutionRoleDC6B9AB5",
            "Arn",
          ],
        },
        "Family": "ServiceCatalogueCloudquerySourceRemainingAwsDataTaskDefinitionE7E84FF0",
        "Memory": "2048",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE",
        ],
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "RemainingAwsData",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "servicecatalogueTESTtaskRemainingAwsData87C45AB6",
            "Arn",
          ],
        },
        "Volumes": [
          {
            "Name": "config-volume",
          },
          {
            "Name": "cloudquery-volume",
          },
          {
            "Name": "tmp-volume",
          },
        ],
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "CloudquerySourceRemainingAwsDataTaskDefinitionCloudquerySourceRemainingAwsDataFirelensLogGroupBC28DA66": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionInDays": 1,
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "RemainingAwsData",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "CloudquerySourceRemainingAwsDataTaskDefinitionEventsRole7E7383AF": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "RemainingAwsData",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceRemainingAwsDataTaskDefinitionEventsRoleDefaultPolicyEA0EC3BA": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ecs:RunTask",
              "Condition": {
                "ArnEquals": {
                  "ecs:cluster": {
                    "Fn::GetAtt": [
                      "servicecatalogueCluster5FC34DC5",
                      "Arn",
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Resource": {
                "Ref": "CloudquerySourceRemainingAwsDataTaskDefinition8790EDD9",
              },
            },
            {
              "Action": "ecs:TagResource",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ecs:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":*:task/",
                    {
                      "Ref": "servicecatalogueCluster5FC34DC5",
                    },
                    "/*",
                  ],
                ],
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceRemainingAwsDataTaskDefinitionExecutionRoleDC6B9AB5",
                  "Arn",
                ],
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "servicecatalogueTESTtaskRemainingAwsData87C45AB6",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceRemainingAwsDataTaskDefinitionEventsRoleDefaultPolicyEA0EC3BA",
        "Roles": [
          {
            "Ref": "CloudquerySourceRemainingAwsDataTaskDefinitionEventsRole7E7383AF",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceRemainingAwsDataTaskDefinitionExecutionRoleDC6B9AB5": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "RemainingAwsData",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceRemainingAwsDataTaskDefinitionExecutionRoleDefaultPolicyA56237EA": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
              },
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "cloudqueryapikeyCCF82F53",
              },
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceRemainingAwsDataTaskDefinitionCloudquerySourceRemainingAwsDataFirelensLogGroupBC28DA66",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceRemainingAwsDataTaskDefinitionExecutionRoleDefaultPolicyA56237EA",
        "Roles": [
          {
            "Ref": "CloudquerySourceRemainingAwsDataTaskDefinitionExecutionRoleDC6B9AB5",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceRiffRaffDataScheduledEventRuleDE690018": {
      "Properties": {
        "ScheduleExpression": "cron(0 0 * * ? *)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "servicecatalogueCluster5FC34DC5",
                "Arn",
              ],
            },
            "EcsParameters": {
              "LaunchType": "FARGATE",
              "NetworkConfiguration": {
                "AwsVpcConfiguration": {
                  "AssignPublicIp": "DISABLED",
                  "SecurityGroups": [
                    {
                      "Fn::GetAtt": [
                        "PostgresAccessSecurityGroupServicecatalogue03C78F14",
                        "GroupId",
                      ],
                    },
                    {
                      "Ref": "SsmParameterValueTESTdeployriffraffexternaldatabaseaccesssecuritygroupC96584B6F00A464EAD1953AFF4B05118Parameter",
                    },
                  ],
                  "Subnets": {
                    "Ref": "PrivateSubnets",
                  },
                },
              },
              "PropagateTags": "TASK_DEFINITION",
              "TaskCount": 1,
              "TaskDefinitionArn": {
                "Ref": "CloudquerySourceRiffRaffDataTaskDefinitionFF023225",
              },
            },
            "Id": "Target0",
            "Input": "{}",
            "RoleArn": {
              "Fn::GetAtt": [
                "CloudquerySourceRiffRaffDataTaskDefinitionEventsRole5EF6E214",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "CloudquerySourceRiffRaffDataTaskDefinitionCloudquerySourceRiffRaffDataFirelensLogGroup55CB2F37": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionInDays": 1,
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "RiffRaffData",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "CloudquerySourceRiffRaffDataTaskDefinitionEventsRole5EF6E214": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "RiffRaffData",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceRiffRaffDataTaskDefinitionEventsRoleDefaultPolicyAD8B28A1": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ecs:RunTask",
              "Condition": {
                "ArnEquals": {
                  "ecs:cluster": {
                    "Fn::GetAtt": [
                      "servicecatalogueCluster5FC34DC5",
                      "Arn",
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Resource": {
                "Ref": "CloudquerySourceRiffRaffDataTaskDefinitionFF023225",
              },
            },
            {
              "Action": "ecs:TagResource",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ecs:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":*:task/",
                    {
                      "Ref": "servicecatalogueCluster5FC34DC5",
                    },
                    "/*",
                  ],
                ],
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceRiffRaffDataTaskDefinitionExecutionRole18EFA1E2",
                  "Arn",
                ],
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "servicecatalogueTESTtaskRiffRaffDataC9A39FC8",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceRiffRaffDataTaskDefinitionEventsRoleDefaultPolicyAD8B28A1",
        "Roles": [
          {
            "Ref": "CloudquerySourceRiffRaffDataTaskDefinitionEventsRole5EF6E214",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceRiffRaffDataTaskDefinitionExecutionRole18EFA1E2": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "RiffRaffData",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceRiffRaffDataTaskDefinitionExecutionRoleDefaultPolicyA6FD732F": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "RiffRaffDatabaseCredentials2033FD7A",
              },
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
              },
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "cloudqueryapikeyCCF82F53",
              },
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceRiffRaffDataTaskDefinitionCloudquerySourceRiffRaffDataFirelensLogGroup55CB2F37",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceRiffRaffDataTaskDefinitionExecutionRoleDefaultPolicyA6FD732F",
        "Roles": [
          {
            "Ref": "CloudquerySourceRiffRaffDataTaskDefinitionExecutionRole18EFA1E2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceRiffRaffDataTaskDefinitionFF023225": {
      "Properties": {
        "ContainerDefinitions": [
          {
            "Command": [
              "/bin/sh",
              "-c",
              "printf 'kind: source
spec:
  name: postgresql
  path: cloudquery/postgresql
  version: v3.0.7
  destinations:
    - postgresql
  tables:
    - riffraff_*
  skip_tables:
    - riffraff_deploy_logs
  spec:
    connection_string: >-
      user=\${RIFFRAFF_DB_USERNAME} password=\${RIFFRAFF_DB_PASSWORD}
      host=\${RIFFRAFF_DB_HOST} port=5432 dbname=riffraff sslmode=verify-full
' > /data/source.yaml;printf 'kind: destination
spec:
  name: postgresql
  registry: github
  path: cloudquery/postgresql
  version: v7.2.0
  migrate_mode: forced
  spec:
    connection_string: >-
      user=\${DB_USERNAME} password=\${DB_PASSWORD} host=\${DB_HOST} port=5432
      dbname=postgres sslmode=verify-full
' > /data/destination.yaml;/app/cloudquery sync /data/source.yaml /data/destination.yaml --log-format json --log-console --no-log-file",
            ],
            "DependsOn": [
              {
                "Condition": "HEALTHY",
                "ContainerName": "CloudquerySource-RiffRaffDataAWSOTELCollector",
              },
            ],
            "DockerLabels": {
              "App": "service-catalogue",
              "Name": "RiffRaffData",
              "Stack": "deploy",
              "Stage": "TEST",
            },
            "EntryPoint": [
              "",
            ],
            "Environment": [
              {
                "Name": "GOMEMLIMIT",
                "Value": "409MiB",
              },
            ],
            "Essential": true,
            "Image": "ghcr.io/guardian/service-catalogue/cloudquery:sha-0f2713edae5157260cfbf4eaa1f2d682e980fe7e",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "MountPoints": [
              {
                "ContainerPath": "/data",
                "ReadOnly": false,
                "SourceVolume": "config-volume",
              },
              {
                "ContainerPath": "/app/.cq",
                "ReadOnly": false,
                "SourceVolume": "cloudquery-volume",
              },
              {
                "ContainerPath": "/tmp",
                "ReadOnly": false,
                "SourceVolume": "tmp-volume",
              },
            ],
            "Name": "CloudquerySource-RiffRaffDataContainer",
            "ReadonlyRootFilesystem": true,
            "Secrets": [
              {
                "Name": "RIFFRAFF_DB_USERNAME",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "RiffRaffDatabaseCredentials2033FD7A",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              {
                "Name": "RIFFRAFF_DB_PASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "RiffRaffDatabaseCredentials2033FD7A",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
              {
                "Name": "RIFFRAFF_DB_HOST",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "RiffRaffDatabaseCredentials2033FD7A",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_USERNAME",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_HOST",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_PASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
              {
                "Name": "CLOUDQUERY_API_KEY",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "cloudqueryapikeyCCF82F53",
                      },
                      ":api-key::",
                    ],
                  ],
                },
              },
            ],
          },
          {
            "Command": [
              "--config=/etc/ecs/ecs-xray.yaml",
            ],
            "Essential": true,
            "HealthCheck": {
              "Command": [
                "CMD",
                "/healthcheck",
              ],
              "Interval": 5,
              "Retries": 3,
              "Timeout": 5,
            },
            "Image": "public.ecr.aws/aws-observability/aws-otel-collector:v0.35.0",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "Name": "CloudquerySource-RiffRaffDataAWSOTELCollector",
            "PortMappings": [
              {
                "ContainerPort": 4318,
                "Protocol": "tcp",
              },
            ],
          },
          {
            "Command": [
              "/bin/sh",
              "-c",
              "psql -c "INSERT INTO cloudquery_table_frequency VALUES ('riffraff_%', 'DAILY') ON CONFLICT (table_name) DO UPDATE SET frequency = 'DAILY'"",
            ],
            "DockerLabels": {
              "App": "service-catalogue",
              "Name": "RiffRaffData",
              "Stack": "deploy",
              "Stage": "TEST",
            },
            "EntryPoint": [
              "",
            ],
            "Essential": false,
            "Image": "public.ecr.aws/docker/library/postgres:16-alpine",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "Name": "CloudquerySource-RiffRaffDataPostgresContainer",
            "Secrets": [
              {
                "Name": "PGUSER",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              {
                "Name": "PGHOST",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              {
                "Name": "PGPASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
            ],
          },
          {
            "Environment": [
              {
                "Name": "STACK",
                "Value": "deploy",
              },
              {
                "Name": "STAGE",
                "Value": "TEST",
              },
              {
                "Name": "APP",
                "Value": "service-catalogue",
              },
              {
                "Name": "GU_REPO",
                "Value": "guardian/service-catalogue",
              },
            ],
            "Essential": true,
            "FirelensConfiguration": {
              "Type": "fluentbit",
            },
            "Image": "ghcr.io/guardian/devx-logs:2",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "CloudquerySourceRiffRaffDataTaskDefinitionCloudquerySourceRiffRaffDataFirelensLogGroup55CB2F37",
                },
                "awslogs-region": {
                  "Ref": "AWS::Region",
                },
                "awslogs-stream-prefix": "deploy/TEST/service-catalogue",
              },
            },
            "Name": "CloudquerySource-RiffRaffDataFirelens",
          },
        ],
        "Cpu": "256",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "CloudquerySourceRiffRaffDataTaskDefinitionExecutionRole18EFA1E2",
            "Arn",
          ],
        },
        "Family": "ServiceCatalogueCloudquerySourceRiffRaffDataTaskDefinitionD52C3076",
        "Memory": "512",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE",
        ],
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "RiffRaffData",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "servicecatalogueTESTtaskRiffRaffDataC9A39FC8",
            "Arn",
          ],
        },
        "Volumes": [
          {
            "Name": "config-volume",
          },
          {
            "Name": "cloudquery-volume",
          },
          {
            "Name": "tmp-volume",
          },
        ],
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "CloudquerySourceSnykAllScheduledEventRule73601A00": {
      "Properties": {
        "ScheduleExpression": "cron(0 6 * * ? *)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "servicecatalogueCluster5FC34DC5",
                "Arn",
              ],
            },
            "EcsParameters": {
              "LaunchType": "FARGATE",
              "NetworkConfiguration": {
                "AwsVpcConfiguration": {
                  "AssignPublicIp": "DISABLED",
                  "SecurityGroups": [
                    {
                      "Fn::GetAtt": [
                        "PostgresAccessSecurityGroupServicecatalogue03C78F14",
                        "GroupId",
                      ],
                    },
                  ],
                  "Subnets": {
                    "Ref": "PrivateSubnets",
                  },
                },
              },
              "PropagateTags": "TASK_DEFINITION",
              "TaskCount": 1,
              "TaskDefinitionArn": {
                "Ref": "CloudquerySourceSnykAllTaskDefinitionC8C1F3EC",
              },
            },
            "Id": "Target0",
            "Input": "{}",
            "RoleArn": {
              "Fn::GetAtt": [
                "CloudquerySourceSnykAllTaskDefinitionEventsRoleCC78F3D4",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "CloudquerySourceSnykAllTaskDefinitionC8C1F3EC": {
      "Properties": {
        "ContainerDefinitions": [
          {
            "Command": [
              "/bin/sh",
              "-c",
              "printf 'kind: source
spec:
  name: snyk
  path: cloudquery/snyk
  version: v5.3.0
  tables:
    - snyk_issues
    - snyk_organizations
    - snyk_projects
    - snyk_sbom
  skip_tables: []
  destinations:
    - postgresql
  spec:
    api_key: \${SNYK_API_KEY}
' > /data/source.yaml;printf 'kind: destination
spec:
  name: postgresql
  registry: github
  path: cloudquery/postgresql
  version: v7.2.0
  migrate_mode: forced
  spec:
    connection_string: >-
      user=\${DB_USERNAME} password=\${DB_PASSWORD} host=\${DB_HOST} port=5432
      dbname=postgres sslmode=verify-full
' > /data/destination.yaml;/app/cloudquery sync /data/source.yaml /data/destination.yaml --log-format json --log-console --no-log-file",
            ],
            "DependsOn": [
              {
                "Condition": "HEALTHY",
                "ContainerName": "CloudquerySource-SnykAllAWSOTELCollector",
              },
            ],
            "DockerLabels": {
              "App": "service-catalogue",
              "Name": "SnykAll",
              "Stack": "deploy",
              "Stage": "TEST",
            },
            "EntryPoint": [
              "",
            ],
            "Environment": [
              {
                "Name": "GOMEMLIMIT",
                "Value": "819MiB",
              },
            ],
            "Essential": true,
            "Image": "ghcr.io/guardian/service-catalogue/cloudquery:sha-0f2713edae5157260cfbf4eaa1f2d682e980fe7e",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "MountPoints": [
              {
                "ContainerPath": "/data",
                "ReadOnly": false,
                "SourceVolume": "config-volume",
              },
              {
                "ContainerPath": "/app/.cq",
                "ReadOnly": false,
                "SourceVolume": "cloudquery-volume",
              },
              {
                "ContainerPath": "/tmp",
                "ReadOnly": false,
                "SourceVolume": "tmp-volume",
              },
            ],
            "Name": "CloudquerySource-SnykAllContainer",
            "ReadonlyRootFilesystem": true,
            "Secrets": [
              {
                "Name": "SNYK_API_KEY",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "snykcredentials4D951A18",
                      },
                      ":api-key::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_USERNAME",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_HOST",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_PASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
              {
                "Name": "CLOUDQUERY_API_KEY",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "cloudqueryapikeyCCF82F53",
                      },
                      ":api-key::",
                    ],
                  ],
                },
              },
            ],
          },
          {
            "Command": [
              "--config=/etc/ecs/ecs-xray.yaml",
            ],
            "Essential": true,
            "HealthCheck": {
              "Command": [
                "CMD",
                "/healthcheck",
              ],
              "Interval": 5,
              "Retries": 3,
              "Timeout": 5,
            },
            "Image": "public.ecr.aws/aws-observability/aws-otel-collector:v0.35.0",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "Name": "CloudquerySource-SnykAllAWSOTELCollector",
            "PortMappings": [
              {
                "ContainerPort": 4318,
                "Protocol": "tcp",
              },
            ],
          },
          {
            "Command": [
              "/bin/sh",
              "-c",
              "psql -c "INSERT INTO cloudquery_table_frequency VALUES ('snyk_issues', 'DAILY'),('snyk_organizations', 'DAILY'),('snyk_projects', 'DAILY'),('snyk_sbom', 'DAILY') ON CONFLICT (table_name) DO UPDATE SET frequency = 'DAILY'"",
            ],
            "DockerLabels": {
              "App": "service-catalogue",
              "Name": "SnykAll",
              "Stack": "deploy",
              "Stage": "TEST",
            },
            "EntryPoint": [
              "",
            ],
            "Essential": false,
            "Image": "public.ecr.aws/docker/library/postgres:16-alpine",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "Name": "CloudquerySource-SnykAllPostgresContainer",
            "Secrets": [
              {
                "Name": "PGUSER",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              {
                "Name": "PGHOST",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              {
                "Name": "PGPASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
            ],
          },
          {
            "Environment": [
              {
                "Name": "STACK",
                "Value": "deploy",
              },
              {
                "Name": "STAGE",
                "Value": "TEST",
              },
              {
                "Name": "APP",
                "Value": "service-catalogue",
              },
              {
                "Name": "GU_REPO",
                "Value": "guardian/service-catalogue",
              },
            ],
            "Essential": true,
            "FirelensConfiguration": {
              "Type": "fluentbit",
            },
            "Image": "ghcr.io/guardian/devx-logs:2",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "CloudquerySourceSnykAllTaskDefinitionCloudquerySourceSnykAllFirelensLogGroupB81AA085",
                },
                "awslogs-region": {
                  "Ref": "AWS::Region",
                },
                "awslogs-stream-prefix": "deploy/TEST/service-catalogue",
              },
            },
            "Name": "CloudquerySource-SnykAllFirelens",
          },
        ],
        "Cpu": "256",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "CloudquerySourceSnykAllTaskDefinitionExecutionRoleBE6C1050",
            "Arn",
          ],
        },
        "Family": "ServiceCatalogueCloudquerySourceSnykAllTaskDefinitionBFF67A0E",
        "Memory": "1024",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE",
        ],
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "SnykAll",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "servicecatalogueTESTtaskSnykAllF4EB95EB",
            "Arn",
          ],
        },
        "Volumes": [
          {
            "Name": "config-volume",
          },
          {
            "Name": "cloudquery-volume",
          },
          {
            "Name": "tmp-volume",
          },
        ],
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "CloudquerySourceSnykAllTaskDefinitionCloudquerySourceSnykAllFirelensLogGroupB81AA085": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionInDays": 1,
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "SnykAll",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "CloudquerySourceSnykAllTaskDefinitionEventsRoleCC78F3D4": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "SnykAll",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceSnykAllTaskDefinitionEventsRoleDefaultPolicy9851E7F3": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ecs:RunTask",
              "Condition": {
                "ArnEquals": {
                  "ecs:cluster": {
                    "Fn::GetAtt": [
                      "servicecatalogueCluster5FC34DC5",
                      "Arn",
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Resource": {
                "Ref": "CloudquerySourceSnykAllTaskDefinitionC8C1F3EC",
              },
            },
            {
              "Action": "ecs:TagResource",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ecs:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":*:task/",
                    {
                      "Ref": "servicecatalogueCluster5FC34DC5",
                    },
                    "/*",
                  ],
                ],
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceSnykAllTaskDefinitionExecutionRoleBE6C1050",
                  "Arn",
                ],
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "servicecatalogueTESTtaskSnykAllF4EB95EB",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceSnykAllTaskDefinitionEventsRoleDefaultPolicy9851E7F3",
        "Roles": [
          {
            "Ref": "CloudquerySourceSnykAllTaskDefinitionEventsRoleCC78F3D4",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceSnykAllTaskDefinitionExecutionRoleBE6C1050": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "SnykAll",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceSnykAllTaskDefinitionExecutionRoleDefaultPolicyCC076BFE": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "snykcredentials4D951A18",
              },
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
              },
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "cloudqueryapikeyCCF82F53",
              },
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceSnykAllTaskDefinitionCloudquerySourceSnykAllFirelensLogGroupB81AA085",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceSnykAllTaskDefinitionExecutionRoleDefaultPolicyCC076BFE",
        "Roles": [
          {
            "Ref": "CloudquerySourceSnykAllTaskDefinitionExecutionRoleBE6C1050",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DataAudit2FEB3068": {
      "DependsOn": [
        "DataAuditRoleDefaultPolicyD0BF34E5",
        "DataAuditRoleB3B90C40",
      ],
      "Properties": {
        "Architectures": [
          "arm64",
        ],
        "Code": {
          "S3Bucket": {
            "Ref": "DistributionBucketName",
          },
          "S3Key": "deploy/TEST/data-audit/data-audit.zip",
        },
        "Environment": {
          "Variables": {
            "APP": "data-audit",
            "DATABASE_HOSTNAME": {
              "Fn::GetAtt": [
                "PostgresInstance16DE4286E",
                "Endpoint.Address",
              ],
            },
            "QUERY_LOGGING": "false",
            "STACK": "deploy",
            "STAGE": "TEST",
          },
        },
        "Handler": "index.main",
        "MemorySize": 512,
        "Role": {
          "Fn::GetAtt": [
            "DataAuditRoleB3B90C40",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
        "Tags": [
          {
            "Key": "App",
            "Value": "data-audit",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "Timeout": 600,
        "VpcConfig": {
          "SecurityGroupIds": [
            {
              "Fn::GetAtt": [
                "PostgresAccessSecurityGroupServicecatalogue03C78F14",
                "GroupId",
              ],
            },
          ],
          "SubnetIds": {
            "Ref": "PrivateSubnets",
          },
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "DataAuditDataAuditrate1day015E5BEEB": {
      "Properties": {
        "ScheduleExpression": "rate(1 day)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "DataAudit2FEB3068",
                "Arn",
              ],
            },
            "Id": "Target0",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "DataAuditDataAuditrate1day0AllowEventRuleServiceCatalogueDataAudit9CC2131ED1368FFF": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "DataAudit2FEB3068",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "DataAuditDataAuditrate1day015E5BEEB",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DataAuditRoleB3B90C40": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          "arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole",
        ],
        "RoleName": "service-catalogue-data-audit-TEST",
        "Tags": [
          {
            "Key": "App",
            "Value": "data-audit",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "DataAuditRoleDefaultPolicyD0BF34E5": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      {
                        "Ref": "DistributionBucketName",
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      {
                        "Ref": "DistributionBucketName",
                      },
                      "/deploy/TEST/data-audit/data-audit.zip",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "ssm:GetParametersByPath",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:ssm:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/TEST/deploy/data-audit",
                  ],
                ],
              },
            },
            {
              "Action": [
                "ssm:GetParameters",
                "ssm:GetParameter",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:ssm:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/TEST/deploy/data-audit/*",
                  ],
                ],
              },
            },
            {
              "Action": "rds-db:connect",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":rds-db:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":dbuser:",
                    {
                      "Fn::GetAtt": [
                        "PostgresInstance16DE4286E",
                        "DbiResourceId",
                      ],
                    },
                    "/dataaudit",
                  ],
                ],
              },
            },
            {
              "Action": "organizations:List*",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": "arn:aws:iam::*:role/cloudquery-access",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DataAuditRoleDefaultPolicyD0BF34E5",
        "Roles": [
          {
            "Ref": "DataAuditRoleB3B90C40",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "GithubActionsUsageAC7E0411": {
      "DependsOn": [
        "GithubActionsUsageServiceRoleDefaultPolicyBFE2CD5F",
        "GithubActionsUsageServiceRole782ABC41",
      ],
      "Properties": {
        "Architectures": [
          "arm64",
        ],
        "Code": {
          "S3Bucket": {
            "Ref": "DistributionBucketName",
          },
          "S3Key": "deploy/TEST/github-actions-usage/github-actions-usage.zip",
        },
        "Environment": {
          "Variables": {
            "APP": "github-actions-usage",
            "DATABASE_HOSTNAME": {
              "Fn::GetAtt": [
                "PostgresInstance16DE4286E",
                "Endpoint.Address",
              ],
            },
            "QUERY_LOGGING": "false",
            "STACK": "deploy",
            "STAGE": "TEST",
          },
        },
        "Handler": "index.main",
        "MemorySize": 512,
        "Role": {
          "Fn::GetAtt": [
            "GithubActionsUsageServiceRole782ABC41",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
        "Tags": [
          {
            "Key": "App",
            "Value": "github-actions-usage",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "Timeout": 600,
        "VpcConfig": {
          "SecurityGroupIds": [
            {
              "Fn::GetAtt": [
                "PostgresAccessSecurityGroupServicecatalogue03C78F14",
                "GroupId",
              ],
            },
          ],
          "SubnetIds": {
            "Ref": "PrivateSubnets",
          },
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "GithubActionsUsageServiceRole782ABC41": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole",
              ],
            ],
          },
        ],
        "Tags": [
          {
            "Key": "App",
            "Value": "github-actions-usage",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "GithubActionsUsageServiceRoleDefaultPolicyBFE2CD5F": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      {
                        "Ref": "DistributionBucketName",
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      {
                        "Ref": "DistributionBucketName",
                      },
                      "/deploy/TEST/github-actions-usage/github-actions-usage.zip",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "ssm:GetParametersByPath",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:ssm:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/TEST/deploy/github-actions-usage",
                  ],
                ],
              },
            },
            {
              "Action": [
                "ssm:GetParameters",
                "ssm:GetParameter",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:ssm:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/TEST/deploy/github-actions-usage/*",
                  ],
                ],
              },
            },
            {
              "Action": "rds-db:connect",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":rds-db:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":dbuser:",
                    {
                      "Fn::GetAtt": [
                        "PostgresInstance16DE4286E",
                        "DbiResourceId",
                      ],
                    },
                    "/github_actions_usage",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "GithubActionsUsageServiceRoleDefaultPolicyBFE2CD5F",
        "Roles": [
          {
            "Ref": "GithubActionsUsageServiceRole782ABC41",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "PostgresAccessSecurityGroupParam38DFE001": {
      "Properties": {
        "DataType": "text",
        "Name": "/TEST/deploy/service-catalogue/postgres-access-security-group",
        "Tags": {
          "Stack": "deploy",
          "Stage": "TEST",
          "gu:cdk:version": "TEST",
          "gu:repo": "guardian/service-catalogue",
        },
        "Tier": "Standard",
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "PostgresAccessSecurityGroupServicecatalogue03C78F14",
            "GroupId",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "PostgresAccessSecurityGroupServicecatalogue03C78F14": {
      "Properties": {
        "GroupDescription": "ServiceCatalogue/PostgresAccessSecurityGroupServicecatalogue",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "Tags": [
          {
            "Key": "App",
            "Value": "service-catalogue",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "VpcId": {
          "Ref": "VpcId",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "PostgresInstance16DE4286E": {
      "DeletionPolicy": "Snapshot",
      "Properties": {
        "AllocatedStorage": "100",
        "CACertificateIdentifier": "rds-ca-rsa2048-g1",
        "CopyTagsToSnapshot": true,
        "DBInstanceClass": "db.t4g.small",
        "DBSubnetGroupName": {
          "Ref": "PostgresInstance1SubnetGroupCAC045A5",
        },
        "DeletionProtection": true,
        "EnableIAMDatabaseAuthentication": true,
        "Engine": "postgres",
        "MasterUserPassword": {
          "Fn::Join": [
            "",
            [
              "{{resolve:secretsmanager:",
              {
                "Ref": "PostgresInstance1Secret7FA1A24B",
              },
              ":SecretString:password::}}",
            ],
          ],
        },
        "MasterUsername": {
          "Fn::Join": [
            "",
            [
              "{{resolve:secretsmanager:",
              {
                "Ref": "PostgresInstance1Secret7FA1A24B",
              },
              ":SecretString:username::}}",
            ],
          ],
        },
        "MultiAZ": false,
        "Port": "5432",
        "PubliclyAccessible": false,
        "StorageEncrypted": true,
        "StorageType": "gp2",
        "Tags": [
          {
            "Key": "devx-backup-enabled",
            "Value": "true",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "VPCSecurityGroups": [
          {
            "Fn::GetAtt": [
              "PostgresSecurityGroupServicecatalogueD2F089D5",
              "GroupId",
            ],
          },
        ],
      },
      "Type": "AWS::RDS::DBInstance",
      "UpdateReplacePolicy": "Snapshot",
    },
    "PostgresInstance1Secret7FA1A24B": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "Description": {
          "Fn::Join": [
            "",
            [
              "Generated by the CDK for stack: ",
              {
                "Ref": "AWS::StackName",
              },
            ],
          ],
        },
        "GenerateSecretString": {
          "ExcludeCharacters": " %+~\`#$&*()|[]{}:;<>?!'/@"\\",
          "GenerateStringKey": "password",
          "PasswordLength": 30,
          "SecretStringTemplate": "{"username":"postgres"}",
        },
        "Tags": [
          {
            "Key": "devx-backup-enabled",
            "Value": "true",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
    "PostgresInstance1SecretAttachmentBA0D257D": {
      "Properties": {
        "SecretId": {
          "Ref": "PostgresInstance1Secret7FA1A24B",
        },
        "TargetId": {
          "Ref": "PostgresInstance16DE4286E",
        },
        "TargetType": "AWS::RDS::DBInstance",
      },
      "Type": "AWS::SecretsManager::SecretTargetAttachment",
    },
    "PostgresInstance1SubnetGroupCAC045A5": {
      "Properties": {
        "DBSubnetGroupDescription": "Subnet group for PostgresInstance1 database",
        "SubnetIds": {
          "Ref": "PrivateSubnets",
        },
        "Tags": [
          {
            "Key": "devx-backup-enabled",
            "Value": "true",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::RDS::DBSubnetGroup",
    },
    "PostgresInstanceEndpointAddress6E14162C": {
      "Properties": {
        "DataType": "text",
        "Name": "/TEST/deploy/service-catalogue/postgres-instance-endpoint-address",
        "Tags": {
          "Stack": "deploy",
          "Stage": "TEST",
          "gu:cdk:version": "TEST",
          "gu:repo": "guardian/service-catalogue",
        },
        "Tier": "Standard",
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "PostgresInstance16DE4286E",
            "Endpoint.Address",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "PostgresSecurityGroupServicecatalogueD2F089D5": {
      "Properties": {
        "GroupDescription": "ServiceCatalogue/PostgresSecurityGroupServicecatalogue",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": "10.0.0.4/22",
            "Description": "Allow connection to Postgres from the office network.",
            "FromPort": 5432,
            "IpProtocol": "tcp",
            "ToPort": 5432,
          },
        ],
        "Tags": [
          {
            "Key": "App",
            "Value": "service-catalogue",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "VpcId": {
          "Ref": "VpcId",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "PostgresSecurityGroupServicecataloguefromServiceCataloguePostgresAccessSecurityGroupServicecatalogue56F7252C5432A44FF186": {
      "Properties": {
        "Description": "from ServiceCataloguePostgresAccessSecurityGroupServicecatalogue56F7252C:5432",
        "FromPort": 5432,
        "GroupId": {
          "Fn::GetAtt": [
            "PostgresSecurityGroupServicecatalogueD2F089D5",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "PostgresAccessSecurityGroupServicecatalogue03C78F14",
            "GroupId",
          ],
        },
        "ToPort": 5432,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "PrismaMigrateArtifactPutRuleA305B852": {
      "Properties": {
        "EventPattern": {
          "detail": {
            "eventName": [
              "PutObject",
            ],
            "eventSource": [
              "s3.amazonaws.com",
            ],
            "requestParameters": {
              "bucketName": [
                {
                  "Ref": "SsmParameterValueaccountservicesartifactbucketC96584B6F00A464EAD1953AFF4B05118Parameter",
                },
              ],
              "key": [
                "deploy/TEST/service-catalogue-prisma-migrations/prisma.zip",
              ],
            },
          },
          "detail-type": [
            "AWS API Call via CloudTrail",
          ],
          "source": [
            "aws.s3",
          ],
        },
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "servicecatalogueCluster5FC34DC5",
                "Arn",
              ],
            },
            "EcsParameters": {
              "LaunchType": "FARGATE",
              "NetworkConfiguration": {
                "AwsVpcConfiguration": {
                  "AssignPublicIp": "DISABLED",
                  "SecurityGroups": [
                    {
                      "Fn::GetAtt": [
                        "PostgresAccessSecurityGroupServicecatalogue03C78F14",
                        "GroupId",
                      ],
                    },
                  ],
                  "Subnets": {
                    "Ref": "PrivateSubnets",
                  },
                },
              },
              "PropagateTags": "TASK_DEFINITION",
              "TaskCount": 1,
              "TaskDefinitionArn": {
                "Ref": "prismamigratetaskTaskDefinition6CE347DF",
              },
            },
            "Id": "Target0",
            "Input": "{}",
            "RoleArn": {
              "Fn::GetAtt": [
                "prismamigratetaskTaskDefinitionEventsRole980BE1A4",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "RiffRaffDatabaseCredentials2033FD7A": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "GenerateSecretString": {},
        "Name": "/TEST/deploy/service-catalogue/riffraff-database-credentials",
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
    "TopicBFC7AF6E": {
      "Properties": {
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "TopicName": "interactive-monitor-TEST",
      },
      "Type": "AWS::SNS::Topic",
    },
    "branchprotectorgithubappauth4E91892E": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "GenerateSecretString": {},
        "Name": "/TEST/deploy/service-catalogue/branch-protector-github-app-secret",
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
    "cloudqueryapikeyCCF82F53": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "GenerateSecretString": {},
        "Name": "/TEST/deploy/service-catalogue/cloudquery-api-key",
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
    "dependencygraphintegrator508B46FC": {
      "DependsOn": [
        "dependencygraphintegratorServiceRoleDefaultPolicy6EBFEC55",
        "dependencygraphintegratorServiceRole5200A556",
      ],
      "Properties": {
        "Architectures": [
          "arm64",
        ],
        "Code": {
          "S3Bucket": {
            "Ref": "DistributionBucketName",
          },
          "S3Key": "deploy/TEST/dependency-graph-integrator/dependency-graph-integrator.zip",
        },
        "Environment": {
          "Variables": {
            "APP": "dependency-graph-integrator",
            "GITHUB_APP_SECRET": {
              "Ref": "dependencygraphintegratorgithubappauthB8B9DE78",
            },
            "STACK": "deploy",
            "STAGE": "TEST",
          },
        },
        "Handler": "index.handler",
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "dependencygraphintegratorServiceRole5200A556",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
        "Tags": [
          {
            "Key": "App",
            "Value": "dependency-graph-integrator",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "Timeout": 300,
        "VpcConfig": {
          "SecurityGroupIds": [
            {
              "Fn::GetAtt": [
                "dependencygraphintegratorSecurityGroupC8A882C0",
                "GroupId",
              ],
            },
          ],
          "SubnetIds": {
            "Ref": "PrivateSubnets",
          },
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "dependencygraphintegratorAllowInvokeServiceCataloguedependencygraphintegratorinputtopicTESTC360D94D8B8A768E": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "dependencygraphintegrator508B46FC",
            "Arn",
          ],
        },
        "Principal": "sns.amazonaws.com",
        "SourceArn": {
          "Ref": "dependencygraphintegratorinputtopicTESTDAA73A88",
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "dependencygraphintegratorSecurityGroupC8A882C0": {
      "Properties": {
        "GroupDescription": "Automatic security group for Lambda Function ServiceCataloguedependencygraphintegrator6DE43587",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "Tags": [
          {
            "Key": "App",
            "Value": "dependency-graph-integrator",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "VpcId": {
          "Ref": "VpcId",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "dependencygraphintegratorServiceRole5200A556": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole",
              ],
            ],
          },
        ],
        "Tags": [
          {
            "Key": "App",
            "Value": "dependency-graph-integrator",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "dependencygraphintegratorServiceRoleDefaultPolicy6EBFEC55": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      {
                        "Ref": "DistributionBucketName",
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      {
                        "Ref": "DistributionBucketName",
                      },
                      "/deploy/TEST/dependency-graph-integrator/dependency-graph-integrator.zip",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "ssm:GetParametersByPath",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:ssm:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/TEST/deploy/dependency-graph-integrator",
                  ],
                ],
              },
            },
            {
              "Action": [
                "ssm:GetParameters",
                "ssm:GetParameter",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:ssm:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/TEST/deploy/dependency-graph-integrator/*",
                  ],
                ],
              },
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "dependencygraphintegratorgithubappauthB8B9DE78",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "dependencygraphintegratorServiceRoleDefaultPolicy6EBFEC55",
        "Roles": [
          {
            "Ref": "dependencygraphintegratorServiceRole5200A556",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "dependencygraphintegratordependencygraphintegratorinputtopicTEST621C9371": {
      "Properties": {
        "Endpoint": {
          "Fn::GetAtt": [
            "dependencygraphintegrator508B46FC",
            "Arn",
          ],
        },
        "Protocol": "lambda",
        "TopicArn": {
          "Ref": "dependencygraphintegratorinputtopicTESTDAA73A88",
        },
      },
      "Type": "AWS::SNS::Subscription",
    },
    "dependencygraphintegratorgithubappauthB8B9DE78": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "GenerateSecretString": {},
        "Name": "/TEST/deploy/service-catalogue/dependency-graph-integrator-github-app-secret",
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
    "dependencygraphintegratorinputtopicTESTDAA73A88": {
      "Properties": {
        "DisplayName": "Dependency Graph Integrator Input Topic",
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::SNS::Topic",
    },
    "fastlycredentialsF42D3C80": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "GenerateSecretString": {},
        "Name": "/TEST/deploy/service-catalogue/fastly-credentials",
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
    "githubactionsusagelambdatriggerAllowEventRuleServiceCatalogueGithubActionsUsageFB05F39B49275F66": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "GithubActionsUsageAC7E0411",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "githubactionsusagelambdatriggerE81735F9",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "githubactionsusagelambdatriggerE81735F9": {
      "Properties": {
        "EventPattern": {
          "detail": {
            "clusterArn": [
              {
                "Fn::GetAtt": [
                  "servicecatalogueCluster5FC34DC5",
                  "Arn",
                ],
              },
            ],
            "containers.exitCode": [
              {
                "numeric": [
                  "=",
                  0,
                ],
              },
            ],
            "containers.name": [
              "CloudquerySource-GitHubRepositoriesContainer",
            ],
            "lastStatus": [
              "STOPPED",
            ],
            "stopCode": [
              "EssentialContainerExited",
            ],
            "taskDefinitionArn": [
              {
                "Ref": "CloudquerySourceGitHubRepositoriesTaskDefinition921DC1BC",
              },
            ],
          },
          "detail-type": [
            "ECS Task State Change",
          ],
          "source": [
            "aws.ecs",
          ],
        },
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "GithubActionsUsageAC7E0411",
                "Arn",
              ],
            },
            "Id": "Target0",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "githubcredentialsAF453741": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "GenerateSecretString": {},
        "Name": "/TEST/deploy/service-catalogue/github-credentials",
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
    "githublanguages5093EDEC": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "GenerateSecretString": {},
        "Name": "/TEST/deploy/service-catalogue/github-languages",
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
    "interactivemonitor3435C6C2": {
      "DependsOn": [
        "interactivemonitorServiceRoleDefaultPolicy44B1B670",
        "interactivemonitorServiceRoleC210EED3",
      ],
      "Properties": {
        "Architectures": [
          "arm64",
        ],
        "Code": {
          "S3Bucket": {
            "Ref": "DistributionBucketName",
          },
          "S3Key": "deploy/TEST/interactive-monitor/interactive-monitor.zip",
        },
        "Environment": {
          "Variables": {
            "APP": "interactive-monitor",
            "GITHUB_APP_SECRET": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Fn::Select": [
                      0,
                      {
                        "Fn::Split": [
                          "-",
                          {
                            "Fn::Select": [
                              6,
                              {
                                "Fn::Split": [
                                  ":",
                                  {
                                    "Ref": "interactivemonitorgithubapp9777D674",
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                    ],
                  },
                  {
                    "Fn::Select": [
                      1,
                      {
                        "Fn::Split": [
                          "-",
                          {
                            "Fn::Select": [
                              6,
                              {
                                "Fn::Split": [
                                  ":",
                                  {
                                    "Ref": "interactivemonitorgithubapp9777D674",
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                    ],
                  },
                  {
                    "Fn::Select": [
                      2,
                      {
                        "Fn::Split": [
                          "-",
                          {
                            "Fn::Select": [
                              6,
                              {
                                "Fn::Split": [
                                  ":",
                                  {
                                    "Ref": "interactivemonitorgithubapp9777D674",
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                    ],
                  },
                  {
                    "Fn::Select": [
                      3,
                      {
                        "Fn::Split": [
                          "-",
                          {
                            "Fn::Select": [
                              6,
                              {
                                "Fn::Split": [
                                  ":",
                                  {
                                    "Ref": "interactivemonitorgithubapp9777D674",
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                    ],
                  },
                  {
                    "Fn::Select": [
                      4,
                      {
                        "Fn::Split": [
                          "-",
                          {
                            "Fn::Select": [
                              6,
                              {
                                "Fn::Split": [
                                  ":",
                                  {
                                    "Ref": "interactivemonitorgithubapp9777D674",
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                    ],
                  },
                ],
              ],
            },
            "STACK": "deploy",
            "STAGE": "TEST",
          },
        },
        "Handler": "index.handler",
        "MemorySize": 512,
        "ReservedConcurrentExecutions": 1,
        "Role": {
          "Fn::GetAtt": [
            "interactivemonitorServiceRoleC210EED3",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
        "Tags": [
          {
            "Key": "App",
            "Value": "interactive-monitor",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "Timeout": 30,
      },
      "Type": "AWS::Lambda::Function",
    },
    "interactivemonitorAllowInvokeServiceCatalogueTopic0AC51635C623A304": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "interactivemonitor3435C6C2",
            "Arn",
          ],
        },
        "Principal": "sns.amazonaws.com",
        "SourceArn": {
          "Ref": "TopicBFC7AF6E",
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "interactivemonitorServiceRoleC210EED3": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "Tags": [
          {
            "Key": "App",
            "Value": "interactive-monitor",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "interactivemonitorServiceRoleDefaultPolicy44B1B670": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      {
                        "Ref": "DistributionBucketName",
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      {
                        "Ref": "DistributionBucketName",
                      },
                      "/deploy/TEST/interactive-monitor/interactive-monitor.zip",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "ssm:GetParametersByPath",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:ssm:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/TEST/deploy/interactive-monitor",
                  ],
                ],
              },
            },
            {
              "Action": [
                "ssm:GetParameters",
                "ssm:GetParameter",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:ssm:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/TEST/deploy/interactive-monitor/*",
                  ],
                ],
              },
            },
            {
              "Action": "s3:ListBucket",
              "Effect": "Allow",
              "Resource": [
                "arn:aws:s3:::gdn-cdn",
                "arn:aws:s3:::gdn-cdn/*",
              ],
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "interactivemonitorgithubapp9777D674",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "interactivemonitorServiceRoleDefaultPolicy44B1B670",
        "Roles": [
          {
            "Ref": "interactivemonitorServiceRoleC210EED3",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "interactivemonitorTopic5CA9BB6E": {
      "Properties": {
        "Endpoint": {
          "Fn::GetAtt": [
            "interactivemonitor3435C6C2",
            "Arn",
          ],
        },
        "Protocol": "lambda",
        "TopicArn": {
          "Ref": "TopicBFC7AF6E",
        },
      },
      "Type": "AWS::SNS::Subscription",
    },
    "interactivemonitorgithubapp9777D674": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "GenerateSecretString": {},
        "Name": "/TEST/deploy/service-catalogue/interactive-monitor-github-app",
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
    "ns1credentialsA8DD3B2D": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "GenerateSecretString": {},
        "Name": "/TEST/deploy/service-catalogue/ns1-credentials",
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
    "prismamigratetaskTEST59D4C0E8": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "RoleName": "prisma-migrate-task-TEST",
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "prismamigratetaskTESTDefaultPolicy89E93F3F": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kinesis:Describe*",
                "kinesis:Put*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":kinesis:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":stream/",
                    {
                      "Ref": "LoggingStreamName",
                    },
                  ],
                ],
              },
            },
            {
              "Action": "rds-db:connect",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":rds-db:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":dbuser:",
                    {
                      "Fn::GetAtt": [
                        "PostgresInstance16DE4286E",
                        "DbiResourceId",
                      ],
                    },
                    "/{{resolve:secretsmanager:",
                    {
                      "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                    },
                    ":SecretString:username::}}",
                  ],
                ],
              },
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      {
                        "Ref": "SsmParameterValueaccountservicesartifactbucketC96584B6F00A464EAD1953AFF4B05118Parameter",
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      {
                        "Ref": "SsmParameterValueaccountservicesartifactbucketC96584B6F00A464EAD1953AFF4B05118Parameter",
                      },
                      "/deploy/TEST/service-catalogue-prisma-migrations/prisma.zip",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "prismamigratetaskTESTDefaultPolicy89E93F3F",
        "Roles": [
          {
            "Ref": "prismamigratetaskTEST59D4C0E8",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "prismamigratetaskTaskDefinition6CE347DF": {
      "Properties": {
        "ContainerDefinitions": [
          {
            "Environment": [
              {
                "Name": "STACK",
                "Value": "deploy",
              },
              {
                "Name": "STAGE",
                "Value": "TEST",
              },
              {
                "Name": "APP",
                "Value": "prisma-migrate-task",
              },
              {
                "Name": "GU_REPO",
                "Value": "guardian/service-catalogue",
              },
            ],
            "Essential": true,
            "FirelensConfiguration": {
              "Type": "fluentbit",
            },
            "Image": "ghcr.io/guardian/devx-logs:2",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "prismamigratetaskTaskDefinitionprismamigratetaskFirelensLogGroupCD392728",
                },
                "awslogs-region": {
                  "Ref": "AWS::Region",
                },
                "awslogs-stream-prefix": "deploy/TEST/prisma-migrate-task",
              },
            },
            "Name": "prisma-migrate-taskFirelens",
          },
          {
            "DockerLabels": {
              "App": "prisma-migrate-task",
              "Stack": "deploy",
              "Stage": "TEST",
            },
            "Environment": [
              {
                "Name": "ARTIFACT_BUCKET",
                "Value": {
                  "Ref": "SsmParameterValueaccountservicesartifactbucketC96584B6F00A464EAD1953AFF4B05118Parameter",
                },
              },
              {
                "Name": "PRISMA_ARTIFACT_KEY",
                "Value": "deploy/TEST/service-catalogue-prisma-migrations/prisma.zip",
              },
            ],
            "Essential": true,
            "Image": "ghcr.io/guardian/service-catalogue/prisma-migrate:sha-cdd0348904373d72dcbbdd3bc943e6b5dc232d3c",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "Name": "prisma-migrate-taskContainer",
            "Secrets": [
              {
                "Name": "DB_USERNAME",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_HOST",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_PASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
            ],
          },
        ],
        "Cpu": "512",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "prismamigratetaskTaskDefinitionExecutionRoleCA10E83C",
            "Arn",
          ],
        },
        "Family": "ServiceCatalogueprismamigratetaskTaskDefinition92709D5F",
        "Memory": "1024",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE",
        ],
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "prismamigratetaskTEST59D4C0E8",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "prismamigratetaskTaskDefinitionEventsRole980BE1A4": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "prismamigratetaskTaskDefinitionEventsRoleDefaultPolicyCC5EE80B": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ecs:RunTask",
              "Condition": {
                "ArnEquals": {
                  "ecs:cluster": {
                    "Fn::GetAtt": [
                      "servicecatalogueCluster5FC34DC5",
                      "Arn",
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Resource": {
                "Ref": "prismamigratetaskTaskDefinition6CE347DF",
              },
            },
            {
              "Action": "ecs:TagResource",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ecs:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":*:task/",
                    {
                      "Ref": "servicecatalogueCluster5FC34DC5",
                    },
                    "/*",
                  ],
                ],
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "prismamigratetaskTaskDefinitionExecutionRoleCA10E83C",
                  "Arn",
                ],
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "prismamigratetaskTEST59D4C0E8",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "prismamigratetaskTaskDefinitionEventsRoleDefaultPolicyCC5EE80B",
        "Roles": [
          {
            "Ref": "prismamigratetaskTaskDefinitionEventsRole980BE1A4",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "prismamigratetaskTaskDefinitionExecutionRoleCA10E83C": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "prismamigratetaskTaskDefinitionExecutionRoleDefaultPolicyDA3DD97A": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "prismamigratetaskTaskDefinitionprismamigratetaskFirelensLogGroupCD392728",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "prismamigratetaskTaskDefinitionExecutionRoleDefaultPolicyDA3DD97A",
        "Roles": [
          {
            "Ref": "prismamigratetaskTaskDefinitionExecutionRoleCA10E83C",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "prismamigratetaskTaskDefinitionprismamigratetaskFirelensLogGroupCD392728": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionInDays": 1,
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "repocop20553EB8": {
      "DependsOn": [
        "repocopServiceRoleDefaultPolicyF20BF625",
        "repocopServiceRole757D74E8",
      ],
      "Properties": {
        "Architectures": [
          "arm64",
        ],
        "Code": {
          "S3Bucket": {
            "Ref": "DistributionBucketName",
          },
          "S3Key": "deploy/TEST/repocop/repocop.zip",
        },
        "Environment": {
          "Variables": {
            "ANGHAMMARAD_SNS_ARN": {
              "Ref": "AnghammaradSnsArn",
            },
            "APP": "repocop",
            "DATABASE_HOSTNAME": {
              "Fn::GetAtt": [
                "PostgresInstance16DE4286E",
                "Endpoint.Address",
              ],
            },
            "DEPENDENCY_GRAPH_INPUT_TOPIC_ARN": {
              "Ref": "dependencygraphintegratorinputtopicTESTDAA73A88",
            },
            "GITHUB_APP_SECRET": {
              "Ref": "branchprotectorgithubappauth4E91892E",
            },
            "INTERACTIVES_COUNT": "3",
            "INTERACTIVE_MONITOR_TOPIC_ARN": {
              "Ref": "TopicBFC7AF6E",
            },
            "QUERY_LOGGING": "false",
            "SNYK_INTEGRATOR_INPUT_TOPIC_ARN": {
              "Ref": "snykintegratorinputtopicTEST6BCA9CE1",
            },
            "STACK": "deploy",
            "STAGE": "TEST",
          },
        },
        "Handler": "index.main",
        "LoggingConfig": {
          "LogFormat": "JSON",
        },
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "repocopServiceRole757D74E8",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
        "Tags": [
          {
            "Key": "App",
            "Value": "repocop",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "Timeout": 300,
        "VpcConfig": {
          "SecurityGroupIds": [
            {
              "Fn::GetAtt": [
                "PostgresAccessSecurityGroupServicecatalogue03C78F14",
                "GroupId",
              ],
            },
          ],
          "SubnetIds": {
            "Ref": "PrivateSubnets",
          },
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "repocopServiceRole757D74E8": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole",
              ],
            ],
          },
        ],
        "Tags": [
          {
            "Key": "App",
            "Value": "repocop",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "repocopServiceRoleDefaultPolicyF20BF625": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      {
                        "Ref": "DistributionBucketName",
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      {
                        "Ref": "DistributionBucketName",
                      },
                      "/deploy/TEST/repocop/repocop.zip",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "ssm:GetParametersByPath",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:ssm:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/TEST/deploy/repocop",
                  ],
                ],
              },
            },
            {
              "Action": [
                "ssm:GetParameters",
                "ssm:GetParameter",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:ssm:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/TEST/deploy/repocop/*",
                  ],
                ],
              },
            },
            {
              "Action": "rds-db:connect",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":rds-db:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":dbuser:",
                    {
                      "Fn::GetAtt": [
                        "PostgresInstance16DE4286E",
                        "DbiResourceId",
                      ],
                    },
                    "/repocop",
                  ],
                ],
              },
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "branchprotectorgithubappauth4E91892E",
              },
            },
            {
              "Action": "sns:Publish",
              "Effect": "Allow",
              "Resource": {
                "Ref": "AnghammaradSnsArn",
              },
            },
            {
              "Action": "sns:Publish",
              "Effect": "Allow",
              "Resource": {
                "Ref": "TopicBFC7AF6E",
              },
            },
            {
              "Action": "sns:Publish",
              "Effect": "Allow",
              "Resource": {
                "Ref": "snykintegratorinputtopicTEST6BCA9CE1",
              },
            },
            {
              "Action": "sns:Publish",
              "Effect": "Allow",
              "Resource": {
                "Ref": "dependencygraphintegratorinputtopicTESTDAA73A88",
              },
            },
            {
              "Action": "cloudwatch:PutMetricData",
              "Condition": {
                "StringEquals": {
                  "cloudwatch:namespace": "repocop",
                },
              },
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "repocopServiceRoleDefaultPolicyF20BF625",
        "Roles": [
          {
            "Ref": "repocopServiceRole757D74E8",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "repocoprepocopcron3010MONFRI09611B07D": {
      "Properties": {
        "ScheduleExpression": "cron(30 10 ? * MON-FRI *)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "repocop20553EB8",
                "Arn",
              ],
            },
            "Id": "Target0",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "repocoprepocopcron3010MONFRI0AllowEventRuleServiceCataloguerepocop7BEB589205008C24": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "repocop20553EB8",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "repocoprepocopcron3010MONFRI09611B07D",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "servicecatalogueCluster5FC34DC5": {
      "Properties": {
        "ClusterSettings": [
          {
            "Name": "containerInsights",
            "Value": "enabled",
          },
        ],
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::ECS::Cluster",
    },
    "servicecatalogueClusterAF65BC89": {
      "Properties": {
        "CapacityProviders": [
          "FARGATE",
          "FARGATE_SPOT",
        ],
        "Cluster": {
          "Ref": "servicecatalogueCluster5FC34DC5",
        },
        "DefaultCapacityProviderStrategy": [],
      },
      "Type": "AWS::ECS::ClusterCapacityProviderAssociations",
    },
    "servicecatalogueTESTtaskAwsCostExplorer78777A06": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AWSXrayWriteOnlyAccess",
              ],
            ],
          },
        ],
        "RoleName": "service-catalogue-TEST-task-AwsCostExplorer",
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "servicecatalogueTESTtaskAwsCostExplorerDefaultPolicy66D41050": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kinesis:Describe*",
                "kinesis:Put*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":kinesis:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":stream/",
                    {
                      "Ref": "LoggingStreamName",
                    },
                  ],
                ],
              },
            },
            {
              "Action": "organizations:List*",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": "arn:aws:iam::*:role/cloudquery-access",
            },
            {
              "Action": "rds-db:connect",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":rds-db:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":dbuser:",
                    {
                      "Fn::GetAtt": [
                        "PostgresInstance16DE4286E",
                        "DbiResourceId",
                      ],
                    },
                    "/{{resolve:secretsmanager:",
                    {
                      "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                    },
                    ":SecretString:username::}}",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "servicecatalogueTESTtaskAwsCostExplorerDefaultPolicy66D41050",
        "Roles": [
          {
            "Ref": "servicecatalogueTESTtaskAwsCostExplorer78777A06",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "servicecatalogueTESTtaskDelegatedToSecurityAccountB1073007": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AWSXrayWriteOnlyAccess",
              ],
            ],
          },
        ],
        "RoleName": "service-catalogue-TEST-task-DelegatedToSecurityAccount",
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "servicecatalogueTESTtaskDelegatedToSecurityAccountDefaultPolicy8BBB1B3F": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kinesis:Describe*",
                "kinesis:Put*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":kinesis:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":stream/",
                    {
                      "Ref": "LoggingStreamName",
                    },
                  ],
                ],
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": "arn:aws:iam::000000000015:role/cloudquery-access",
            },
            {
              "Action": "rds-db:connect",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":rds-db:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":dbuser:",
                    {
                      "Fn::GetAtt": [
                        "PostgresInstance16DE4286E",
                        "DbiResourceId",
                      ],
                    },
                    "/{{resolve:secretsmanager:",
                    {
                      "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                    },
                    ":SecretString:username::}}",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "servicecatalogueTESTtaskDelegatedToSecurityAccountDefaultPolicy8BBB1B3F",
        "Roles": [
          {
            "Ref": "servicecatalogueTESTtaskDelegatedToSecurityAccountB1073007",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "servicecatalogueTESTtaskDeployToolsListOrgs7EFA762E": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AWSXrayWriteOnlyAccess",
              ],
            ],
          },
        ],
        "RoleName": "service-catalogue-TEST-task-DeployToolsListOrgs",
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "servicecatalogueTESTtaskDeployToolsListOrgsDefaultPolicy43B0D35B": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kinesis:Describe*",
                "kinesis:Put*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":kinesis:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":stream/",
                    {
                      "Ref": "LoggingStreamName",
                    },
                  ],
                ],
              },
            },
            {
              "Action": "organizations:List*",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": "arn:aws:iam::000000000018:role/cloudquery-access",
            },
            {
              "Action": "rds-db:connect",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":rds-db:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":dbuser:",
                    {
                      "Fn::GetAtt": [
                        "PostgresInstance16DE4286E",
                        "DbiResourceId",
                      ],
                    },
                    "/{{resolve:secretsmanager:",
                    {
                      "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                    },
                    ":SecretString:username::}}",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "servicecatalogueTESTtaskDeployToolsListOrgsDefaultPolicy43B0D35B",
        "Roles": [
          {
            "Ref": "servicecatalogueTESTtaskDeployToolsListOrgs7EFA762E",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "servicecatalogueTESTtaskFastlyServices33D5467F": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AWSXrayWriteOnlyAccess",
              ],
            ],
          },
        ],
        "RoleName": "service-catalogue-TEST-task-FastlyServices",
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "servicecatalogueTESTtaskFastlyServicesDefaultPolicy67F26FAB": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kinesis:Describe*",
                "kinesis:Put*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":kinesis:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":stream/",
                    {
                      "Ref": "LoggingStreamName",
                    },
                  ],
                ],
              },
            },
            {
              "Action": "rds-db:connect",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":rds-db:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":dbuser:",
                    {
                      "Fn::GetAtt": [
                        "PostgresInstance16DE4286E",
                        "DbiResourceId",
                      ],
                    },
                    "/{{resolve:secretsmanager:",
                    {
                      "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                    },
                    ":SecretString:username::}}",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "servicecatalogueTESTtaskFastlyServicesDefaultPolicy67F26FAB",
        "Roles": [
          {
            "Ref": "servicecatalogueTESTtaskFastlyServices33D5467F",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "servicecatalogueTESTtaskGalaxiesDBF8C9E4": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AWSXrayWriteOnlyAccess",
              ],
            ],
          },
        ],
        "RoleName": "service-catalogue-TEST-task-Galaxies",
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "servicecatalogueTESTtaskGalaxiesDefaultPolicyA9F27B2E": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kinesis:Describe*",
                "kinesis:Put*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":kinesis:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":stream/",
                    {
                      "Ref": "LoggingStreamName",
                    },
                  ],
                ],
              },
            },
            {
              "Action": "s3:GetObject",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Ref": "ActionsStaticSiteBucketArnParam",
                    },
                    "/galaxies.gutools.co.uk/data/*",
                  ],
                ],
              },
            },
            {
              "Action": "rds-db:connect",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":rds-db:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":dbuser:",
                    {
                      "Fn::GetAtt": [
                        "PostgresInstance16DE4286E",
                        "DbiResourceId",
                      ],
                    },
                    "/{{resolve:secretsmanager:",
                    {
                      "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                    },
                    ":SecretString:username::}}",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "servicecatalogueTESTtaskGalaxiesDefaultPolicyA9F27B2E",
        "Roles": [
          {
            "Ref": "servicecatalogueTESTtaskGalaxiesDBF8C9E4",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "servicecatalogueTESTtaskGitHubIssues1EFFA3D3": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AWSXrayWriteOnlyAccess",
              ],
            ],
          },
        ],
        "RoleName": "service-catalogue-TEST-task-GitHubIssues",
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "servicecatalogueTESTtaskGitHubIssuesDefaultPolicy217DF3BE": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kinesis:Describe*",
                "kinesis:Put*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":kinesis:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":stream/",
                    {
                      "Ref": "LoggingStreamName",
                    },
                  ],
                ],
              },
            },
            {
              "Action": "rds-db:connect",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":rds-db:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":dbuser:",
                    {
                      "Fn::GetAtt": [
                        "PostgresInstance16DE4286E",
                        "DbiResourceId",
                      ],
                    },
                    "/{{resolve:secretsmanager:",
                    {
                      "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                    },
                    ":SecretString:username::}}",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "servicecatalogueTESTtaskGitHubIssuesDefaultPolicy217DF3BE",
        "Roles": [
          {
            "Ref": "servicecatalogueTESTtaskGitHubIssues1EFFA3D3",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "servicecatalogueTESTtaskGitHubLanguagesDefaultPolicy2DFED7A8": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kinesis:Describe*",
                "kinesis:Put*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":kinesis:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":stream/",
                    {
                      "Ref": "LoggingStreamName",
                    },
                  ],
                ],
              },
            },
            {
              "Action": "rds-db:connect",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":rds-db:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":dbuser:",
                    {
                      "Fn::GetAtt": [
                        "PostgresInstance16DE4286E",
                        "DbiResourceId",
                      ],
                    },
                    "/{{resolve:secretsmanager:",
                    {
                      "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                    },
                    ":SecretString:username::}}",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "servicecatalogueTESTtaskGitHubLanguagesDefaultPolicy2DFED7A8",
        "Roles": [
          {
            "Ref": "servicecatalogueTESTtaskGitHubLanguagesED141D27",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "servicecatalogueTESTtaskGitHubLanguagesED141D27": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AWSXrayWriteOnlyAccess",
              ],
            ],
          },
        ],
        "RoleName": "service-catalogue-TEST-task-GitHubLanguages",
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "servicecatalogueTESTtaskGitHubRepositories83F97F25": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AWSXrayWriteOnlyAccess",
              ],
            ],
          },
        ],
        "RoleName": "service-catalogue-TEST-task-GitHubRepositories",
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "servicecatalogueTESTtaskGitHubRepositoriesDefaultPolicy13E9E433": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kinesis:Describe*",
                "kinesis:Put*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":kinesis:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":stream/",
                    {
                      "Ref": "LoggingStreamName",
                    },
                  ],
                ],
              },
            },
            {
              "Action": "rds-db:connect",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":rds-db:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":dbuser:",
                    {
                      "Fn::GetAtt": [
                        "PostgresInstance16DE4286E",
                        "DbiResourceId",
                      ],
                    },
                    "/{{resolve:secretsmanager:",
                    {
                      "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                    },
                    ":SecretString:username::}}",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "servicecatalogueTESTtaskGitHubRepositoriesDefaultPolicy13E9E433",
        "Roles": [
          {
            "Ref": "servicecatalogueTESTtaskGitHubRepositories83F97F25",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "servicecatalogueTESTtaskGitHubTeams5756A4ED": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AWSXrayWriteOnlyAccess",
              ],
            ],
          },
        ],
        "RoleName": "service-catalogue-TEST-task-GitHubTeams",
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "servicecatalogueTESTtaskGitHubTeamsDefaultPolicy66F9D1C0": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kinesis:Describe*",
                "kinesis:Put*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":kinesis:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":stream/",
                    {
                      "Ref": "LoggingStreamName",
                    },
                  ],
                ],
              },
            },
            {
              "Action": "rds-db:connect",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":rds-db:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":dbuser:",
                    {
                      "Fn::GetAtt": [
                        "PostgresInstance16DE4286E",
                        "DbiResourceId",
                      ],
                    },
                    "/{{resolve:secretsmanager:",
                    {
                      "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                    },
                    ":SecretString:username::}}",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "servicecatalogueTESTtaskGitHubTeamsDefaultPolicy66F9D1C0",
        "Roles": [
          {
            "Ref": "servicecatalogueTESTtaskGitHubTeams5756A4ED",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "servicecatalogueTESTtaskNS1B2D0D4B7": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AWSXrayWriteOnlyAccess",
              ],
            ],
          },
        ],
        "RoleName": "service-catalogue-TEST-task-NS1",
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "servicecatalogueTESTtaskNS1DefaultPolicy0726C0D1": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kinesis:Describe*",
                "kinesis:Put*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":kinesis:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":stream/",
                    {
                      "Ref": "LoggingStreamName",
                    },
                  ],
                ],
              },
            },
            {
              "Action": "rds-db:connect",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":rds-db:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":dbuser:",
                    {
                      "Fn::GetAtt": [
                        "PostgresInstance16DE4286E",
                        "DbiResourceId",
                      ],
                    },
                    "/{{resolve:secretsmanager:",
                    {
                      "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                    },
                    ":SecretString:username::}}",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "servicecatalogueTESTtaskNS1DefaultPolicy0726C0D1",
        "Roles": [
          {
            "Ref": "servicecatalogueTESTtaskNS1B2D0D4B7",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "servicecatalogueTESTtaskOrgWideAutoScalingGroups55BC34E1": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AWSXrayWriteOnlyAccess",
              ],
            ],
          },
        ],
        "RoleName": "service-catalogue-TEST-task-OrgWideAutoScalingGroups",
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "servicecatalogueTESTtaskOrgWideAutoScalingGroupsDefaultPolicyD2B0A0D0": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kinesis:Describe*",
                "kinesis:Put*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":kinesis:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":stream/",
                    {
                      "Ref": "LoggingStreamName",
                    },
                  ],
                ],
              },
            },
            {
              "Action": "organizations:List*",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": "arn:aws:iam::*:role/cloudquery-access",
            },
            {
              "Action": "rds-db:connect",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":rds-db:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":dbuser:",
                    {
                      "Fn::GetAtt": [
                        "PostgresInstance16DE4286E",
                        "DbiResourceId",
                      ],
                    },
                    "/{{resolve:secretsmanager:",
                    {
                      "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                    },
                    ":SecretString:username::}}",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "servicecatalogueTESTtaskOrgWideAutoScalingGroupsDefaultPolicyD2B0A0D0",
        "Roles": [
          {
            "Ref": "servicecatalogueTESTtaskOrgWideAutoScalingGroups55BC34E1",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "servicecatalogueTESTtaskOrgWideBackup14B6CAD7": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AWSXrayWriteOnlyAccess",
              ],
            ],
          },
        ],
        "RoleName": "service-catalogue-TEST-task-OrgWideBackup",
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "servicecatalogueTESTtaskOrgWideBackupDefaultPolicy6063C39A": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kinesis:Describe*",
                "kinesis:Put*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":kinesis:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":stream/",
                    {
                      "Ref": "LoggingStreamName",
                    },
                  ],
                ],
              },
            },
            {
              "Action": "organizations:List*",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": "arn:aws:iam::*:role/cloudquery-access",
            },
            {
              "Action": "rds-db:connect",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":rds-db:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":dbuser:",
                    {
                      "Fn::GetAtt": [
                        "PostgresInstance16DE4286E",
                        "DbiResourceId",
                      ],
                    },
                    "/{{resolve:secretsmanager:",
                    {
                      "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                    },
                    ":SecretString:username::}}",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "servicecatalogueTESTtaskOrgWideBackupDefaultPolicy6063C39A",
        "Roles": [
          {
            "Ref": "servicecatalogueTESTtaskOrgWideBackup14B6CAD7",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "servicecatalogueTESTtaskOrgWideCertificates11B791C3": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AWSXrayWriteOnlyAccess",
              ],
            ],
          },
        ],
        "RoleName": "service-catalogue-TEST-task-OrgWideCertificates",
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "servicecatalogueTESTtaskOrgWideCertificatesDefaultPolicy205CEF95": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kinesis:Describe*",
                "kinesis:Put*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":kinesis:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":stream/",
                    {
                      "Ref": "LoggingStreamName",
                    },
                  ],
                ],
              },
            },
            {
              "Action": "organizations:List*",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": "arn:aws:iam::*:role/cloudquery-access",
            },
            {
              "Action": "rds-db:connect",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":rds-db:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":dbuser:",
                    {
                      "Fn::GetAtt": [
                        "PostgresInstance16DE4286E",
                        "DbiResourceId",
                      ],
                    },
                    "/{{resolve:secretsmanager:",
                    {
                      "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                    },
                    ":SecretString:username::}}",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "servicecatalogueTESTtaskOrgWideCertificatesDefaultPolicy205CEF95",
        "Roles": [
          {
            "Ref": "servicecatalogueTESTtaskOrgWideCertificates11B791C3",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "servicecatalogueTESTtaskOrgWideCloudFormationDefaultPolicyA0B62E4F": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kinesis:Describe*",
                "kinesis:Put*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":kinesis:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":stream/",
                    {
                      "Ref": "LoggingStreamName",
                    },
                  ],
                ],
              },
            },
            {
              "Action": "organizations:List*",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": "arn:aws:iam::*:role/cloudquery-access",
            },
            {
              "Action": "rds-db:connect",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":rds-db:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":dbuser:",
                    {
                      "Fn::GetAtt": [
                        "PostgresInstance16DE4286E",
                        "DbiResourceId",
                      ],
                    },
                    "/{{resolve:secretsmanager:",
                    {
                      "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                    },
                    ":SecretString:username::}}",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "servicecatalogueTESTtaskOrgWideCloudFormationDefaultPolicyA0B62E4F",
        "Roles": [
          {
            "Ref": "servicecatalogueTESTtaskOrgWideCloudFormationEB323E17",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "servicecatalogueTESTtaskOrgWideCloudFormationEB323E17": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AWSXrayWriteOnlyAccess",
              ],
            ],
          },
        ],
        "RoleName": "service-catalogue-TEST-task-OrgWideCloudFormation",
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "servicecatalogueTESTtaskOrgWideCloudwatchAlarmsAA3FE326": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AWSXrayWriteOnlyAccess",
              ],
            ],
          },
        ],
        "RoleName": "service-catalogue-TEST-task-OrgWideCloudwatchAlarms",
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "servicecatalogueTESTtaskOrgWideCloudwatchAlarmsDefaultPolicyCDBD09B9": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kinesis:Describe*",
                "kinesis:Put*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":kinesis:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":stream/",
                    {
                      "Ref": "LoggingStreamName",
                    },
                  ],
                ],
              },
            },
            {
              "Action": "organizations:List*",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": "arn:aws:iam::*:role/cloudquery-access",
            },
            {
              "Action": "rds-db:connect",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":rds-db:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":dbuser:",
                    {
                      "Fn::GetAtt": [
                        "PostgresInstance16DE4286E",
                        "DbiResourceId",
                      ],
                    },
                    "/{{resolve:secretsmanager:",
                    {
                      "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                    },
                    ":SecretString:username::}}",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "servicecatalogueTESTtaskOrgWideCloudwatchAlarmsDefaultPolicyCDBD09B9",
        "Roles": [
          {
            "Ref": "servicecatalogueTESTtaskOrgWideCloudwatchAlarmsAA3FE326",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "servicecatalogueTESTtaskOrgWideDynamoDB7E89D82B": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AWSXrayWriteOnlyAccess",
              ],
            ],
          },
        ],
        "RoleName": "service-catalogue-TEST-task-OrgWideDynamoDB",
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "servicecatalogueTESTtaskOrgWideDynamoDBDefaultPolicyFB454BCC": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kinesis:Describe*",
                "kinesis:Put*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":kinesis:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":stream/",
                    {
                      "Ref": "LoggingStreamName",
                    },
                  ],
                ],
              },
            },
            {
              "Action": "organizations:List*",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": "arn:aws:iam::*:role/cloudquery-access",
            },
            {
              "Action": "rds-db:connect",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":rds-db:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":dbuser:",
                    {
                      "Fn::GetAtt": [
                        "PostgresInstance16DE4286E",
                        "DbiResourceId",
                      ],
                    },
                    "/{{resolve:secretsmanager:",
                    {
                      "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                    },
                    ":SecretString:username::}}",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "servicecatalogueTESTtaskOrgWideDynamoDBDefaultPolicyFB454BCC",
        "Roles": [
          {
            "Ref": "servicecatalogueTESTtaskOrgWideDynamoDB7E89D82B",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "servicecatalogueTESTtaskOrgWideEc2AD6BFB41": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AWSXrayWriteOnlyAccess",
              ],
            ],
          },
        ],
        "RoleName": "service-catalogue-TEST-task-OrgWideEc2",
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "servicecatalogueTESTtaskOrgWideEc2DefaultPolicy32397B3C": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ecs:ListTasks",
              "Condition": {
                "StringEquals": {
                  "ecs:cluster": {
                    "Fn::GetAtt": [
                      "servicecatalogueCluster5FC34DC5",
                      "Arn",
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "kinesis:Describe*",
                "kinesis:Put*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":kinesis:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":stream/",
                    {
                      "Ref": "LoggingStreamName",
                    },
                  ],
                ],
              },
            },
            {
              "Action": "organizations:List*",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": "arn:aws:iam::*:role/cloudquery-access",
            },
            {
              "Action": "rds-db:connect",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":rds-db:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":dbuser:",
                    {
                      "Fn::GetAtt": [
                        "PostgresInstance16DE4286E",
                        "DbiResourceId",
                      ],
                    },
                    "/{{resolve:secretsmanager:",
                    {
                      "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                    },
                    ":SecretString:username::}}",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "servicecatalogueTESTtaskOrgWideEc2DefaultPolicy32397B3C",
        "Roles": [
          {
            "Ref": "servicecatalogueTESTtaskOrgWideEc2AD6BFB41",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "servicecatalogueTESTtaskOrgWideInspector057F690E": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AWSXrayWriteOnlyAccess",
              ],
            ],
          },
        ],
        "RoleName": "service-catalogue-TEST-task-OrgWideInspector",
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "servicecatalogueTESTtaskOrgWideInspectorDefaultPolicy58A9124E": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kinesis:Describe*",
                "kinesis:Put*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":kinesis:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":stream/",
                    {
                      "Ref": "LoggingStreamName",
                    },
                  ],
                ],
              },
            },
            {
              "Action": "organizations:List*",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": "arn:aws:iam::*:role/cloudquery-access",
            },
            {
              "Action": "rds-db:connect",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":rds-db:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":dbuser:",
                    {
                      "Fn::GetAtt": [
                        "PostgresInstance16DE4286E",
                        "DbiResourceId",
                      ],
                    },
                    "/{{resolve:secretsmanager:",
                    {
                      "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                    },
                    ":SecretString:username::}}",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "servicecatalogueTESTtaskOrgWideInspectorDefaultPolicy58A9124E",
        "Roles": [
          {
            "Ref": "servicecatalogueTESTtaskOrgWideInspector057F690E",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "servicecatalogueTESTtaskOrgWideLoadBalancers98E48713": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AWSXrayWriteOnlyAccess",
              ],
            ],
          },
        ],
        "RoleName": "service-catalogue-TEST-task-OrgWideLoadBalancers",
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "servicecatalogueTESTtaskOrgWideLoadBalancersDefaultPolicy0F5DD5AC": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kinesis:Describe*",
                "kinesis:Put*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":kinesis:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":stream/",
                    {
                      "Ref": "LoggingStreamName",
                    },
                  ],
                ],
              },
            },
            {
              "Action": "organizations:List*",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": "arn:aws:iam::*:role/cloudquery-access",
            },
            {
              "Action": "rds-db:connect",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":rds-db:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":dbuser:",
                    {
                      "Fn::GetAtt": [
                        "PostgresInstance16DE4286E",
                        "DbiResourceId",
                      ],
                    },
                    "/{{resolve:secretsmanager:",
                    {
                      "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                    },
                    ":SecretString:username::}}",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "servicecatalogueTESTtaskOrgWideLoadBalancersDefaultPolicy0F5DD5AC",
        "Roles": [
          {
            "Ref": "servicecatalogueTESTtaskOrgWideLoadBalancers98E48713",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "servicecatalogueTESTtaskOrgWideRDS66AC88D6": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AWSXrayWriteOnlyAccess",
              ],
            ],
          },
        ],
        "RoleName": "service-catalogue-TEST-task-OrgWideRDS",
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "servicecatalogueTESTtaskOrgWideRDSDefaultPolicy4757D22C": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kinesis:Describe*",
                "kinesis:Put*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":kinesis:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":stream/",
                    {
                      "Ref": "LoggingStreamName",
                    },
                  ],
                ],
              },
            },
            {
              "Action": "organizations:List*",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": "arn:aws:iam::*:role/cloudquery-access",
            },
            {
              "Action": "rds-db:connect",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":rds-db:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":dbuser:",
                    {
                      "Fn::GetAtt": [
                        "PostgresInstance16DE4286E",
                        "DbiResourceId",
                      ],
                    },
                    "/{{resolve:secretsmanager:",
                    {
                      "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                    },
                    ":SecretString:username::}}",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "servicecatalogueTESTtaskOrgWideRDSDefaultPolicy4757D22C",
        "Roles": [
          {
            "Ref": "servicecatalogueTESTtaskOrgWideRDS66AC88D6",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "servicecatalogueTESTtaskOrgWideS36081636C": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AWSXrayWriteOnlyAccess",
              ],
            ],
          },
        ],
        "RoleName": "service-catalogue-TEST-task-OrgWideS3",
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "servicecatalogueTESTtaskOrgWideS3DefaultPolicy22A113A0": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kinesis:Describe*",
                "kinesis:Put*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":kinesis:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":stream/",
                    {
                      "Ref": "LoggingStreamName",
                    },
                  ],
                ],
              },
            },
            {
              "Action": "organizations:List*",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": "arn:aws:iam::*:role/cloudquery-access",
            },
            {
              "Action": "rds-db:connect",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":rds-db:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":dbuser:",
                    {
                      "Fn::GetAtt": [
                        "PostgresInstance16DE4286E",
                        "DbiResourceId",
                      ],
                    },
                    "/{{resolve:secretsmanager:",
                    {
                      "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                    },
                    ":SecretString:username::}}",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "servicecatalogueTESTtaskOrgWideS3DefaultPolicy22A113A0",
        "Roles": [
          {
            "Ref": "servicecatalogueTESTtaskOrgWideS36081636C",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "servicecatalogueTESTtaskRemainingAwsData87C45AB6": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AWSXrayWriteOnlyAccess",
              ],
            ],
          },
        ],
        "RoleName": "service-catalogue-TEST-task-RemainingAwsData",
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "servicecatalogueTESTtaskRemainingAwsDataDefaultPolicy4B23A85E": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kinesis:Describe*",
                "kinesis:Put*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":kinesis:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":stream/",
                    {
                      "Ref": "LoggingStreamName",
                    },
                  ],
                ],
              },
            },
            {
              "Action": "organizations:List*",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": "arn:aws:iam::*:role/cloudquery-access",
            },
            {
              "Action": "rds-db:connect",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":rds-db:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":dbuser:",
                    {
                      "Fn::GetAtt": [
                        "PostgresInstance16DE4286E",
                        "DbiResourceId",
                      ],
                    },
                    "/{{resolve:secretsmanager:",
                    {
                      "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                    },
                    ":SecretString:username::}}",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "servicecatalogueTESTtaskRemainingAwsDataDefaultPolicy4B23A85E",
        "Roles": [
          {
            "Ref": "servicecatalogueTESTtaskRemainingAwsData87C45AB6",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "servicecatalogueTESTtaskRiffRaffDataC9A39FC8": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AWSXrayWriteOnlyAccess",
              ],
            ],
          },
        ],
        "RoleName": "service-catalogue-TEST-task-RiffRaffData",
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "servicecatalogueTESTtaskRiffRaffDataDefaultPolicyC2B59227": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kinesis:Describe*",
                "kinesis:Put*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":kinesis:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":stream/",
                    {
                      "Ref": "LoggingStreamName",
                    },
                  ],
                ],
              },
            },
            {
              "Action": "rds-db:connect",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":rds-db:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":dbuser:",
                    {
                      "Fn::GetAtt": [
                        "PostgresInstance16DE4286E",
                        "DbiResourceId",
                      ],
                    },
                    "/{{resolve:secretsmanager:",
                    {
                      "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                    },
                    ":SecretString:username::}}",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "servicecatalogueTESTtaskRiffRaffDataDefaultPolicyC2B59227",
        "Roles": [
          {
            "Ref": "servicecatalogueTESTtaskRiffRaffDataC9A39FC8",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "servicecatalogueTESTtaskSnykAllDefaultPolicy43E4CE69": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kinesis:Describe*",
                "kinesis:Put*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":kinesis:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":stream/",
                    {
                      "Ref": "LoggingStreamName",
                    },
                  ],
                ],
              },
            },
            {
              "Action": "rds-db:connect",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":rds-db:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":dbuser:",
                    {
                      "Fn::GetAtt": [
                        "PostgresInstance16DE4286E",
                        "DbiResourceId",
                      ],
                    },
                    "/{{resolve:secretsmanager:",
                    {
                      "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                    },
                    ":SecretString:username::}}",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "servicecatalogueTESTtaskSnykAllDefaultPolicy43E4CE69",
        "Roles": [
          {
            "Ref": "servicecatalogueTESTtaskSnykAllF4EB95EB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "servicecatalogueTESTtaskSnykAllF4EB95EB": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AWSXrayWriteOnlyAccess",
              ],
            ],
          },
        ],
        "RoleName": "service-catalogue-TEST-task-SnykAll",
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "snykcredentials4D951A18": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "GenerateSecretString": {},
        "Name": "/TEST/deploy/service-catalogue/snyk-credentials",
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
    "snykintegrator1EF519CF": {
      "DependsOn": [
        "snykintegratorServiceRoleDefaultPolicyC9028053",
        "snykintegratorServiceRole8B7567EF",
      ],
      "Properties": {
        "Architectures": [
          "arm64",
        ],
        "Code": {
          "S3Bucket": {
            "Ref": "DistributionBucketName",
          },
          "S3Key": "deploy/TEST/snyk-integrator/snyk-integrator.zip",
        },
        "Environment": {
          "Variables": {
            "APP": "snyk-integrator",
            "GITHUB_APP_SECRET": {
              "Ref": "snykintegratorgithubappauth8C64864D",
            },
            "STACK": "deploy",
            "STAGE": "TEST",
          },
        },
        "Handler": "index.handler",
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "snykintegratorServiceRole8B7567EF",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
        "Tags": [
          {
            "Key": "App",
            "Value": "snyk-integrator",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "Timeout": 300,
        "VpcConfig": {
          "SecurityGroupIds": [
            {
              "Fn::GetAtt": [
                "snykintegratorSecurityGroup158665A3",
                "GroupId",
              ],
            },
          ],
          "SubnetIds": {
            "Ref": "PrivateSubnets",
          },
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "snykintegratorAllowInvokeServiceCataloguesnykintegratorinputtopicTEST8ADE3A2EDEF3DA67": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "snykintegrator1EF519CF",
            "Arn",
          ],
        },
        "Principal": "sns.amazonaws.com",
        "SourceArn": {
          "Ref": "snykintegratorinputtopicTEST6BCA9CE1",
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "snykintegratorSecurityGroup158665A3": {
      "Properties": {
        "GroupDescription": "Automatic security group for Lambda Function ServiceCataloguesnykintegratorC6E6D2B3",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "Tags": [
          {
            "Key": "App",
            "Value": "snyk-integrator",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "VpcId": {
          "Ref": "VpcId",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "snykintegratorServiceRole8B7567EF": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole",
              ],
            ],
          },
        ],
        "Tags": [
          {
            "Key": "App",
            "Value": "snyk-integrator",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "snykintegratorServiceRoleDefaultPolicyC9028053": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      {
                        "Ref": "DistributionBucketName",
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      {
                        "Ref": "DistributionBucketName",
                      },
                      "/deploy/TEST/snyk-integrator/snyk-integrator.zip",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "ssm:GetParametersByPath",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:ssm:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/TEST/deploy/snyk-integrator",
                  ],
                ],
              },
            },
            {
              "Action": [
                "ssm:GetParameters",
                "ssm:GetParameter",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:ssm:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/TEST/deploy/snyk-integrator/*",
                  ],
                ],
              },
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "snykintegratorgithubappauth8C64864D",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "snykintegratorServiceRoleDefaultPolicyC9028053",
        "Roles": [
          {
            "Ref": "snykintegratorServiceRole8B7567EF",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "snykintegratorgithubappauth8C64864D": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "GenerateSecretString": {},
        "Name": "/TEST/deploy/service-catalogue/snyk-integrator-github-app-secret",
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
    "snykintegratorinputtopicTEST6BCA9CE1": {
      "Properties": {
        "DisplayName": "Snyk Integrator Input Topic",
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::SNS::Topic",
    },
    "snykintegratorsnykintegratorinputtopicTEST80B8842E": {
      "Properties": {
        "Endpoint": {
          "Fn::GetAtt": [
            "snykintegrator1EF519CF",
            "Arn",
          ],
        },
        "Protocol": "lambda",
        "TopicArn": {
          "Ref": "snykintegratorinputtopicTEST6BCA9CE1",
        },
      },
      "Type": "AWS::SNS::Subscription",
    },
  },
}
`;
