// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`The ServiceCatalogue stack matches the snapshot 1`] = `
{
  "Metadata": {
    "gu:cdk:constructs": [
      "GuSubnetListParameter",
      "GuVpcParameter",
      "GuSecurityGroup",
      "GuSecurityGroup",
      "GuSecurityGroup",
      "GuStringParameter",
      "GuLoggingStreamNameParameter",
      "GuAnghammaradTopicParameter",
      "GuDistributionBucketParameter",
      "GuLambdaFunction",
      "GuScheduledLambda",
      "GuLambdaFunction",
      "GuScheduledLambda",
      "GuSecurityGroup",
      "GuFileSystem",
      "GuCname",
    ],
    "gu:cdk:version": "TEST",
  },
  "Parameters": {
    "ActionsStaticSiteBucketArnParam": {
      "Default": "/INFRA/deploy/cloudquery/actions-static-site-bucket-arn",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "AnghammaradSnsArn": {
      "Default": "/account/services/anghammarad.topic.arn",
      "Description": "SSM parameter containing the ARN of the Anghammarad SNS topic",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "DistributionBucketName": {
      "Default": "/account/services/artifact.bucket",
      "Description": "SSM parameter containing the S3 bucket name holding distribution artifacts",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "LoggingStreamName": {
      "Default": "/account/services/logging.stream.name",
      "Description": "SSM parameter containing the Name (not ARN) on the kinesis stream",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "PrivateSubnets": {
      "Default": "/account/vpc/primary/subnets/private",
      "Description": "A list of private subnets",
      "Type": "AWS::SSM::Parameter::Value<List<AWS::EC2::Subnet::Id>>",
    },
    "SsmParameterValueTESTdeployriffraffexternaldatabaseaccesssecuritygroupC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/TEST/deploy/riff-raff/external-database-access-security-group",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "VpcId": {
      "Default": "/account/vpc/primary/id",
      "Description": "Virtual Private Cloud to run EC2 instances within. Should NOT be the account default VPC.",
      "Type": "AWS::SSM::Parameter::Value<AWS::EC2::VPC::Id>",
    },
  },
  "Resources": {
    "CloudquerySourceAwsCostExplorerScheduledEventRule85BE97F8": {
      "Properties": {
        "ScheduleExpression": "rate(7 days)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "servicecatalogueCluster5FC34DC5",
                "Arn",
              ],
            },
            "EcsParameters": {
              "LaunchType": "FARGATE",
              "NetworkConfiguration": {
                "AwsVpcConfiguration": {
                  "AssignPublicIp": "DISABLED",
                  "SecurityGroups": [
                    {
                      "Fn::GetAtt": [
                        "PostgresAccessSecurityGroupServicecatalogue03C78F14",
                        "GroupId",
                      ],
                    },
                  ],
                  "Subnets": {
                    "Ref": "PrivateSubnets",
                  },
                },
              },
              "TaskCount": 1,
              "TaskDefinitionArn": {
                "Ref": "CloudquerySourceAwsCostExplorerTaskDefinition62DC1A04",
              },
            },
            "Id": "Target0",
            "Input": "{}",
            "RoleArn": {
              "Fn::GetAtt": [
                "CloudquerySourceAwsCostExplorerTaskDefinitionEventsRole71FB003A",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "CloudquerySourceAwsCostExplorerTaskDefinition62DC1A04": {
      "Properties": {
        "ContainerDefinitions": [
          {
            "Command": [
              "/bin/sh",
              "-c",
              "wget -O /usr/local/share/ca-certificates/global-bundle.crt -q https://truststore.pki.rds.amazonaws.com/global/global-bundle.pem && update-ca-certificates;printf 'kind: source
spec:
  name: aws
  path: cloudquery/aws
  version: v23.3.1
  tables:
    - aws_costexplorer_*
  destinations:
    - postgresql
  spec:
    regions:
      - eu-west-1
      - eu-west-2
      - us-east-1
      - us-east-2
      - us-west-1
      - ap-southeast-2
      - ca-central-1
    org:
      member_role_name: cloudquery-access
      organization_units:
        - ou-123
' > /source.yaml;printf 'kind: destination
spec:
  name: postgresql
  registry: github
  path: cloudquery/postgresql
  version: v7.0.1
  migrate_mode: forced
  spec:
    connection_string: >-
      user=\${DB_USERNAME} password=\${DB_PASSWORD} host=\${DB_HOST} port=5432
      dbname=postgres sslmode=verify-full
' > /destination.yaml;/app/cloudquery sync /source.yaml /destination.yaml --log-format json --log-console",
            ],
            "DockerLabels": {
              "App": "service-catalogue",
              "Name": "AwsCostExplorer",
              "Stack": "deploy",
              "Stage": "TEST",
            },
            "EntryPoint": [
              "",
            ],
            "Environment": [
              {
                "Name": "GOMEMLIMIT",
                "Value": "409MiB",
              },
            ],
            "Essential": true,
            "Image": "ghcr.io/cloudquery/cloudquery:4.3.5",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "Name": "CloudquerySource-AwsCostExplorerContainer",
            "Secrets": [
              {
                "Name": "DB_USERNAME",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_HOST",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_PASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
              {
                "Name": "CLOUDQUERY_API_KEY",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "cloudqueryapikeyCCF82F53",
                      },
                      ":api-key::",
                    ],
                  ],
                },
              },
            ],
          },
          {
            "Command": [
              "/bin/sh",
              "-c",
              "psql -c "INSERT INTO cloudquery_table_frequency VALUES ('aws_costexplorer_%', 'WEEKLY') ON CONFLICT (table_name) DO UPDATE SET frequency = 'WEEKLY'"",
            ],
            "DockerLabels": {
              "App": "service-catalogue",
              "Name": "AwsCostExplorer",
              "Stack": "deploy",
              "Stage": "TEST",
            },
            "EntryPoint": [
              "",
            ],
            "Essential": false,
            "Image": "public.ecr.aws/docker/library/postgres:16-alpine",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "Name": "CloudquerySource-AwsCostExplorerPostgresContainer",
            "Secrets": [
              {
                "Name": "PGUSER",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              {
                "Name": "PGHOST",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              {
                "Name": "PGPASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
            ],
          },
          {
            "Environment": [
              {
                "Name": "STACK",
                "Value": "deploy",
              },
              {
                "Name": "STAGE",
                "Value": "TEST",
              },
              {
                "Name": "APP",
                "Value": "service-catalogue",
              },
              {
                "Name": "GU_REPO",
                "Value": "guardian/service-catalogue",
              },
            ],
            "Essential": true,
            "FirelensConfiguration": {
              "Type": "fluentbit",
            },
            "Image": "ghcr.io/guardian/devx-logs:2",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "CloudquerySourceAwsCostExplorerTaskDefinitionCloudquerySourceAwsCostExplorerFirelensLogGroup0D0D76FF",
                },
                "awslogs-region": {
                  "Ref": "AWS::Region",
                },
                "awslogs-stream-prefix": "deploy/TEST/service-catalogue",
              },
            },
            "Name": "CloudquerySource-AwsCostExplorerFirelens",
          },
        ],
        "Cpu": "256",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "CloudquerySourceAwsCostExplorerTaskDefinitionExecutionRoleD508639D",
            "Arn",
          ],
        },
        "Family": "ServiceCatalogueCloudquerySourceAwsCostExplorerTaskDefinitionD8C37FA5",
        "Memory": "512",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE",
        ],
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "AwsCostExplorer",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "CloudquerySourceAwsCostExplorerTaskDefinitionTaskRole41DB9C74",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "CloudquerySourceAwsCostExplorerTaskDefinitionCloudquerySourceAwsCostExplorerFirelensLogGroup0D0D76FF": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionInDays": 1,
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "AwsCostExplorer",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "CloudquerySourceAwsCostExplorerTaskDefinitionEventsRole71FB003A": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "AwsCostExplorer",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceAwsCostExplorerTaskDefinitionEventsRoleDefaultPolicy6D27ED91": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ecs:RunTask",
              "Condition": {
                "ArnEquals": {
                  "ecs:cluster": {
                    "Fn::GetAtt": [
                      "servicecatalogueCluster5FC34DC5",
                      "Arn",
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Resource": {
                "Ref": "CloudquerySourceAwsCostExplorerTaskDefinition62DC1A04",
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceAwsCostExplorerTaskDefinitionExecutionRoleD508639D",
                  "Arn",
                ],
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceAwsCostExplorerTaskDefinitionTaskRole41DB9C74",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceAwsCostExplorerTaskDefinitionEventsRoleDefaultPolicy6D27ED91",
        "Roles": [
          {
            "Ref": "CloudquerySourceAwsCostExplorerTaskDefinitionEventsRole71FB003A",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceAwsCostExplorerTaskDefinitionExecutionRoleD508639D": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "AwsCostExplorer",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceAwsCostExplorerTaskDefinitionExecutionRoleDefaultPolicyEBFC45ED": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
              },
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "cloudqueryapikeyCCF82F53",
              },
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceAwsCostExplorerTaskDefinitionCloudquerySourceAwsCostExplorerFirelensLogGroup0D0D76FF",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceAwsCostExplorerTaskDefinitionExecutionRoleDefaultPolicyEBFC45ED",
        "Roles": [
          {
            "Ref": "CloudquerySourceAwsCostExplorerTaskDefinitionExecutionRoleD508639D",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceAwsCostExplorerTaskDefinitionTaskRole41DB9C74": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "AwsCostExplorer",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceAwsCostExplorerTaskDefinitionTaskRoleDefaultPolicyC8C7B357": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kinesis:Describe*",
                "kinesis:Put*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":kinesis:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":stream/",
                    {
                      "Ref": "LoggingStreamName",
                    },
                  ],
                ],
              },
            },
            {
              "Action": "organizations:List*",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": "arn:aws:iam::*:role/cloudquery-access",
            },
            {
              "Action": "rds-db:connect",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":rds-db:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":dbuser:",
                    {
                      "Fn::GetAtt": [
                        "PostgresInstance16DE4286E",
                        "DbiResourceId",
                      ],
                    },
                    "/{{resolve:secretsmanager:",
                    {
                      "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                    },
                    ":SecretString:username::}}",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceAwsCostExplorerTaskDefinitionTaskRoleDefaultPolicyC8C7B357",
        "Roles": [
          {
            "Ref": "CloudquerySourceAwsCostExplorerTaskDefinitionTaskRole41DB9C74",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceDelegatedToSecurityAccountScheduledEventRuleC7320B4E": {
      "Properties": {
        "ScheduleExpression": "cron(0 22 * * ? *)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "servicecatalogueCluster5FC34DC5",
                "Arn",
              ],
            },
            "EcsParameters": {
              "LaunchType": "FARGATE",
              "NetworkConfiguration": {
                "AwsVpcConfiguration": {
                  "AssignPublicIp": "DISABLED",
                  "SecurityGroups": [
                    {
                      "Fn::GetAtt": [
                        "PostgresAccessSecurityGroupServicecatalogue03C78F14",
                        "GroupId",
                      ],
                    },
                  ],
                  "Subnets": {
                    "Ref": "PrivateSubnets",
                  },
                },
              },
              "TaskCount": 1,
              "TaskDefinitionArn": {
                "Ref": "CloudquerySourceDelegatedToSecurityAccountTaskDefinitionD407788D",
              },
            },
            "Id": "Target0",
            "Input": "{}",
            "RoleArn": {
              "Fn::GetAtt": [
                "CloudquerySourceDelegatedToSecurityAccountTaskDefinitionEventsRoleA78E8779",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "CloudquerySourceDelegatedToSecurityAccountTaskDefinitionCloudquerySourceDelegatedToSecurityAccountFirelensLogGroupEC2CB8DA": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionInDays": 1,
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "DelegatedToSecurityAccount",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "CloudquerySourceDelegatedToSecurityAccountTaskDefinitionD407788D": {
      "Properties": {
        "ContainerDefinitions": [
          {
            "Command": [
              "/bin/sh",
              "-c",
              "wget -O /usr/local/share/ca-certificates/global-bundle.crt -q https://truststore.pki.rds.amazonaws.com/global/global-bundle.pem && update-ca-certificates;printf 'kind: source
spec:
  name: aws
  path: cloudquery/aws
  version: v23.3.1
  tables:
    - aws_accessanalyzer_*
    - aws_securityhub_*
  destinations:
    - postgresql
  concurrency: 2000
  spec:
    regions:
      - eu-west-1
      - eu-west-2
      - us-east-1
      - us-east-2
      - us-west-1
      - ap-southeast-2
      - ca-central-1
    accounts:
      - id: cq-for-000000000015
        role_arn: arn:aws:iam::000000000015:role/cloudquery-access
' > /source.yaml;printf 'kind: destination
spec:
  name: postgresql
  registry: github
  path: cloudquery/postgresql
  version: v7.0.1
  migrate_mode: forced
  spec:
    connection_string: >-
      user=\${DB_USERNAME} password=\${DB_PASSWORD} host=\${DB_HOST} port=5432
      dbname=postgres sslmode=verify-full
' > /destination.yaml;/app/cloudquery sync /source.yaml /destination.yaml --log-format json --log-console",
            ],
            "DockerLabels": {
              "App": "service-catalogue",
              "Name": "DelegatedToSecurityAccount",
              "Stack": "deploy",
              "Stage": "TEST",
            },
            "EntryPoint": [
              "",
            ],
            "Environment": [
              {
                "Name": "GOMEMLIMIT",
                "Value": "1638MiB",
              },
            ],
            "Essential": true,
            "Image": "ghcr.io/cloudquery/cloudquery:4.3.5",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "Name": "CloudquerySource-DelegatedToSecurityAccountContainer",
            "Secrets": [
              {
                "Name": "DB_USERNAME",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_HOST",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_PASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
              {
                "Name": "CLOUDQUERY_API_KEY",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "cloudqueryapikeyCCF82F53",
                      },
                      ":api-key::",
                    ],
                  ],
                },
              },
            ],
          },
          {
            "Command": [
              "/bin/sh",
              "-c",
              "psql -c "INSERT INTO cloudquery_table_frequency VALUES ('aws_accessanalyzer_%', 'DAILY'),('aws_securityhub_%', 'DAILY') ON CONFLICT (table_name) DO UPDATE SET frequency = 'DAILY'"",
            ],
            "DockerLabels": {
              "App": "service-catalogue",
              "Name": "DelegatedToSecurityAccount",
              "Stack": "deploy",
              "Stage": "TEST",
            },
            "EntryPoint": [
              "",
            ],
            "Essential": false,
            "Image": "public.ecr.aws/docker/library/postgres:16-alpine",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "Name": "CloudquerySource-DelegatedToSecurityAccountPostgresContainer",
            "Secrets": [
              {
                "Name": "PGUSER",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              {
                "Name": "PGHOST",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              {
                "Name": "PGPASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
            ],
          },
          {
            "Environment": [
              {
                "Name": "STACK",
                "Value": "deploy",
              },
              {
                "Name": "STAGE",
                "Value": "TEST",
              },
              {
                "Name": "APP",
                "Value": "service-catalogue",
              },
              {
                "Name": "GU_REPO",
                "Value": "guardian/service-catalogue",
              },
            ],
            "Essential": true,
            "FirelensConfiguration": {
              "Type": "fluentbit",
            },
            "Image": "ghcr.io/guardian/devx-logs:2",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "CloudquerySourceDelegatedToSecurityAccountTaskDefinitionCloudquerySourceDelegatedToSecurityAccountFirelensLogGroupEC2CB8DA",
                },
                "awslogs-region": {
                  "Ref": "AWS::Region",
                },
                "awslogs-stream-prefix": "deploy/TEST/service-catalogue",
              },
            },
            "Name": "CloudquerySource-DelegatedToSecurityAccountFirelens",
          },
        ],
        "Cpu": "1024",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "CloudquerySourceDelegatedToSecurityAccountTaskDefinitionExecutionRole40841493",
            "Arn",
          ],
        },
        "Family": "ServiceCatalogueCloudquerySourceDelegatedToSecurityAccountTaskDefinitionCFCDF71C",
        "Memory": "2048",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE",
        ],
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "DelegatedToSecurityAccount",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "CloudquerySourceDelegatedToSecurityAccountTaskDefinitionTaskRole95A21336",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "CloudquerySourceDelegatedToSecurityAccountTaskDefinitionEventsRoleA78E8779": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "DelegatedToSecurityAccount",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceDelegatedToSecurityAccountTaskDefinitionEventsRoleDefaultPolicy54F7B08B": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ecs:RunTask",
              "Condition": {
                "ArnEquals": {
                  "ecs:cluster": {
                    "Fn::GetAtt": [
                      "servicecatalogueCluster5FC34DC5",
                      "Arn",
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Resource": {
                "Ref": "CloudquerySourceDelegatedToSecurityAccountTaskDefinitionD407788D",
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceDelegatedToSecurityAccountTaskDefinitionExecutionRole40841493",
                  "Arn",
                ],
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceDelegatedToSecurityAccountTaskDefinitionTaskRole95A21336",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceDelegatedToSecurityAccountTaskDefinitionEventsRoleDefaultPolicy54F7B08B",
        "Roles": [
          {
            "Ref": "CloudquerySourceDelegatedToSecurityAccountTaskDefinitionEventsRoleA78E8779",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceDelegatedToSecurityAccountTaskDefinitionExecutionRole40841493": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "DelegatedToSecurityAccount",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceDelegatedToSecurityAccountTaskDefinitionExecutionRoleDefaultPolicy7CA81E4D": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
              },
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "cloudqueryapikeyCCF82F53",
              },
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceDelegatedToSecurityAccountTaskDefinitionCloudquerySourceDelegatedToSecurityAccountFirelensLogGroupEC2CB8DA",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceDelegatedToSecurityAccountTaskDefinitionExecutionRoleDefaultPolicy7CA81E4D",
        "Roles": [
          {
            "Ref": "CloudquerySourceDelegatedToSecurityAccountTaskDefinitionExecutionRole40841493",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceDelegatedToSecurityAccountTaskDefinitionTaskRole95A21336": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "DelegatedToSecurityAccount",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceDelegatedToSecurityAccountTaskDefinitionTaskRoleDefaultPolicy953F3BDF": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kinesis:Describe*",
                "kinesis:Put*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":kinesis:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":stream/",
                    {
                      "Ref": "LoggingStreamName",
                    },
                  ],
                ],
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": "arn:aws:iam::000000000015:role/cloudquery-access",
            },
            {
              "Action": "rds-db:connect",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":rds-db:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":dbuser:",
                    {
                      "Fn::GetAtt": [
                        "PostgresInstance16DE4286E",
                        "DbiResourceId",
                      ],
                    },
                    "/{{resolve:secretsmanager:",
                    {
                      "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                    },
                    ":SecretString:username::}}",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceDelegatedToSecurityAccountTaskDefinitionTaskRoleDefaultPolicy953F3BDF",
        "Roles": [
          {
            "Ref": "CloudquerySourceDelegatedToSecurityAccountTaskDefinitionTaskRole95A21336",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceDeployToolsListOrgsScheduledEventRuleDF9BD8AF": {
      "Properties": {
        "ScheduleExpression": "cron(* 10 1 1 ? *)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "servicecatalogueCluster5FC34DC5",
                "Arn",
              ],
            },
            "EcsParameters": {
              "LaunchType": "FARGATE",
              "NetworkConfiguration": {
                "AwsVpcConfiguration": {
                  "AssignPublicIp": "DISABLED",
                  "SecurityGroups": [
                    {
                      "Fn::GetAtt": [
                        "PostgresAccessSecurityGroupServicecatalogue03C78F14",
                        "GroupId",
                      ],
                    },
                  ],
                  "Subnets": {
                    "Ref": "PrivateSubnets",
                  },
                },
              },
              "TaskCount": 1,
              "TaskDefinitionArn": {
                "Ref": "CloudquerySourceDeployToolsListOrgsTaskDefinitionDE2A34D9",
              },
            },
            "Id": "Target0",
            "Input": "{}",
            "RoleArn": {
              "Fn::GetAtt": [
                "CloudquerySourceDeployToolsListOrgsTaskDefinitionEventsRole349D11D9",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "CloudquerySourceDeployToolsListOrgsTaskDefinitionCloudquerySourceDeployToolsListOrgsFirelensLogGroup27F2A6EA": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionInDays": 1,
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "DeployToolsListOrgs",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "CloudquerySourceDeployToolsListOrgsTaskDefinitionDE2A34D9": {
      "Properties": {
        "ContainerDefinitions": [
          {
            "Command": [
              "/bin/sh",
              "-c",
              "wget -O /usr/local/share/ca-certificates/global-bundle.crt -q https://truststore.pki.rds.amazonaws.com/global/global-bundle.pem && update-ca-certificates;printf 'kind: source
spec:
  name: aws
  path: cloudquery/aws
  version: v23.3.1
  tables:
    - aws_organization*
  destinations:
    - postgresql
  spec:
    regions:
      - eu-west-1
      - eu-west-2
      - us-east-1
      - us-east-2
      - us-west-1
      - ap-southeast-2
      - ca-central-1
    accounts:
      - id: cq-for-000000000018
        role_arn: arn:aws:iam::000000000018:role/cloudquery-access
' > /source.yaml;printf 'kind: destination
spec:
  name: postgresql
  registry: github
  path: cloudquery/postgresql
  version: v7.0.1
  migrate_mode: forced
  spec:
    connection_string: >-
      user=\${DB_USERNAME} password=\${DB_PASSWORD} host=\${DB_HOST} port=5432
      dbname=postgres sslmode=verify-full
' > /destination.yaml;/app/cloudquery sync /source.yaml /destination.yaml --log-format json --log-console",
            ],
            "DockerLabels": {
              "App": "service-catalogue",
              "Name": "DeployToolsListOrgs",
              "Stack": "deploy",
              "Stage": "TEST",
            },
            "EntryPoint": [
              "",
            ],
            "Environment": [
              {
                "Name": "GOMEMLIMIT",
                "Value": "409MiB",
              },
            ],
            "Essential": true,
            "Image": "ghcr.io/cloudquery/cloudquery:4.3.5",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "Name": "CloudquerySource-DeployToolsListOrgsContainer",
            "Secrets": [
              {
                "Name": "DB_USERNAME",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_HOST",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_PASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
              {
                "Name": "CLOUDQUERY_API_KEY",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "cloudqueryapikeyCCF82F53",
                      },
                      ":api-key::",
                    ],
                  ],
                },
              },
            ],
          },
          {
            "Command": [
              "/bin/sh",
              "-c",
              "psql -c "INSERT INTO cloudquery_table_frequency VALUES ('aws_organization%', 'DAILY') ON CONFLICT (table_name) DO UPDATE SET frequency = 'DAILY'"",
            ],
            "DockerLabels": {
              "App": "service-catalogue",
              "Name": "DeployToolsListOrgs",
              "Stack": "deploy",
              "Stage": "TEST",
            },
            "EntryPoint": [
              "",
            ],
            "Essential": false,
            "Image": "public.ecr.aws/docker/library/postgres:16-alpine",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "Name": "CloudquerySource-DeployToolsListOrgsPostgresContainer",
            "Secrets": [
              {
                "Name": "PGUSER",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              {
                "Name": "PGHOST",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              {
                "Name": "PGPASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
            ],
          },
          {
            "Environment": [
              {
                "Name": "STACK",
                "Value": "deploy",
              },
              {
                "Name": "STAGE",
                "Value": "TEST",
              },
              {
                "Name": "APP",
                "Value": "service-catalogue",
              },
              {
                "Name": "GU_REPO",
                "Value": "guardian/service-catalogue",
              },
            ],
            "Essential": true,
            "FirelensConfiguration": {
              "Type": "fluentbit",
            },
            "Image": "ghcr.io/guardian/devx-logs:2",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "CloudquerySourceDeployToolsListOrgsTaskDefinitionCloudquerySourceDeployToolsListOrgsFirelensLogGroup27F2A6EA",
                },
                "awslogs-region": {
                  "Ref": "AWS::Region",
                },
                "awslogs-stream-prefix": "deploy/TEST/service-catalogue",
              },
            },
            "Name": "CloudquerySource-DeployToolsListOrgsFirelens",
          },
        ],
        "Cpu": "256",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "CloudquerySourceDeployToolsListOrgsTaskDefinitionExecutionRole8F75CE49",
            "Arn",
          ],
        },
        "Family": "ServiceCatalogueCloudquerySourceDeployToolsListOrgsTaskDefinitionDB3242BB",
        "Memory": "512",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE",
        ],
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "DeployToolsListOrgs",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "CloudquerySourceDeployToolsListOrgsTaskDefinitionTaskRole1340B0DE",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "CloudquerySourceDeployToolsListOrgsTaskDefinitionEventsRole349D11D9": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "DeployToolsListOrgs",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceDeployToolsListOrgsTaskDefinitionEventsRoleDefaultPolicy229537D4": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ecs:RunTask",
              "Condition": {
                "ArnEquals": {
                  "ecs:cluster": {
                    "Fn::GetAtt": [
                      "servicecatalogueCluster5FC34DC5",
                      "Arn",
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Resource": {
                "Ref": "CloudquerySourceDeployToolsListOrgsTaskDefinitionDE2A34D9",
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceDeployToolsListOrgsTaskDefinitionExecutionRole8F75CE49",
                  "Arn",
                ],
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceDeployToolsListOrgsTaskDefinitionTaskRole1340B0DE",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceDeployToolsListOrgsTaskDefinitionEventsRoleDefaultPolicy229537D4",
        "Roles": [
          {
            "Ref": "CloudquerySourceDeployToolsListOrgsTaskDefinitionEventsRole349D11D9",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceDeployToolsListOrgsTaskDefinitionExecutionRole8F75CE49": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "DeployToolsListOrgs",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceDeployToolsListOrgsTaskDefinitionExecutionRoleDefaultPolicyDA54629E": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
              },
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "cloudqueryapikeyCCF82F53",
              },
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceDeployToolsListOrgsTaskDefinitionCloudquerySourceDeployToolsListOrgsFirelensLogGroup27F2A6EA",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceDeployToolsListOrgsTaskDefinitionExecutionRoleDefaultPolicyDA54629E",
        "Roles": [
          {
            "Ref": "CloudquerySourceDeployToolsListOrgsTaskDefinitionExecutionRole8F75CE49",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceDeployToolsListOrgsTaskDefinitionTaskRole1340B0DE": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "DeployToolsListOrgs",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceDeployToolsListOrgsTaskDefinitionTaskRoleDefaultPolicyBCA03B33": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kinesis:Describe*",
                "kinesis:Put*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":kinesis:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":stream/",
                    {
                      "Ref": "LoggingStreamName",
                    },
                  ],
                ],
              },
            },
            {
              "Action": "organizations:List*",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": "arn:aws:iam::000000000018:role/cloudquery-access",
            },
            {
              "Action": "rds-db:connect",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":rds-db:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":dbuser:",
                    {
                      "Fn::GetAtt": [
                        "PostgresInstance16DE4286E",
                        "DbiResourceId",
                      ],
                    },
                    "/{{resolve:secretsmanager:",
                    {
                      "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                    },
                    ":SecretString:username::}}",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceDeployToolsListOrgsTaskDefinitionTaskRoleDefaultPolicyBCA03B33",
        "Roles": [
          {
            "Ref": "CloudquerySourceDeployToolsListOrgsTaskDefinitionTaskRole1340B0DE",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceFastlyServicesScheduledEventRule1F83E593": {
      "Properties": {
        "ScheduleExpression": "rate(1 day)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "servicecatalogueCluster5FC34DC5",
                "Arn",
              ],
            },
            "EcsParameters": {
              "LaunchType": "FARGATE",
              "NetworkConfiguration": {
                "AwsVpcConfiguration": {
                  "AssignPublicIp": "DISABLED",
                  "SecurityGroups": [
                    {
                      "Fn::GetAtt": [
                        "PostgresAccessSecurityGroupServicecatalogue03C78F14",
                        "GroupId",
                      ],
                    },
                  ],
                  "Subnets": {
                    "Ref": "PrivateSubnets",
                  },
                },
              },
              "TaskCount": 1,
              "TaskDefinitionArn": {
                "Ref": "CloudquerySourceFastlyServicesTaskDefinitionDCCD3FD4",
              },
            },
            "Id": "Target0",
            "Input": "{}",
            "RoleArn": {
              "Fn::GetAtt": [
                "CloudquerySourceFastlyServicesTaskDefinitionEventsRoleE821B76C",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "CloudquerySourceFastlyServicesTaskDefinitionCloudquerySourceFastlyServicesFirelensLogGroupF5954401": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionInDays": 1,
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "FastlyServices",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "CloudquerySourceFastlyServicesTaskDefinitionDCCD3FD4": {
      "Properties": {
        "ContainerDefinitions": [
          {
            "Command": [
              "/bin/sh",
              "-c",
              "wget -O /usr/local/share/ca-certificates/global-bundle.crt -q https://truststore.pki.rds.amazonaws.com/global/global-bundle.pem && update-ca-certificates;printf 'kind: source
spec:
  name: fastly
  path: cloudquery/fastly
  version: v2.1.12
  tables:
    - fastly_services
    - fastly_service_versions
    - fastly_service_backends
    - fastly_service_domains
    - fastly_service_health_checks
    - fastly_account_users
  destinations:
    - postgresql
  concurrency: 1000
  spec:
    fastly_api_key: \${FASTLY_API_KEY}
' > /source.yaml;printf 'kind: destination
spec:
  name: postgresql
  registry: github
  path: cloudquery/postgresql
  version: v7.0.1
  migrate_mode: forced
  spec:
    connection_string: >-
      user=\${DB_USERNAME} password=\${DB_PASSWORD} host=\${DB_HOST} port=5432
      dbname=postgres sslmode=verify-full
' > /destination.yaml;/app/cloudquery sync /source.yaml /destination.yaml --log-format json --log-console",
            ],
            "DockerLabels": {
              "App": "service-catalogue",
              "Name": "FastlyServices",
              "Stack": "deploy",
              "Stage": "TEST",
            },
            "EntryPoint": [
              "",
            ],
            "Environment": [
              {
                "Name": "GOMEMLIMIT",
                "Value": "409MiB",
              },
            ],
            "Essential": true,
            "Image": "ghcr.io/cloudquery/cloudquery:4.3.5",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "Name": "CloudquerySource-FastlyServicesContainer",
            "Secrets": [
              {
                "Name": "FASTLY_API_KEY",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "fastlycredentialsF42D3C80",
                      },
                      ":api-key::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_USERNAME",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_HOST",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_PASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
              {
                "Name": "CLOUDQUERY_API_KEY",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "cloudqueryapikeyCCF82F53",
                      },
                      ":api-key::",
                    ],
                  ],
                },
              },
            ],
          },
          {
            "Command": [
              "/bin/sh",
              "-c",
              "psql -c "INSERT INTO cloudquery_table_frequency VALUES ('fastly_services', 'DAILY'),('fastly_service_versions', 'DAILY'),('fastly_service_backends', 'DAILY'),('fastly_service_domains', 'DAILY'),('fastly_service_health_checks', 'DAILY'),('fastly_account_users', 'DAILY') ON CONFLICT (table_name) DO UPDATE SET frequency = 'DAILY'"",
            ],
            "DockerLabels": {
              "App": "service-catalogue",
              "Name": "FastlyServices",
              "Stack": "deploy",
              "Stage": "TEST",
            },
            "EntryPoint": [
              "",
            ],
            "Essential": false,
            "Image": "public.ecr.aws/docker/library/postgres:16-alpine",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "Name": "CloudquerySource-FastlyServicesPostgresContainer",
            "Secrets": [
              {
                "Name": "PGUSER",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              {
                "Name": "PGHOST",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              {
                "Name": "PGPASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
            ],
          },
          {
            "Environment": [
              {
                "Name": "STACK",
                "Value": "deploy",
              },
              {
                "Name": "STAGE",
                "Value": "TEST",
              },
              {
                "Name": "APP",
                "Value": "service-catalogue",
              },
              {
                "Name": "GU_REPO",
                "Value": "guardian/service-catalogue",
              },
            ],
            "Essential": true,
            "FirelensConfiguration": {
              "Type": "fluentbit",
            },
            "Image": "ghcr.io/guardian/devx-logs:2",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "CloudquerySourceFastlyServicesTaskDefinitionCloudquerySourceFastlyServicesFirelensLogGroupF5954401",
                },
                "awslogs-region": {
                  "Ref": "AWS::Region",
                },
                "awslogs-stream-prefix": "deploy/TEST/service-catalogue",
              },
            },
            "Name": "CloudquerySource-FastlyServicesFirelens",
          },
        ],
        "Cpu": "256",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "CloudquerySourceFastlyServicesTaskDefinitionExecutionRoleEF21A3A9",
            "Arn",
          ],
        },
        "Family": "ServiceCatalogueCloudquerySourceFastlyServicesTaskDefinition92125649",
        "Memory": "512",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE",
        ],
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "FastlyServices",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "CloudquerySourceFastlyServicesTaskDefinitionTaskRole83C775A7",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "CloudquerySourceFastlyServicesTaskDefinitionEventsRoleDefaultPolicy4E34F504": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ecs:RunTask",
              "Condition": {
                "ArnEquals": {
                  "ecs:cluster": {
                    "Fn::GetAtt": [
                      "servicecatalogueCluster5FC34DC5",
                      "Arn",
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Resource": {
                "Ref": "CloudquerySourceFastlyServicesTaskDefinitionDCCD3FD4",
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceFastlyServicesTaskDefinitionExecutionRoleEF21A3A9",
                  "Arn",
                ],
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceFastlyServicesTaskDefinitionTaskRole83C775A7",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceFastlyServicesTaskDefinitionEventsRoleDefaultPolicy4E34F504",
        "Roles": [
          {
            "Ref": "CloudquerySourceFastlyServicesTaskDefinitionEventsRoleE821B76C",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceFastlyServicesTaskDefinitionEventsRoleE821B76C": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "FastlyServices",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceFastlyServicesTaskDefinitionExecutionRoleDefaultPolicy1B888D16": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "fastlycredentialsF42D3C80",
              },
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
              },
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "cloudqueryapikeyCCF82F53",
              },
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceFastlyServicesTaskDefinitionCloudquerySourceFastlyServicesFirelensLogGroupF5954401",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceFastlyServicesTaskDefinitionExecutionRoleDefaultPolicy1B888D16",
        "Roles": [
          {
            "Ref": "CloudquerySourceFastlyServicesTaskDefinitionExecutionRoleEF21A3A9",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceFastlyServicesTaskDefinitionExecutionRoleEF21A3A9": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "FastlyServices",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceFastlyServicesTaskDefinitionTaskRole83C775A7": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "FastlyServices",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceFastlyServicesTaskDefinitionTaskRoleDefaultPolicy81E15098": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kinesis:Describe*",
                "kinesis:Put*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":kinesis:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":stream/",
                    {
                      "Ref": "LoggingStreamName",
                    },
                  ],
                ],
              },
            },
            {
              "Action": "rds-db:connect",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":rds-db:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":dbuser:",
                    {
                      "Fn::GetAtt": [
                        "PostgresInstance16DE4286E",
                        "DbiResourceId",
                      ],
                    },
                    "/{{resolve:secretsmanager:",
                    {
                      "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                    },
                    ":SecretString:username::}}",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceFastlyServicesTaskDefinitionTaskRoleDefaultPolicy81E15098",
        "Roles": [
          {
            "Ref": "CloudquerySourceFastlyServicesTaskDefinitionTaskRole83C775A7",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceGalaxiesScheduledEventRuleCC774CB8": {
      "Properties": {
        "ScheduleExpression": "rate(1 day)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "servicecatalogueCluster5FC34DC5",
                "Arn",
              ],
            },
            "EcsParameters": {
              "LaunchType": "FARGATE",
              "NetworkConfiguration": {
                "AwsVpcConfiguration": {
                  "AssignPublicIp": "DISABLED",
                  "SecurityGroups": [
                    {
                      "Fn::GetAtt": [
                        "PostgresAccessSecurityGroupServicecatalogue03C78F14",
                        "GroupId",
                      ],
                    },
                  ],
                  "Subnets": {
                    "Ref": "PrivateSubnets",
                  },
                },
              },
              "TaskCount": 1,
              "TaskDefinitionArn": {
                "Ref": "CloudquerySourceGalaxiesTaskDefinition0777FEFC",
              },
            },
            "Id": "Target0",
            "Input": "{}",
            "RoleArn": {
              "Fn::GetAtt": [
                "CloudquerySourceGalaxiesTaskDefinitionEventsRoleD1AF9A82",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "CloudquerySourceGalaxiesTaskDefinition0777FEFC": {
      "Properties": {
        "ContainerDefinitions": [
          {
            "Command": [
              "/bin/sh",
              "-c",
              {
                "Fn::Join": [
                  "",
                  [
                    "wget -O /usr/local/share/ca-certificates/global-bundle.crt -q https://truststore.pki.rds.amazonaws.com/global/global-bundle.pem && update-ca-certificates;printf 'kind: source
spec:
  name: galaxies
  path: guardian/galaxies
  registry: github
  version: v1.1.0
  destinations:
    - postgresql
  tables:
    - galaxies_people_table
    - galaxies_teams_table
    - galaxies_streams_table
    - galaxies_people_profile_info_table
  spec:
    bucket: ",
                    {
                      "Fn::Select": [
                        0,
                        {
                          "Fn::Split": [
                            "/",
                            {
                              "Fn::Select": [
                                5,
                                {
                                  "Fn::Split": [
                                    ":",
                                    {
                                      "Ref": "ActionsStaticSiteBucketArnParam",
                                    },
                                  ],
                                },
                              ],
                            },
                          ],
                        },
                      ],
                    },
                    "
' > /source.yaml;printf 'kind: destination
spec:
  name: postgresql
  registry: github
  path: cloudquery/postgresql
  version: v7.0.1
  migrate_mode: forced
  spec:
    connection_string: >-
      user=\${DB_USERNAME} password=\${DB_PASSWORD} host=\${DB_HOST} port=5432
      dbname=postgres sslmode=verify-full
' > /destination.yaml;/app/cloudquery sync /source.yaml /destination.yaml --log-format json --log-console",
                  ],
                ],
              },
            ],
            "DockerLabels": {
              "App": "service-catalogue",
              "Name": "Galaxies",
              "Stack": "deploy",
              "Stage": "TEST",
            },
            "EntryPoint": [
              "",
            ],
            "Environment": [
              {
                "Name": "GOMEMLIMIT",
                "Value": "409MiB",
              },
            ],
            "Essential": true,
            "Image": "ghcr.io/cloudquery/cloudquery:4.3.5",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "Name": "CloudquerySource-GalaxiesContainer",
            "Secrets": [
              {
                "Name": "DB_USERNAME",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_HOST",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_PASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
              {
                "Name": "CLOUDQUERY_API_KEY",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "cloudqueryapikeyCCF82F53",
                      },
                      ":api-key::",
                    ],
                  ],
                },
              },
            ],
          },
          {
            "Command": [
              "/bin/sh",
              "-c",
              "psql -c "INSERT INTO cloudquery_table_frequency VALUES ('galaxies_people_table', 'DAILY'),('galaxies_teams_table', 'DAILY'),('galaxies_streams_table', 'DAILY'),('galaxies_people_profile_info_table', 'DAILY') ON CONFLICT (table_name) DO UPDATE SET frequency = 'DAILY'"",
            ],
            "DockerLabels": {
              "App": "service-catalogue",
              "Name": "Galaxies",
              "Stack": "deploy",
              "Stage": "TEST",
            },
            "EntryPoint": [
              "",
            ],
            "Essential": false,
            "Image": "public.ecr.aws/docker/library/postgres:16-alpine",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "Name": "CloudquerySource-GalaxiesPostgresContainer",
            "Secrets": [
              {
                "Name": "PGUSER",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              {
                "Name": "PGHOST",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              {
                "Name": "PGPASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
            ],
          },
          {
            "Environment": [
              {
                "Name": "STACK",
                "Value": "deploy",
              },
              {
                "Name": "STAGE",
                "Value": "TEST",
              },
              {
                "Name": "APP",
                "Value": "service-catalogue",
              },
              {
                "Name": "GU_REPO",
                "Value": "guardian/service-catalogue",
              },
            ],
            "Essential": true,
            "FirelensConfiguration": {
              "Type": "fluentbit",
            },
            "Image": "ghcr.io/guardian/devx-logs:2",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "CloudquerySourceGalaxiesTaskDefinitionCloudquerySourceGalaxiesFirelensLogGroupB5272E0D",
                },
                "awslogs-region": {
                  "Ref": "AWS::Region",
                },
                "awslogs-stream-prefix": "deploy/TEST/service-catalogue",
              },
            },
            "Name": "CloudquerySource-GalaxiesFirelens",
          },
        ],
        "Cpu": "256",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "CloudquerySourceGalaxiesTaskDefinitionExecutionRoleDDB0DD4B",
            "Arn",
          ],
        },
        "Family": "ServiceCatalogueCloudquerySourceGalaxiesTaskDefinition6724C33F",
        "Memory": "512",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE",
        ],
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "Galaxies",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "CloudquerySourceGalaxiesTaskDefinitionTaskRole0FC08F83",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "CloudquerySourceGalaxiesTaskDefinitionCloudquerySourceGalaxiesFirelensLogGroupB5272E0D": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionInDays": 1,
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "Galaxies",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "CloudquerySourceGalaxiesTaskDefinitionEventsRoleD1AF9A82": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "Galaxies",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceGalaxiesTaskDefinitionEventsRoleDefaultPolicy022DA6EA": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ecs:RunTask",
              "Condition": {
                "ArnEquals": {
                  "ecs:cluster": {
                    "Fn::GetAtt": [
                      "servicecatalogueCluster5FC34DC5",
                      "Arn",
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Resource": {
                "Ref": "CloudquerySourceGalaxiesTaskDefinition0777FEFC",
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceGalaxiesTaskDefinitionExecutionRoleDDB0DD4B",
                  "Arn",
                ],
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceGalaxiesTaskDefinitionTaskRole0FC08F83",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceGalaxiesTaskDefinitionEventsRoleDefaultPolicy022DA6EA",
        "Roles": [
          {
            "Ref": "CloudquerySourceGalaxiesTaskDefinitionEventsRoleD1AF9A82",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceGalaxiesTaskDefinitionExecutionRoleDDB0DD4B": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "Galaxies",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceGalaxiesTaskDefinitionExecutionRoleDefaultPolicyB6D2CB7A": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
              },
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "cloudqueryapikeyCCF82F53",
              },
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceGalaxiesTaskDefinitionCloudquerySourceGalaxiesFirelensLogGroupB5272E0D",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceGalaxiesTaskDefinitionExecutionRoleDefaultPolicyB6D2CB7A",
        "Roles": [
          {
            "Ref": "CloudquerySourceGalaxiesTaskDefinitionExecutionRoleDDB0DD4B",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceGalaxiesTaskDefinitionTaskRole0FC08F83": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "Galaxies",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceGalaxiesTaskDefinitionTaskRoleDefaultPolicy58C64BC8": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kinesis:Describe*",
                "kinesis:Put*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":kinesis:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":stream/",
                    {
                      "Ref": "LoggingStreamName",
                    },
                  ],
                ],
              },
            },
            {
              "Action": "s3:GetObject",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Ref": "ActionsStaticSiteBucketArnParam",
                    },
                    "/galaxies.gutools.co.uk/data/*",
                  ],
                ],
              },
            },
            {
              "Action": "rds-db:connect",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":rds-db:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":dbuser:",
                    {
                      "Fn::GetAtt": [
                        "PostgresInstance16DE4286E",
                        "DbiResourceId",
                      ],
                    },
                    "/{{resolve:secretsmanager:",
                    {
                      "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                    },
                    ":SecretString:username::}}",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceGalaxiesTaskDefinitionTaskRoleDefaultPolicy58C64BC8",
        "Roles": [
          {
            "Ref": "CloudquerySourceGalaxiesTaskDefinitionTaskRole0FC08F83",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceGitHubIssuesScheduledEventRuleAF7C253C": {
      "Properties": {
        "ScheduleExpression": "cron(0 2 * * ? *)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "servicecatalogueCluster5FC34DC5",
                "Arn",
              ],
            },
            "EcsParameters": {
              "LaunchType": "FARGATE",
              "NetworkConfiguration": {
                "AwsVpcConfiguration": {
                  "AssignPublicIp": "DISABLED",
                  "SecurityGroups": [
                    {
                      "Fn::GetAtt": [
                        "PostgresAccessSecurityGroupServicecatalogue03C78F14",
                        "GroupId",
                      ],
                    },
                  ],
                  "Subnets": {
                    "Ref": "PrivateSubnets",
                  },
                },
              },
              "TaskCount": 1,
              "TaskDefinitionArn": {
                "Ref": "CloudquerySourceGitHubIssuesTaskDefinitionFA21D536",
              },
            },
            "Id": "Target0",
            "Input": "{}",
            "RoleArn": {
              "Fn::GetAtt": [
                "CloudquerySourceGitHubIssuesTaskDefinitionEventsRole056ACC7E",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "CloudquerySourceGitHubIssuesTaskDefinitionCloudquerySourceGitHubIssuesFirelensLogGroupE9112ED9": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionInDays": 1,
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "GitHubIssues",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "CloudquerySourceGitHubIssuesTaskDefinitionEventsRole056ACC7E": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "GitHubIssues",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceGitHubIssuesTaskDefinitionEventsRoleDefaultPolicy13E8811A": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ecs:RunTask",
              "Condition": {
                "ArnEquals": {
                  "ecs:cluster": {
                    "Fn::GetAtt": [
                      "servicecatalogueCluster5FC34DC5",
                      "Arn",
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Resource": {
                "Ref": "CloudquerySourceGitHubIssuesTaskDefinitionFA21D536",
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceGitHubIssuesTaskDefinitionExecutionRole6BDDECB3",
                  "Arn",
                ],
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceGitHubIssuesTaskDefinitionTaskRoleB3C56ACA",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceGitHubIssuesTaskDefinitionEventsRoleDefaultPolicy13E8811A",
        "Roles": [
          {
            "Ref": "CloudquerySourceGitHubIssuesTaskDefinitionEventsRole056ACC7E",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceGitHubIssuesTaskDefinitionExecutionRole6BDDECB3": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "GitHubIssues",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceGitHubIssuesTaskDefinitionExecutionRoleDefaultPolicyFA58BC48": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "githubcredentialsAF453741",
              },
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
              },
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "cloudqueryapikeyCCF82F53",
              },
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceGitHubIssuesTaskDefinitionCloudquerySourceGitHubIssuesFirelensLogGroupE9112ED9",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceGitHubIssuesTaskDefinitionExecutionRoleDefaultPolicyFA58BC48",
        "Roles": [
          {
            "Ref": "CloudquerySourceGitHubIssuesTaskDefinitionExecutionRole6BDDECB3",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceGitHubIssuesTaskDefinitionFA21D536": {
      "Properties": {
        "ContainerDefinitions": [
          {
            "Command": [
              "/bin/sh",
              "-c",
              "echo $GITHUB_PRIVATE_KEY | base64 -d > /github-private-key;echo $GITHUB_APP_ID > /github-app-id;echo $GITHUB_INSTALLATION_ID > /github-installation-id;wget -O /usr/local/share/ca-certificates/global-bundle.crt -q https://truststore.pki.rds.amazonaws.com/global/global-bundle.pem && update-ca-certificates;printf 'kind: source
spec:
  name: github
  path: cloudquery/github
  version: v7.4.2
  tables:
    - github_issues
  destinations:
    - postgresql
  concurrency: 1000
  spec:
    orgs:
      - guardian
    app_auth:
      - org: guardian
        private_key_path: /github-private-key
        app_id: \${file:/github-app-id}
        installation_id: \${file:/github-installation-id}
' > /source.yaml;printf 'kind: destination
spec:
  name: postgresql
  registry: github
  path: cloudquery/postgresql
  version: v7.0.1
  migrate_mode: forced
  spec:
    connection_string: >-
      user=\${DB_USERNAME} password=\${DB_PASSWORD} host=\${DB_HOST} port=5432
      dbname=postgres sslmode=verify-full
' > /destination.yaml;/app/cloudquery sync /source.yaml /destination.yaml --log-format json --log-console",
            ],
            "DockerLabels": {
              "App": "service-catalogue",
              "Name": "GitHubIssues",
              "Stack": "deploy",
              "Stage": "TEST",
            },
            "EntryPoint": [
              "",
            ],
            "Environment": [
              {
                "Name": "GOMEMLIMIT",
                "Value": "819MiB",
              },
            ],
            "Essential": true,
            "Image": "ghcr.io/cloudquery/cloudquery:4.3.5",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "Name": "CloudquerySource-GitHubIssuesContainer",
            "Secrets": [
              {
                "Name": "GITHUB_PRIVATE_KEY",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "githubcredentialsAF453741",
                      },
                      ":private-key::",
                    ],
                  ],
                },
              },
              {
                "Name": "GITHUB_APP_ID",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "githubcredentialsAF453741",
                      },
                      ":app-id::",
                    ],
                  ],
                },
              },
              {
                "Name": "GITHUB_INSTALLATION_ID",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "githubcredentialsAF453741",
                      },
                      ":installation-id::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_USERNAME",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_HOST",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_PASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
              {
                "Name": "CLOUDQUERY_API_KEY",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "cloudqueryapikeyCCF82F53",
                      },
                      ":api-key::",
                    ],
                  ],
                },
              },
            ],
          },
          {
            "Command": [
              "/bin/sh",
              "-c",
              "psql -c "INSERT INTO cloudquery_table_frequency VALUES ('github_issues', 'DAILY') ON CONFLICT (table_name) DO UPDATE SET frequency = 'DAILY'"",
            ],
            "DockerLabels": {
              "App": "service-catalogue",
              "Name": "GitHubIssues",
              "Stack": "deploy",
              "Stage": "TEST",
            },
            "EntryPoint": [
              "",
            ],
            "Essential": false,
            "Image": "public.ecr.aws/docker/library/postgres:16-alpine",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "Name": "CloudquerySource-GitHubIssuesPostgresContainer",
            "Secrets": [
              {
                "Name": "PGUSER",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              {
                "Name": "PGHOST",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              {
                "Name": "PGPASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
            ],
          },
          {
            "Environment": [
              {
                "Name": "STACK",
                "Value": "deploy",
              },
              {
                "Name": "STAGE",
                "Value": "TEST",
              },
              {
                "Name": "APP",
                "Value": "service-catalogue",
              },
              {
                "Name": "GU_REPO",
                "Value": "guardian/service-catalogue",
              },
            ],
            "Essential": true,
            "FirelensConfiguration": {
              "Type": "fluentbit",
            },
            "Image": "ghcr.io/guardian/devx-logs:2",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "CloudquerySourceGitHubIssuesTaskDefinitionCloudquerySourceGitHubIssuesFirelensLogGroupE9112ED9",
                },
                "awslogs-region": {
                  "Ref": "AWS::Region",
                },
                "awslogs-stream-prefix": "deploy/TEST/service-catalogue",
              },
            },
            "Name": "CloudquerySource-GitHubIssuesFirelens",
          },
        ],
        "Cpu": "256",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "CloudquerySourceGitHubIssuesTaskDefinitionExecutionRole6BDDECB3",
            "Arn",
          ],
        },
        "Family": "ServiceCatalogueCloudquerySourceGitHubIssuesTaskDefinition750BB414",
        "Memory": "1024",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE",
        ],
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "GitHubIssues",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "CloudquerySourceGitHubIssuesTaskDefinitionTaskRoleB3C56ACA",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "CloudquerySourceGitHubIssuesTaskDefinitionTaskRoleB3C56ACA": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "GitHubIssues",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceGitHubIssuesTaskDefinitionTaskRoleDefaultPolicy64DD9FA6": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kinesis:Describe*",
                "kinesis:Put*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":kinesis:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":stream/",
                    {
                      "Ref": "LoggingStreamName",
                    },
                  ],
                ],
              },
            },
            {
              "Action": "rds-db:connect",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":rds-db:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":dbuser:",
                    {
                      "Fn::GetAtt": [
                        "PostgresInstance16DE4286E",
                        "DbiResourceId",
                      ],
                    },
                    "/{{resolve:secretsmanager:",
                    {
                      "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                    },
                    ":SecretString:username::}}",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceGitHubIssuesTaskDefinitionTaskRoleDefaultPolicy64DD9FA6",
        "Roles": [
          {
            "Ref": "CloudquerySourceGitHubIssuesTaskDefinitionTaskRoleB3C56ACA",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceGitHubLanguagesScheduledEventRule3F047D8E": {
      "Properties": {
        "ScheduleExpression": "rate(7 days)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "servicecatalogueCluster5FC34DC5",
                "Arn",
              ],
            },
            "EcsParameters": {
              "LaunchType": "FARGATE",
              "NetworkConfiguration": {
                "AwsVpcConfiguration": {
                  "AssignPublicIp": "DISABLED",
                  "SecurityGroups": [
                    {
                      "Fn::GetAtt": [
                        "PostgresAccessSecurityGroupServicecatalogue03C78F14",
                        "GroupId",
                      ],
                    },
                  ],
                  "Subnets": {
                    "Ref": "PrivateSubnets",
                  },
                },
              },
              "TaskCount": 1,
              "TaskDefinitionArn": {
                "Ref": "CloudquerySourceGitHubLanguagesTaskDefinitionDA995E2B",
              },
            },
            "Id": "Target0",
            "Input": "{}",
            "RoleArn": {
              "Fn::GetAtt": [
                "CloudquerySourceGitHubLanguagesTaskDefinitionEventsRoleD0480706",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "CloudquerySourceGitHubLanguagesTaskDefinitionCloudquerySourceGitHubLanguagesFirelensLogGroup38EAAC3E": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionInDays": 1,
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "GitHubLanguages",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "CloudquerySourceGitHubLanguagesTaskDefinitionDA995E2B": {
      "Properties": {
        "ContainerDefinitions": [
          {
            "Command": [
              "/bin/sh",
              "-c",
              "wget -O /usr/local/share/ca-certificates/global-bundle.crt -q https://truststore.pki.rds.amazonaws.com/global/global-bundle.pem && update-ca-certificates;printf 'kind: source
spec:
  name: github-languages
  path: guardian/github-languages
  version: v0.0.4
  destinations:
    - postgresql
  tables:
    - github_languages
  registry: github
' > /source.yaml;printf 'kind: destination
spec:
  name: postgresql
  registry: github
  path: cloudquery/postgresql
  version: v7.0.1
  migrate_mode: forced
  spec:
    connection_string: >-
      user=\${DB_USERNAME} password=\${DB_PASSWORD} host=\${DB_HOST} port=5432
      dbname=postgres sslmode=verify-full
' > /destination.yaml;/app/cloudquery sync /source.yaml /destination.yaml --log-format json --log-console",
            ],
            "DockerLabels": {
              "App": "service-catalogue",
              "Name": "GitHubLanguages",
              "Stack": "deploy",
              "Stage": "TEST",
            },
            "EntryPoint": [
              "",
            ],
            "Environment": [
              {
                "Name": "GOMEMLIMIT",
                "Value": "409MiB",
              },
            ],
            "Essential": true,
            "Image": "ghcr.io/cloudquery/cloudquery:4.3.5",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "Name": "CloudquerySource-GitHubLanguagesContainer",
            "Secrets": [
              {
                "Name": "GITHUB_ACCESS_TOKEN",
                "ValueFrom": {
                  "Ref": "githublanguages5093EDEC",
                },
              },
              {
                "Name": "DB_USERNAME",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_HOST",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_PASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
              {
                "Name": "CLOUDQUERY_API_KEY",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "cloudqueryapikeyCCF82F53",
                      },
                      ":api-key::",
                    ],
                  ],
                },
              },
            ],
          },
          {
            "Command": [
              "/bin/sh",
              "-c",
              "psql -c "INSERT INTO cloudquery_table_frequency VALUES ('github_languages', 'WEEKLY') ON CONFLICT (table_name) DO UPDATE SET frequency = 'WEEKLY'"",
            ],
            "DockerLabels": {
              "App": "service-catalogue",
              "Name": "GitHubLanguages",
              "Stack": "deploy",
              "Stage": "TEST",
            },
            "EntryPoint": [
              "",
            ],
            "Essential": false,
            "Image": "public.ecr.aws/docker/library/postgres:16-alpine",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "Name": "CloudquerySource-GitHubLanguagesPostgresContainer",
            "Secrets": [
              {
                "Name": "PGUSER",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              {
                "Name": "PGHOST",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              {
                "Name": "PGPASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
            ],
          },
          {
            "Environment": [
              {
                "Name": "STACK",
                "Value": "deploy",
              },
              {
                "Name": "STAGE",
                "Value": "TEST",
              },
              {
                "Name": "APP",
                "Value": "service-catalogue",
              },
              {
                "Name": "GU_REPO",
                "Value": "guardian/service-catalogue",
              },
            ],
            "Essential": true,
            "FirelensConfiguration": {
              "Type": "fluentbit",
            },
            "Image": "ghcr.io/guardian/devx-logs:2",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "CloudquerySourceGitHubLanguagesTaskDefinitionCloudquerySourceGitHubLanguagesFirelensLogGroup38EAAC3E",
                },
                "awslogs-region": {
                  "Ref": "AWS::Region",
                },
                "awslogs-stream-prefix": "deploy/TEST/service-catalogue",
              },
            },
            "Name": "CloudquerySource-GitHubLanguagesFirelens",
          },
        ],
        "Cpu": "256",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "CloudquerySourceGitHubLanguagesTaskDefinitionExecutionRoleB77C8E3D",
            "Arn",
          ],
        },
        "Family": "ServiceCatalogueCloudquerySourceGitHubLanguagesTaskDefinitionB1DA60BF",
        "Memory": "512",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE",
        ],
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "GitHubLanguages",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "CloudquerySourceGitHubLanguagesTaskDefinitionTaskRole6D776FE0",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "CloudquerySourceGitHubLanguagesTaskDefinitionEventsRoleD0480706": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "GitHubLanguages",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceGitHubLanguagesTaskDefinitionEventsRoleDefaultPolicy1B11BE73": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ecs:RunTask",
              "Condition": {
                "ArnEquals": {
                  "ecs:cluster": {
                    "Fn::GetAtt": [
                      "servicecatalogueCluster5FC34DC5",
                      "Arn",
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Resource": {
                "Ref": "CloudquerySourceGitHubLanguagesTaskDefinitionDA995E2B",
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceGitHubLanguagesTaskDefinitionExecutionRoleB77C8E3D",
                  "Arn",
                ],
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceGitHubLanguagesTaskDefinitionTaskRole6D776FE0",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceGitHubLanguagesTaskDefinitionEventsRoleDefaultPolicy1B11BE73",
        "Roles": [
          {
            "Ref": "CloudquerySourceGitHubLanguagesTaskDefinitionEventsRoleD0480706",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceGitHubLanguagesTaskDefinitionExecutionRoleB77C8E3D": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "GitHubLanguages",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceGitHubLanguagesTaskDefinitionExecutionRoleDefaultPolicy9D57CA88": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "githublanguages5093EDEC",
              },
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
              },
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "cloudqueryapikeyCCF82F53",
              },
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceGitHubLanguagesTaskDefinitionCloudquerySourceGitHubLanguagesFirelensLogGroup38EAAC3E",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceGitHubLanguagesTaskDefinitionExecutionRoleDefaultPolicy9D57CA88",
        "Roles": [
          {
            "Ref": "CloudquerySourceGitHubLanguagesTaskDefinitionExecutionRoleB77C8E3D",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceGitHubLanguagesTaskDefinitionTaskRole6D776FE0": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "GitHubLanguages",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceGitHubLanguagesTaskDefinitionTaskRoleDefaultPolicy25B85B31": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kinesis:Describe*",
                "kinesis:Put*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":kinesis:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":stream/",
                    {
                      "Ref": "LoggingStreamName",
                    },
                  ],
                ],
              },
            },
            {
              "Action": "rds-db:connect",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":rds-db:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":dbuser:",
                    {
                      "Fn::GetAtt": [
                        "PostgresInstance16DE4286E",
                        "DbiResourceId",
                      ],
                    },
                    "/{{resolve:secretsmanager:",
                    {
                      "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                    },
                    ":SecretString:username::}}",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceGitHubLanguagesTaskDefinitionTaskRoleDefaultPolicy25B85B31",
        "Roles": [
          {
            "Ref": "CloudquerySourceGitHubLanguagesTaskDefinitionTaskRole6D776FE0",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceGitHubRepositoriesScheduledEventRuleC7F5836E": {
      "Properties": {
        "ScheduleExpression": "cron(0 0 * * ? *)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "servicecatalogueCluster5FC34DC5",
                "Arn",
              ],
            },
            "EcsParameters": {
              "LaunchType": "FARGATE",
              "NetworkConfiguration": {
                "AwsVpcConfiguration": {
                  "AssignPublicIp": "DISABLED",
                  "SecurityGroups": [
                    {
                      "Fn::GetAtt": [
                        "PostgresAccessSecurityGroupServicecatalogue03C78F14",
                        "GroupId",
                      ],
                    },
                  ],
                  "Subnets": {
                    "Ref": "PrivateSubnets",
                  },
                },
              },
              "TaskCount": 1,
              "TaskDefinitionArn": {
                "Ref": "CloudquerySourceGitHubRepositoriesTaskDefinition921DC1BC",
              },
            },
            "Id": "Target0",
            "Input": "{}",
            "RoleArn": {
              "Fn::GetAtt": [
                "CloudquerySourceGitHubRepositoriesTaskDefinitionEventsRole93DB1A26",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "CloudquerySourceGitHubRepositoriesTaskDefinition921DC1BC": {
      "Properties": {
        "ContainerDefinitions": [
          {
            "Command": [
              "/bin/sh",
              "-c",
              "echo $GITHUB_PRIVATE_KEY | base64 -d > /github-private-key;echo $GITHUB_APP_ID > /github-app-id;echo $GITHUB_INSTALLATION_ID > /github-installation-id;wget -O /usr/local/share/ca-certificates/global-bundle.crt -q https://truststore.pki.rds.amazonaws.com/global/global-bundle.pem && update-ca-certificates;printf 'kind: source
spec:
  name: github
  path: cloudquery/github
  version: v7.4.2
  tables:
    - github_repositories
    - github_repository_branches
    - github_workflows
  skip_tables:
    - github_releases
    - github_release_assets
    - github_repository_dependabot_alerts
    - github_repository_dependabot_secrets
  destinations:
    - postgresql
  concurrency: 1000
  spec:
    orgs:
      - guardian
    app_auth:
      - org: guardian
        private_key_path: /github-private-key
        app_id: \${file:/github-app-id}
        installation_id: \${file:/github-installation-id}
' > /source.yaml;printf 'kind: destination
spec:
  name: postgresql
  registry: github
  path: cloudquery/postgresql
  version: v7.0.1
  migrate_mode: forced
  spec:
    connection_string: >-
      user=\${DB_USERNAME} password=\${DB_PASSWORD} host=\${DB_HOST} port=5432
      dbname=postgres sslmode=verify-full
' > /destination.yaml;/app/cloudquery sync /source.yaml /destination.yaml --log-format json --log-console",
            ],
            "DockerLabels": {
              "App": "service-catalogue",
              "Name": "GitHubRepositories",
              "Stack": "deploy",
              "Stage": "TEST",
            },
            "EntryPoint": [
              "",
            ],
            "Environment": [
              {
                "Name": "GOMEMLIMIT",
                "Value": "409MiB",
              },
            ],
            "Essential": true,
            "Image": "ghcr.io/cloudquery/cloudquery:4.3.5",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "Name": "CloudquerySource-GitHubRepositoriesContainer",
            "Secrets": [
              {
                "Name": "GITHUB_PRIVATE_KEY",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "githubcredentialsAF453741",
                      },
                      ":private-key::",
                    ],
                  ],
                },
              },
              {
                "Name": "GITHUB_APP_ID",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "githubcredentialsAF453741",
                      },
                      ":app-id::",
                    ],
                  ],
                },
              },
              {
                "Name": "GITHUB_INSTALLATION_ID",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "githubcredentialsAF453741",
                      },
                      ":installation-id::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_USERNAME",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_HOST",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_PASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
              {
                "Name": "CLOUDQUERY_API_KEY",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "cloudqueryapikeyCCF82F53",
                      },
                      ":api-key::",
                    ],
                  ],
                },
              },
            ],
          },
          {
            "Command": [
              "/bin/sh",
              "-c",
              "psql -c "INSERT INTO cloudquery_table_frequency VALUES ('github_repositories', 'DAILY'),('github_repository_branches', 'DAILY'),('github_workflows', 'DAILY') ON CONFLICT (table_name) DO UPDATE SET frequency = 'DAILY'"",
            ],
            "DockerLabels": {
              "App": "service-catalogue",
              "Name": "GitHubRepositories",
              "Stack": "deploy",
              "Stage": "TEST",
            },
            "EntryPoint": [
              "",
            ],
            "Essential": false,
            "Image": "public.ecr.aws/docker/library/postgres:16-alpine",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "Name": "CloudquerySource-GitHubRepositoriesPostgresContainer",
            "Secrets": [
              {
                "Name": "PGUSER",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              {
                "Name": "PGHOST",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              {
                "Name": "PGPASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
            ],
          },
          {
            "Environment": [
              {
                "Name": "STACK",
                "Value": "deploy",
              },
              {
                "Name": "STAGE",
                "Value": "TEST",
              },
              {
                "Name": "APP",
                "Value": "service-catalogue",
              },
              {
                "Name": "GU_REPO",
                "Value": "guardian/service-catalogue",
              },
            ],
            "Essential": true,
            "FirelensConfiguration": {
              "Type": "fluentbit",
            },
            "Image": "ghcr.io/guardian/devx-logs:2",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "CloudquerySourceGitHubRepositoriesTaskDefinitionCloudquerySourceGitHubRepositoriesFirelensLogGroup42A4D85D",
                },
                "awslogs-region": {
                  "Ref": "AWS::Region",
                },
                "awslogs-stream-prefix": "deploy/TEST/service-catalogue",
              },
            },
            "Name": "CloudquerySource-GitHubRepositoriesFirelens",
          },
        ],
        "Cpu": "256",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "CloudquerySourceGitHubRepositoriesTaskDefinitionExecutionRole03A80EA4",
            "Arn",
          ],
        },
        "Family": "ServiceCatalogueCloudquerySourceGitHubRepositoriesTaskDefinition13A7DF48",
        "Memory": "512",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE",
        ],
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "GitHubRepositories",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "CloudquerySourceGitHubRepositoriesTaskDefinitionTaskRoleCEEE8FE4",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "CloudquerySourceGitHubRepositoriesTaskDefinitionCloudquerySourceGitHubRepositoriesFirelensLogGroup42A4D85D": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionInDays": 1,
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "GitHubRepositories",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "CloudquerySourceGitHubRepositoriesTaskDefinitionEventsRole93DB1A26": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "GitHubRepositories",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceGitHubRepositoriesTaskDefinitionEventsRoleDefaultPolicy1ECEEEB2": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ecs:RunTask",
              "Condition": {
                "ArnEquals": {
                  "ecs:cluster": {
                    "Fn::GetAtt": [
                      "servicecatalogueCluster5FC34DC5",
                      "Arn",
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Resource": {
                "Ref": "CloudquerySourceGitHubRepositoriesTaskDefinition921DC1BC",
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceGitHubRepositoriesTaskDefinitionExecutionRole03A80EA4",
                  "Arn",
                ],
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceGitHubRepositoriesTaskDefinitionTaskRoleCEEE8FE4",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceGitHubRepositoriesTaskDefinitionEventsRoleDefaultPolicy1ECEEEB2",
        "Roles": [
          {
            "Ref": "CloudquerySourceGitHubRepositoriesTaskDefinitionEventsRole93DB1A26",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceGitHubRepositoriesTaskDefinitionExecutionRole03A80EA4": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "GitHubRepositories",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceGitHubRepositoriesTaskDefinitionExecutionRoleDefaultPolicy04F69199": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "githubcredentialsAF453741",
              },
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
              },
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "cloudqueryapikeyCCF82F53",
              },
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceGitHubRepositoriesTaskDefinitionCloudquerySourceGitHubRepositoriesFirelensLogGroup42A4D85D",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceGitHubRepositoriesTaskDefinitionExecutionRoleDefaultPolicy04F69199",
        "Roles": [
          {
            "Ref": "CloudquerySourceGitHubRepositoriesTaskDefinitionExecutionRole03A80EA4",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceGitHubRepositoriesTaskDefinitionTaskRoleCEEE8FE4": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "GitHubRepositories",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceGitHubRepositoriesTaskDefinitionTaskRoleDefaultPolicy77BC36C4": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kinesis:Describe*",
                "kinesis:Put*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":kinesis:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":stream/",
                    {
                      "Ref": "LoggingStreamName",
                    },
                  ],
                ],
              },
            },
            {
              "Action": "rds-db:connect",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":rds-db:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":dbuser:",
                    {
                      "Fn::GetAtt": [
                        "PostgresInstance16DE4286E",
                        "DbiResourceId",
                      ],
                    },
                    "/{{resolve:secretsmanager:",
                    {
                      "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                    },
                    ":SecretString:username::}}",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceGitHubRepositoriesTaskDefinitionTaskRoleDefaultPolicy77BC36C4",
        "Roles": [
          {
            "Ref": "CloudquerySourceGitHubRepositoriesTaskDefinitionTaskRoleCEEE8FE4",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceGitHubTeamsScheduledEventRule051F542B": {
      "Properties": {
        "ScheduleExpression": "cron(0 10 ? * 1 *)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "servicecatalogueCluster5FC34DC5",
                "Arn",
              ],
            },
            "EcsParameters": {
              "LaunchType": "FARGATE",
              "NetworkConfiguration": {
                "AwsVpcConfiguration": {
                  "AssignPublicIp": "DISABLED",
                  "SecurityGroups": [
                    {
                      "Fn::GetAtt": [
                        "PostgresAccessSecurityGroupServicecatalogue03C78F14",
                        "GroupId",
                      ],
                    },
                  ],
                  "Subnets": {
                    "Ref": "PrivateSubnets",
                  },
                },
              },
              "TaskCount": 1,
              "TaskDefinitionArn": {
                "Ref": "CloudquerySourceGitHubTeamsTaskDefinitionB01C9D3C",
              },
            },
            "Id": "Target0",
            "Input": "{}",
            "RoleArn": {
              "Fn::GetAtt": [
                "CloudquerySourceGitHubTeamsTaskDefinitionEventsRole3E2A5002",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "CloudquerySourceGitHubTeamsTaskDefinitionB01C9D3C": {
      "Properties": {
        "ContainerDefinitions": [
          {
            "Command": [
              "/bin/sh",
              "-c",
              "echo $GITHUB_PRIVATE_KEY | base64 -d > /github-private-key;echo $GITHUB_APP_ID > /github-app-id;echo $GITHUB_INSTALLATION_ID > /github-installation-id;wget -O /usr/local/share/ca-certificates/global-bundle.crt -q https://truststore.pki.rds.amazonaws.com/global/global-bundle.pem && update-ca-certificates;printf 'kind: source
spec:
  name: github
  path: cloudquery/github
  version: v7.4.2
  tables:
    - github_organizations
    - github_organization_members
    - github_teams
    - github_team_members
    - github_team_repositories
  skip_tables:
    - github_organization_dependabot_alerts
    - github_organization_dependabot_secrets
  destinations:
    - postgresql
  concurrency: 1000
  spec:
    orgs:
      - guardian
    app_auth:
      - org: guardian
        private_key_path: /github-private-key
        app_id: \${file:/github-app-id}
        installation_id: \${file:/github-installation-id}
' > /source.yaml;printf 'kind: destination
spec:
  name: postgresql
  registry: github
  path: cloudquery/postgresql
  version: v7.0.1
  migrate_mode: forced
  spec:
    connection_string: >-
      user=\${DB_USERNAME} password=\${DB_PASSWORD} host=\${DB_HOST} port=5432
      dbname=postgres sslmode=verify-full
' > /destination.yaml;/app/cloudquery sync /source.yaml /destination.yaml --log-format json --log-console",
            ],
            "DockerLabels": {
              "App": "service-catalogue",
              "Name": "GitHubTeams",
              "Stack": "deploy",
              "Stage": "TEST",
            },
            "EntryPoint": [
              "",
            ],
            "Environment": [
              {
                "Name": "GOMEMLIMIT",
                "Value": "3276MiB",
              },
            ],
            "Essential": true,
            "Image": "ghcr.io/cloudquery/cloudquery:4.3.5",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "Name": "CloudquerySource-GitHubTeamsContainer",
            "Secrets": [
              {
                "Name": "GITHUB_PRIVATE_KEY",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "githubcredentialsAF453741",
                      },
                      ":private-key::",
                    ],
                  ],
                },
              },
              {
                "Name": "GITHUB_APP_ID",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "githubcredentialsAF453741",
                      },
                      ":app-id::",
                    ],
                  ],
                },
              },
              {
                "Name": "GITHUB_INSTALLATION_ID",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "githubcredentialsAF453741",
                      },
                      ":installation-id::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_USERNAME",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_HOST",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_PASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
              {
                "Name": "CLOUDQUERY_API_KEY",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "cloudqueryapikeyCCF82F53",
                      },
                      ":api-key::",
                    ],
                  ],
                },
              },
            ],
          },
          {
            "Command": [
              "/bin/sh",
              "-c",
              "psql -c "INSERT INTO cloudquery_table_frequency VALUES ('github_organizations', 'WEEKLY'),('github_organization_members', 'WEEKLY'),('github_teams', 'WEEKLY'),('github_team_members', 'WEEKLY'),('github_team_repositories', 'WEEKLY') ON CONFLICT (table_name) DO UPDATE SET frequency = 'WEEKLY'"",
            ],
            "DockerLabels": {
              "App": "service-catalogue",
              "Name": "GitHubTeams",
              "Stack": "deploy",
              "Stage": "TEST",
            },
            "EntryPoint": [
              "",
            ],
            "Essential": false,
            "Image": "public.ecr.aws/docker/library/postgres:16-alpine",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "Name": "CloudquerySource-GitHubTeamsPostgresContainer",
            "Secrets": [
              {
                "Name": "PGUSER",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              {
                "Name": "PGHOST",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              {
                "Name": "PGPASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
            ],
          },
          {
            "Environment": [
              {
                "Name": "STACK",
                "Value": "deploy",
              },
              {
                "Name": "STAGE",
                "Value": "TEST",
              },
              {
                "Name": "APP",
                "Value": "service-catalogue",
              },
              {
                "Name": "GU_REPO",
                "Value": "guardian/service-catalogue",
              },
            ],
            "Essential": true,
            "FirelensConfiguration": {
              "Type": "fluentbit",
            },
            "Image": "ghcr.io/guardian/devx-logs:2",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "CloudquerySourceGitHubTeamsTaskDefinitionCloudquerySourceGitHubTeamsFirelensLogGroup8B1FFADC",
                },
                "awslogs-region": {
                  "Ref": "AWS::Region",
                },
                "awslogs-stream-prefix": "deploy/TEST/service-catalogue",
              },
            },
            "Name": "CloudquerySource-GitHubTeamsFirelens",
          },
        ],
        "Cpu": "2048",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "CloudquerySourceGitHubTeamsTaskDefinitionExecutionRole9DEDACFD",
            "Arn",
          ],
        },
        "Family": "ServiceCatalogueCloudquerySourceGitHubTeamsTaskDefinition5CFD9707",
        "Memory": "4096",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE",
        ],
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "GitHubTeams",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "CloudquerySourceGitHubTeamsTaskDefinitionTaskRoleD590FB83",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "CloudquerySourceGitHubTeamsTaskDefinitionCloudquerySourceGitHubTeamsFirelensLogGroup8B1FFADC": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionInDays": 1,
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "GitHubTeams",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "CloudquerySourceGitHubTeamsTaskDefinitionEventsRole3E2A5002": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "GitHubTeams",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceGitHubTeamsTaskDefinitionEventsRoleDefaultPolicy5B79609C": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ecs:RunTask",
              "Condition": {
                "ArnEquals": {
                  "ecs:cluster": {
                    "Fn::GetAtt": [
                      "servicecatalogueCluster5FC34DC5",
                      "Arn",
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Resource": {
                "Ref": "CloudquerySourceGitHubTeamsTaskDefinitionB01C9D3C",
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceGitHubTeamsTaskDefinitionExecutionRole9DEDACFD",
                  "Arn",
                ],
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceGitHubTeamsTaskDefinitionTaskRoleD590FB83",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceGitHubTeamsTaskDefinitionEventsRoleDefaultPolicy5B79609C",
        "Roles": [
          {
            "Ref": "CloudquerySourceGitHubTeamsTaskDefinitionEventsRole3E2A5002",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceGitHubTeamsTaskDefinitionExecutionRole9DEDACFD": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "GitHubTeams",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceGitHubTeamsTaskDefinitionExecutionRoleDefaultPolicy3618CA18": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "githubcredentialsAF453741",
              },
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
              },
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "cloudqueryapikeyCCF82F53",
              },
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceGitHubTeamsTaskDefinitionCloudquerySourceGitHubTeamsFirelensLogGroup8B1FFADC",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceGitHubTeamsTaskDefinitionExecutionRoleDefaultPolicy3618CA18",
        "Roles": [
          {
            "Ref": "CloudquerySourceGitHubTeamsTaskDefinitionExecutionRole9DEDACFD",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceGitHubTeamsTaskDefinitionTaskRoleD590FB83": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "GitHubTeams",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceGitHubTeamsTaskDefinitionTaskRoleDefaultPolicyB21B808B": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kinesis:Describe*",
                "kinesis:Put*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":kinesis:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":stream/",
                    {
                      "Ref": "LoggingStreamName",
                    },
                  ],
                ],
              },
            },
            {
              "Action": "rds-db:connect",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":rds-db:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":dbuser:",
                    {
                      "Fn::GetAtt": [
                        "PostgresInstance16DE4286E",
                        "DbiResourceId",
                      ],
                    },
                    "/{{resolve:secretsmanager:",
                    {
                      "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                    },
                    ":SecretString:username::}}",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceGitHubTeamsTaskDefinitionTaskRoleDefaultPolicyB21B808B",
        "Roles": [
          {
            "Ref": "CloudquerySourceGitHubTeamsTaskDefinitionTaskRoleD590FB83",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceGuardianCustomSnykProjectsScheduledEventRule92FBDA90": {
      "Properties": {
        "ScheduleExpression": "cron(0 5 * * ? *)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "servicecatalogueCluster5FC34DC5",
                "Arn",
              ],
            },
            "EcsParameters": {
              "LaunchType": "FARGATE",
              "NetworkConfiguration": {
                "AwsVpcConfiguration": {
                  "AssignPublicIp": "DISABLED",
                  "SecurityGroups": [
                    {
                      "Fn::GetAtt": [
                        "PostgresAccessSecurityGroupServicecatalogue03C78F14",
                        "GroupId",
                      ],
                    },
                  ],
                  "Subnets": {
                    "Ref": "PrivateSubnets",
                  },
                },
              },
              "TaskCount": 1,
              "TaskDefinitionArn": {
                "Ref": "CloudquerySourceGuardianCustomSnykProjectsTaskDefinitionEB2B4EBC",
              },
            },
            "Id": "Target0",
            "Input": "{}",
            "RoleArn": {
              "Fn::GetAtt": [
                "CloudquerySourceGuardianCustomSnykProjectsTaskDefinitionEventsRoleAA974CCE",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "CloudquerySourceGuardianCustomSnykProjectsTaskDefinitionCloudquerySourceGuardianCustomSnykProjectsFirelensLogGroup405A0620": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionInDays": 1,
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "GuardianCustomSnykProjects",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "CloudquerySourceGuardianCustomSnykProjectsTaskDefinitionEB2B4EBC": {
      "Properties": {
        "ContainerDefinitions": [
          {
            "Command": [
              "/bin/sh",
              "-c",
              "wget -O /usr/local/share/ca-certificates/global-bundle.crt -q https://truststore.pki.rds.amazonaws.com/global/global-bundle.pem && update-ca-certificates;printf 'kind: source
spec:
  name: guardian-snyk
  path: guardian/snyk-full-project
  registry: github
  version: v0.1.1
  tables:
    - snyk_projects
  destinations:
    - postgresql
  spec:
    api_key: \${SNYK_API_KEY}
' > /source.yaml;printf 'kind: destination
spec:
  name: postgresql
  registry: github
  path: cloudquery/postgresql
  version: v7.0.1
  migrate_mode: forced
  spec:
    connection_string: >-
      user=\${DB_USERNAME} password=\${DB_PASSWORD} host=\${DB_HOST} port=5432
      dbname=postgres sslmode=verify-full
' > /destination.yaml;/app/cloudquery sync /source.yaml /destination.yaml --log-format json --log-console",
            ],
            "DockerLabels": {
              "App": "service-catalogue",
              "Name": "GuardianCustomSnykProjects",
              "Stack": "deploy",
              "Stage": "TEST",
            },
            "EntryPoint": [
              "",
            ],
            "Environment": [
              {
                "Name": "GOMEMLIMIT",
                "Value": "409MiB",
              },
            ],
            "Essential": true,
            "Image": "ghcr.io/cloudquery/cloudquery:4.3.5",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "Name": "CloudquerySource-GuardianCustomSnykProjectsContainer",
            "Secrets": [
              {
                "Name": "SNYK_API_KEY",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "snykcredentials4D951A18",
                      },
                      ":api-key::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_USERNAME",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_HOST",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_PASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
              {
                "Name": "CLOUDQUERY_API_KEY",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "cloudqueryapikeyCCF82F53",
                      },
                      ":api-key::",
                    ],
                  ],
                },
              },
            ],
          },
          {
            "Command": [
              "/bin/sh",
              "-c",
              "psql -c "INSERT INTO cloudquery_table_frequency VALUES ('snyk_projects', 'DAILY') ON CONFLICT (table_name) DO UPDATE SET frequency = 'DAILY'"",
            ],
            "DockerLabels": {
              "App": "service-catalogue",
              "Name": "GuardianCustomSnykProjects",
              "Stack": "deploy",
              "Stage": "TEST",
            },
            "EntryPoint": [
              "",
            ],
            "Essential": false,
            "Image": "public.ecr.aws/docker/library/postgres:16-alpine",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "Name": "CloudquerySource-GuardianCustomSnykProjectsPostgresContainer",
            "Secrets": [
              {
                "Name": "PGUSER",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              {
                "Name": "PGHOST",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              {
                "Name": "PGPASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
            ],
          },
          {
            "Environment": [
              {
                "Name": "STACK",
                "Value": "deploy",
              },
              {
                "Name": "STAGE",
                "Value": "TEST",
              },
              {
                "Name": "APP",
                "Value": "service-catalogue",
              },
              {
                "Name": "GU_REPO",
                "Value": "guardian/service-catalogue",
              },
            ],
            "Essential": true,
            "FirelensConfiguration": {
              "Type": "fluentbit",
            },
            "Image": "ghcr.io/guardian/devx-logs:2",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "CloudquerySourceGuardianCustomSnykProjectsTaskDefinitionCloudquerySourceGuardianCustomSnykProjectsFirelensLogGroup405A0620",
                },
                "awslogs-region": {
                  "Ref": "AWS::Region",
                },
                "awslogs-stream-prefix": "deploy/TEST/service-catalogue",
              },
            },
            "Name": "CloudquerySource-GuardianCustomSnykProjectsFirelens",
          },
        ],
        "Cpu": "256",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "CloudquerySourceGuardianCustomSnykProjectsTaskDefinitionExecutionRole4E86EDCB",
            "Arn",
          ],
        },
        "Family": "ServiceCatalogueCloudquerySourceGuardianCustomSnykProjectsTaskDefinition778615F1",
        "Memory": "512",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE",
        ],
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "GuardianCustomSnykProjects",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "CloudquerySourceGuardianCustomSnykProjectsTaskDefinitionTaskRole4DF228BD",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "CloudquerySourceGuardianCustomSnykProjectsTaskDefinitionEventsRoleAA974CCE": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "GuardianCustomSnykProjects",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceGuardianCustomSnykProjectsTaskDefinitionEventsRoleDefaultPolicyDD853C3A": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ecs:RunTask",
              "Condition": {
                "ArnEquals": {
                  "ecs:cluster": {
                    "Fn::GetAtt": [
                      "servicecatalogueCluster5FC34DC5",
                      "Arn",
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Resource": {
                "Ref": "CloudquerySourceGuardianCustomSnykProjectsTaskDefinitionEB2B4EBC",
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceGuardianCustomSnykProjectsTaskDefinitionExecutionRole4E86EDCB",
                  "Arn",
                ],
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceGuardianCustomSnykProjectsTaskDefinitionTaskRole4DF228BD",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceGuardianCustomSnykProjectsTaskDefinitionEventsRoleDefaultPolicyDD853C3A",
        "Roles": [
          {
            "Ref": "CloudquerySourceGuardianCustomSnykProjectsTaskDefinitionEventsRoleAA974CCE",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceGuardianCustomSnykProjectsTaskDefinitionExecutionRole4E86EDCB": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "GuardianCustomSnykProjects",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceGuardianCustomSnykProjectsTaskDefinitionExecutionRoleDefaultPolicy3946861E": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "snykcredentials4D951A18",
              },
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
              },
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "cloudqueryapikeyCCF82F53",
              },
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceGuardianCustomSnykProjectsTaskDefinitionCloudquerySourceGuardianCustomSnykProjectsFirelensLogGroup405A0620",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceGuardianCustomSnykProjectsTaskDefinitionExecutionRoleDefaultPolicy3946861E",
        "Roles": [
          {
            "Ref": "CloudquerySourceGuardianCustomSnykProjectsTaskDefinitionExecutionRole4E86EDCB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceGuardianCustomSnykProjectsTaskDefinitionTaskRole4DF228BD": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "GuardianCustomSnykProjects",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceGuardianCustomSnykProjectsTaskDefinitionTaskRoleDefaultPolicy3CBF47E9": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kinesis:Describe*",
                "kinesis:Put*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":kinesis:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":stream/",
                    {
                      "Ref": "LoggingStreamName",
                    },
                  ],
                ],
              },
            },
            {
              "Action": "rds-db:connect",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":rds-db:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":dbuser:",
                    {
                      "Fn::GetAtt": [
                        "PostgresInstance16DE4286E",
                        "DbiResourceId",
                      ],
                    },
                    "/{{resolve:secretsmanager:",
                    {
                      "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                    },
                    ":SecretString:username::}}",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceGuardianCustomSnykProjectsTaskDefinitionTaskRoleDefaultPolicy3CBF47E9",
        "Roles": [
          {
            "Ref": "CloudquerySourceGuardianCustomSnykProjectsTaskDefinitionTaskRole4DF228BD",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceNS1ScheduledEventRule1D618E3C": {
      "Properties": {
        "ScheduleExpression": "cron(0 0 * * ? *)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "servicecatalogueCluster5FC34DC5",
                "Arn",
              ],
            },
            "EcsParameters": {
              "LaunchType": "FARGATE",
              "NetworkConfiguration": {
                "AwsVpcConfiguration": {
                  "AssignPublicIp": "DISABLED",
                  "SecurityGroups": [
                    {
                      "Fn::GetAtt": [
                        "PostgresAccessSecurityGroupServicecatalogue03C78F14",
                        "GroupId",
                      ],
                    },
                  ],
                  "Subnets": {
                    "Ref": "PrivateSubnets",
                  },
                },
              },
              "TaskCount": 1,
              "TaskDefinitionArn": {
                "Ref": "CloudquerySourceNS1TaskDefinition56258A70",
              },
            },
            "Id": "Target0",
            "Input": "{}",
            "RoleArn": {
              "Fn::GetAtt": [
                "CloudquerySourceNS1TaskDefinitionEventsRole2D5A948C",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "CloudquerySourceNS1TaskDefinition56258A70": {
      "Properties": {
        "ContainerDefinitions": [
          {
            "Command": [
              "/bin/sh",
              "-c",
              "wget -O /usr/local/share/ca-certificates/global-bundle.crt -q https://truststore.pki.rds.amazonaws.com/global/global-bundle.pem && update-ca-certificates;printf 'kind: source
spec:
  name: ns1
  registry: grpc
  path: localhost:7777
  version: v0.0.0
  tables:
    - ns1_*
  destinations:
    - postgresql
  spec:
    apiKey: \${NS1_API_KEY}
' > /source.yaml;printf 'kind: destination
spec:
  name: postgresql
  registry: github
  path: cloudquery/postgresql
  version: v7.0.1
  migrate_mode: forced
  spec:
    connection_string: >-
      user=\${DB_USERNAME} password=\${DB_PASSWORD} host=\${DB_HOST} port=5432
      dbname=postgres sslmode=verify-full
' > /destination.yaml;/app/cloudquery sync /source.yaml /destination.yaml --log-format json --log-console",
            ],
            "DependsOn": [
              {
                "Condition": "START",
                "ContainerName": "CloudquerySource-NS1PluginContainer",
              },
            ],
            "DockerLabels": {
              "App": "service-catalogue",
              "Name": "NS1",
              "Stack": "deploy",
              "Stage": "TEST",
            },
            "EntryPoint": [
              "",
            ],
            "Environment": [
              {
                "Name": "GOMEMLIMIT",
                "Value": "409MiB",
              },
            ],
            "Essential": true,
            "Image": "ghcr.io/cloudquery/cloudquery:4.3.5",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "Name": "CloudquerySource-NS1Container",
            "Secrets": [
              {
                "Name": "NS1_API_KEY",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "ns1credentialsA8DD3B2D",
                      },
                      ":api-key::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_USERNAME",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_HOST",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_PASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
              {
                "Name": "CLOUDQUERY_API_KEY",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "cloudqueryapikeyCCF82F53",
                      },
                      ":api-key::",
                    ],
                  ],
                },
              },
            ],
          },
          {
            "Essential": false,
            "Image": "ghcr.io/guardian/cq-source-ns1:0.0.3",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "Name": "CloudquerySource-NS1PluginContainer",
          },
          {
            "Command": [
              "/bin/sh",
              "-c",
              "psql -c "INSERT INTO cloudquery_table_frequency VALUES ('ns1_%', 'DAILY') ON CONFLICT (table_name) DO UPDATE SET frequency = 'DAILY'"",
            ],
            "DockerLabels": {
              "App": "service-catalogue",
              "Name": "NS1",
              "Stack": "deploy",
              "Stage": "TEST",
            },
            "EntryPoint": [
              "",
            ],
            "Essential": false,
            "Image": "public.ecr.aws/docker/library/postgres:16-alpine",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "Name": "CloudquerySource-NS1PostgresContainer",
            "Secrets": [
              {
                "Name": "PGUSER",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              {
                "Name": "PGHOST",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              {
                "Name": "PGPASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
            ],
          },
          {
            "Environment": [
              {
                "Name": "STACK",
                "Value": "deploy",
              },
              {
                "Name": "STAGE",
                "Value": "TEST",
              },
              {
                "Name": "APP",
                "Value": "service-catalogue",
              },
              {
                "Name": "GU_REPO",
                "Value": "guardian/service-catalogue",
              },
            ],
            "Essential": true,
            "FirelensConfiguration": {
              "Type": "fluentbit",
            },
            "Image": "ghcr.io/guardian/devx-logs:2",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "CloudquerySourceNS1TaskDefinitionCloudquerySourceNS1FirelensLogGroup3A327514",
                },
                "awslogs-region": {
                  "Ref": "AWS::Region",
                },
                "awslogs-stream-prefix": "deploy/TEST/service-catalogue",
              },
            },
            "Name": "CloudquerySource-NS1Firelens",
          },
        ],
        "Cpu": "256",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "CloudquerySourceNS1TaskDefinitionExecutionRoleECC80718",
            "Arn",
          ],
        },
        "Family": "ServiceCatalogueCloudquerySourceNS1TaskDefinitionE32F0EBB",
        "Memory": "512",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE",
        ],
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "NS1",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "CloudquerySourceNS1TaskDefinitionTaskRole654B2CE7",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "CloudquerySourceNS1TaskDefinitionCloudquerySourceNS1FirelensLogGroup3A327514": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionInDays": 1,
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "NS1",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "CloudquerySourceNS1TaskDefinitionEventsRole2D5A948C": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "NS1",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceNS1TaskDefinitionEventsRoleDefaultPolicyE40A5A68": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ecs:RunTask",
              "Condition": {
                "ArnEquals": {
                  "ecs:cluster": {
                    "Fn::GetAtt": [
                      "servicecatalogueCluster5FC34DC5",
                      "Arn",
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Resource": {
                "Ref": "CloudquerySourceNS1TaskDefinition56258A70",
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceNS1TaskDefinitionExecutionRoleECC80718",
                  "Arn",
                ],
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceNS1TaskDefinitionTaskRole654B2CE7",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceNS1TaskDefinitionEventsRoleDefaultPolicyE40A5A68",
        "Roles": [
          {
            "Ref": "CloudquerySourceNS1TaskDefinitionEventsRole2D5A948C",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceNS1TaskDefinitionExecutionRoleDefaultPolicyA99171A1": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "ns1credentialsA8DD3B2D",
              },
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
              },
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "cloudqueryapikeyCCF82F53",
              },
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceNS1TaskDefinitionCloudquerySourceNS1FirelensLogGroup3A327514",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceNS1TaskDefinitionExecutionRoleDefaultPolicyA99171A1",
        "Roles": [
          {
            "Ref": "CloudquerySourceNS1TaskDefinitionExecutionRoleECC80718",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceNS1TaskDefinitionExecutionRoleECC80718": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "NS1",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceNS1TaskDefinitionTaskRole654B2CE7": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "NS1",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceNS1TaskDefinitionTaskRoleDefaultPolicy7B696A72": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kinesis:Describe*",
                "kinesis:Put*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":kinesis:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":stream/",
                    {
                      "Ref": "LoggingStreamName",
                    },
                  ],
                ],
              },
            },
            {
              "Action": "rds-db:connect",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":rds-db:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":dbuser:",
                    {
                      "Fn::GetAtt": [
                        "PostgresInstance16DE4286E",
                        "DbiResourceId",
                      ],
                    },
                    "/{{resolve:secretsmanager:",
                    {
                      "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                    },
                    ":SecretString:username::}}",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceNS1TaskDefinitionTaskRoleDefaultPolicy7B696A72",
        "Roles": [
          {
            "Ref": "CloudquerySourceNS1TaskDefinitionTaskRole654B2CE7",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceOrgWideAutoScalingGroupsScheduledEventRuleC637A0C6": {
      "Properties": {
        "ScheduleExpression": "cron(0 0 * * ? *)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "servicecatalogueCluster5FC34DC5",
                "Arn",
              ],
            },
            "EcsParameters": {
              "LaunchType": "FARGATE",
              "NetworkConfiguration": {
                "AwsVpcConfiguration": {
                  "AssignPublicIp": "DISABLED",
                  "SecurityGroups": [
                    {
                      "Fn::GetAtt": [
                        "PostgresAccessSecurityGroupServicecatalogue03C78F14",
                        "GroupId",
                      ],
                    },
                  ],
                  "Subnets": {
                    "Ref": "PrivateSubnets",
                  },
                },
              },
              "TaskCount": 1,
              "TaskDefinitionArn": {
                "Ref": "CloudquerySourceOrgWideAutoScalingGroupsTaskDefinition90175FA6",
              },
            },
            "Id": "Target0",
            "Input": "{}",
            "RoleArn": {
              "Fn::GetAtt": [
                "CloudquerySourceOrgWideAutoScalingGroupsTaskDefinitionEventsRoleB208939C",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "CloudquerySourceOrgWideAutoScalingGroupsTaskDefinition90175FA6": {
      "Properties": {
        "ContainerDefinitions": [
          {
            "Command": [
              "/bin/sh",
              "-c",
              "wget -O /usr/local/share/ca-certificates/global-bundle.crt -q https://truststore.pki.rds.amazonaws.com/global/global-bundle.pem && update-ca-certificates;printf 'kind: source
spec:
  name: aws
  path: cloudquery/aws
  version: v23.3.1
  tables:
    - aws_autoscaling_groups
  destinations:
    - postgresql
  spec:
    regions:
      - eu-west-1
      - eu-west-2
      - us-east-1
      - us-east-2
      - us-west-1
      - ap-southeast-2
      - ca-central-1
    org:
      member_role_name: cloudquery-access
      organization_units:
        - ou-123
' > /source.yaml;printf 'kind: destination
spec:
  name: postgresql
  registry: github
  path: cloudquery/postgresql
  version: v7.0.1
  migrate_mode: forced
  spec:
    connection_string: >-
      user=\${DB_USERNAME} password=\${DB_PASSWORD} host=\${DB_HOST} port=5432
      dbname=postgres sslmode=verify-full
' > /destination.yaml;/app/cloudquery sync /source.yaml /destination.yaml --log-format json --log-console",
            ],
            "DockerLabels": {
              "App": "service-catalogue",
              "Name": "OrgWideAutoScalingGroups",
              "Stack": "deploy",
              "Stage": "TEST",
            },
            "EntryPoint": [
              "",
            ],
            "Environment": [
              {
                "Name": "GOMEMLIMIT",
                "Value": "409MiB",
              },
            ],
            "Essential": true,
            "Image": "ghcr.io/cloudquery/cloudquery:4.3.5",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "Name": "CloudquerySource-OrgWideAutoScalingGroupsContainer",
            "Secrets": [
              {
                "Name": "DB_USERNAME",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_HOST",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_PASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
              {
                "Name": "CLOUDQUERY_API_KEY",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "cloudqueryapikeyCCF82F53",
                      },
                      ":api-key::",
                    ],
                  ],
                },
              },
            ],
          },
          {
            "Command": [
              "/bin/sh",
              "-c",
              "psql -c "INSERT INTO cloudquery_table_frequency VALUES ('aws_autoscaling_groups', 'DAILY') ON CONFLICT (table_name) DO UPDATE SET frequency = 'DAILY'"",
            ],
            "DockerLabels": {
              "App": "service-catalogue",
              "Name": "OrgWideAutoScalingGroups",
              "Stack": "deploy",
              "Stage": "TEST",
            },
            "EntryPoint": [
              "",
            ],
            "Essential": false,
            "Image": "public.ecr.aws/docker/library/postgres:16-alpine",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "Name": "CloudquerySource-OrgWideAutoScalingGroupsPostgresContainer",
            "Secrets": [
              {
                "Name": "PGUSER",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              {
                "Name": "PGHOST",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              {
                "Name": "PGPASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
            ],
          },
          {
            "Environment": [
              {
                "Name": "STACK",
                "Value": "deploy",
              },
              {
                "Name": "STAGE",
                "Value": "TEST",
              },
              {
                "Name": "APP",
                "Value": "service-catalogue",
              },
              {
                "Name": "GU_REPO",
                "Value": "guardian/service-catalogue",
              },
            ],
            "Essential": true,
            "FirelensConfiguration": {
              "Type": "fluentbit",
            },
            "Image": "ghcr.io/guardian/devx-logs:2",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "CloudquerySourceOrgWideAutoScalingGroupsTaskDefinitionCloudquerySourceOrgWideAutoScalingGroupsFirelensLogGroup5F30203D",
                },
                "awslogs-region": {
                  "Ref": "AWS::Region",
                },
                "awslogs-stream-prefix": "deploy/TEST/service-catalogue",
              },
            },
            "Name": "CloudquerySource-OrgWideAutoScalingGroupsFirelens",
          },
        ],
        "Cpu": "256",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "CloudquerySourceOrgWideAutoScalingGroupsTaskDefinitionExecutionRole87E65E0F",
            "Arn",
          ],
        },
        "Family": "ServiceCatalogueCloudquerySourceOrgWideAutoScalingGroupsTaskDefinitionE2706D00",
        "Memory": "512",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE",
        ],
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "OrgWideAutoScalingGroups",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "CloudquerySourceOrgWideAutoScalingGroupsTaskDefinitionTaskRoleB0DF2F52",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "CloudquerySourceOrgWideAutoScalingGroupsTaskDefinitionCloudquerySourceOrgWideAutoScalingGroupsFirelensLogGroup5F30203D": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionInDays": 1,
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "OrgWideAutoScalingGroups",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "CloudquerySourceOrgWideAutoScalingGroupsTaskDefinitionEventsRoleB208939C": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "OrgWideAutoScalingGroups",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceOrgWideAutoScalingGroupsTaskDefinitionEventsRoleDefaultPolicy604A8C66": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ecs:RunTask",
              "Condition": {
                "ArnEquals": {
                  "ecs:cluster": {
                    "Fn::GetAtt": [
                      "servicecatalogueCluster5FC34DC5",
                      "Arn",
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Resource": {
                "Ref": "CloudquerySourceOrgWideAutoScalingGroupsTaskDefinition90175FA6",
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceOrgWideAutoScalingGroupsTaskDefinitionExecutionRole87E65E0F",
                  "Arn",
                ],
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceOrgWideAutoScalingGroupsTaskDefinitionTaskRoleB0DF2F52",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceOrgWideAutoScalingGroupsTaskDefinitionEventsRoleDefaultPolicy604A8C66",
        "Roles": [
          {
            "Ref": "CloudquerySourceOrgWideAutoScalingGroupsTaskDefinitionEventsRoleB208939C",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceOrgWideAutoScalingGroupsTaskDefinitionExecutionRole87E65E0F": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "OrgWideAutoScalingGroups",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceOrgWideAutoScalingGroupsTaskDefinitionExecutionRoleDefaultPolicyB16C02D7": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
              },
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "cloudqueryapikeyCCF82F53",
              },
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceOrgWideAutoScalingGroupsTaskDefinitionCloudquerySourceOrgWideAutoScalingGroupsFirelensLogGroup5F30203D",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceOrgWideAutoScalingGroupsTaskDefinitionExecutionRoleDefaultPolicyB16C02D7",
        "Roles": [
          {
            "Ref": "CloudquerySourceOrgWideAutoScalingGroupsTaskDefinitionExecutionRole87E65E0F",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceOrgWideAutoScalingGroupsTaskDefinitionTaskRoleB0DF2F52": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "OrgWideAutoScalingGroups",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceOrgWideAutoScalingGroupsTaskDefinitionTaskRoleDefaultPolicy78571E53": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kinesis:Describe*",
                "kinesis:Put*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":kinesis:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":stream/",
                    {
                      "Ref": "LoggingStreamName",
                    },
                  ],
                ],
              },
            },
            {
              "Action": "organizations:List*",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": "arn:aws:iam::*:role/cloudquery-access",
            },
            {
              "Action": "rds-db:connect",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":rds-db:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":dbuser:",
                    {
                      "Fn::GetAtt": [
                        "PostgresInstance16DE4286E",
                        "DbiResourceId",
                      ],
                    },
                    "/{{resolve:secretsmanager:",
                    {
                      "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                    },
                    ":SecretString:username::}}",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceOrgWideAutoScalingGroupsTaskDefinitionTaskRoleDefaultPolicy78571E53",
        "Roles": [
          {
            "Ref": "CloudquerySourceOrgWideAutoScalingGroupsTaskDefinitionTaskRoleB0DF2F52",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceOrgWideBackupScheduledEventRuleF35A6F79": {
      "Properties": {
        "ScheduleExpression": "cron(0 7 * * ? *)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "servicecatalogueCluster5FC34DC5",
                "Arn",
              ],
            },
            "EcsParameters": {
              "LaunchType": "FARGATE",
              "NetworkConfiguration": {
                "AwsVpcConfiguration": {
                  "AssignPublicIp": "DISABLED",
                  "SecurityGroups": [
                    {
                      "Fn::GetAtt": [
                        "PostgresAccessSecurityGroupServicecatalogue03C78F14",
                        "GroupId",
                      ],
                    },
                  ],
                  "Subnets": {
                    "Ref": "PrivateSubnets",
                  },
                },
              },
              "TaskCount": 1,
              "TaskDefinitionArn": {
                "Ref": "CloudquerySourceOrgWideBackupTaskDefinition9BAD0C75",
              },
            },
            "Id": "Target0",
            "Input": "{}",
            "RoleArn": {
              "Fn::GetAtt": [
                "CloudquerySourceOrgWideBackupTaskDefinitionEventsRoleEEE9119D",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "CloudquerySourceOrgWideBackupTaskDefinition9BAD0C75": {
      "Properties": {
        "ContainerDefinitions": [
          {
            "Command": [
              "/bin/sh",
              "-c",
              "wget -O /usr/local/share/ca-certificates/global-bundle.crt -q https://truststore.pki.rds.amazonaws.com/global/global-bundle.pem && update-ca-certificates;printf 'kind: source
spec:
  name: aws
  path: cloudquery/aws
  version: v23.3.1
  tables:
    - aws_backup_protected_resources
    - aws_backup_vaults
    - aws_backup_vault_recovery_points
  destinations:
    - postgresql
  spec:
    regions:
      - eu-west-1
      - eu-west-2
      - us-east-1
      - us-east-2
      - us-west-1
      - ap-southeast-2
      - ca-central-1
    org:
      member_role_name: cloudquery-access
      organization_units:
        - ou-123
' > /source.yaml;printf 'kind: destination
spec:
  name: postgresql
  registry: github
  path: cloudquery/postgresql
  version: v7.0.1
  migrate_mode: forced
  spec:
    connection_string: >-
      user=\${DB_USERNAME} password=\${DB_PASSWORD} host=\${DB_HOST} port=5432
      dbname=postgres sslmode=verify-full
' > /destination.yaml;/app/cloudquery sync /source.yaml /destination.yaml --log-format json --log-console",
            ],
            "DockerLabels": {
              "App": "service-catalogue",
              "Name": "OrgWideBackup",
              "Stack": "deploy",
              "Stage": "TEST",
            },
            "EntryPoint": [
              "",
            ],
            "Environment": [
              {
                "Name": "GOMEMLIMIT",
                "Value": "409MiB",
              },
            ],
            "Essential": true,
            "Image": "ghcr.io/cloudquery/cloudquery:4.3.5",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "Name": "CloudquerySource-OrgWideBackupContainer",
            "Secrets": [
              {
                "Name": "DB_USERNAME",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_HOST",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_PASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
              {
                "Name": "CLOUDQUERY_API_KEY",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "cloudqueryapikeyCCF82F53",
                      },
                      ":api-key::",
                    ],
                  ],
                },
              },
            ],
          },
          {
            "Command": [
              "/bin/sh",
              "-c",
              "psql -c "INSERT INTO cloudquery_table_frequency VALUES ('aws_backup_protected_resources', 'DAILY'),('aws_backup_vaults', 'DAILY'),('aws_backup_vault_recovery_points', 'DAILY') ON CONFLICT (table_name) DO UPDATE SET frequency = 'DAILY'"",
            ],
            "DockerLabels": {
              "App": "service-catalogue",
              "Name": "OrgWideBackup",
              "Stack": "deploy",
              "Stage": "TEST",
            },
            "EntryPoint": [
              "",
            ],
            "Essential": false,
            "Image": "public.ecr.aws/docker/library/postgres:16-alpine",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "Name": "CloudquerySource-OrgWideBackupPostgresContainer",
            "Secrets": [
              {
                "Name": "PGUSER",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              {
                "Name": "PGHOST",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              {
                "Name": "PGPASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
            ],
          },
          {
            "Environment": [
              {
                "Name": "STACK",
                "Value": "deploy",
              },
              {
                "Name": "STAGE",
                "Value": "TEST",
              },
              {
                "Name": "APP",
                "Value": "service-catalogue",
              },
              {
                "Name": "GU_REPO",
                "Value": "guardian/service-catalogue",
              },
            ],
            "Essential": true,
            "FirelensConfiguration": {
              "Type": "fluentbit",
            },
            "Image": "ghcr.io/guardian/devx-logs:2",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "CloudquerySourceOrgWideBackupTaskDefinitionCloudquerySourceOrgWideBackupFirelensLogGroup10DF9407",
                },
                "awslogs-region": {
                  "Ref": "AWS::Region",
                },
                "awslogs-stream-prefix": "deploy/TEST/service-catalogue",
              },
            },
            "Name": "CloudquerySource-OrgWideBackupFirelens",
          },
        ],
        "Cpu": "256",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "CloudquerySourceOrgWideBackupTaskDefinitionExecutionRole1071B910",
            "Arn",
          ],
        },
        "Family": "ServiceCatalogueCloudquerySourceOrgWideBackupTaskDefinition54AA6947",
        "Memory": "512",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE",
        ],
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "OrgWideBackup",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "CloudquerySourceOrgWideBackupTaskDefinitionTaskRoleC089F91D",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "CloudquerySourceOrgWideBackupTaskDefinitionCloudquerySourceOrgWideBackupFirelensLogGroup10DF9407": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionInDays": 1,
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "OrgWideBackup",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "CloudquerySourceOrgWideBackupTaskDefinitionEventsRoleDefaultPolicyA631E86F": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ecs:RunTask",
              "Condition": {
                "ArnEquals": {
                  "ecs:cluster": {
                    "Fn::GetAtt": [
                      "servicecatalogueCluster5FC34DC5",
                      "Arn",
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Resource": {
                "Ref": "CloudquerySourceOrgWideBackupTaskDefinition9BAD0C75",
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceOrgWideBackupTaskDefinitionExecutionRole1071B910",
                  "Arn",
                ],
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceOrgWideBackupTaskDefinitionTaskRoleC089F91D",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceOrgWideBackupTaskDefinitionEventsRoleDefaultPolicyA631E86F",
        "Roles": [
          {
            "Ref": "CloudquerySourceOrgWideBackupTaskDefinitionEventsRoleEEE9119D",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceOrgWideBackupTaskDefinitionEventsRoleEEE9119D": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "OrgWideBackup",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceOrgWideBackupTaskDefinitionExecutionRole1071B910": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "OrgWideBackup",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceOrgWideBackupTaskDefinitionExecutionRoleDefaultPolicyEAD210FD": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
              },
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "cloudqueryapikeyCCF82F53",
              },
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceOrgWideBackupTaskDefinitionCloudquerySourceOrgWideBackupFirelensLogGroup10DF9407",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceOrgWideBackupTaskDefinitionExecutionRoleDefaultPolicyEAD210FD",
        "Roles": [
          {
            "Ref": "CloudquerySourceOrgWideBackupTaskDefinitionExecutionRole1071B910",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceOrgWideBackupTaskDefinitionTaskRoleC089F91D": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "OrgWideBackup",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceOrgWideBackupTaskDefinitionTaskRoleDefaultPolicyA57DC5C0": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kinesis:Describe*",
                "kinesis:Put*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":kinesis:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":stream/",
                    {
                      "Ref": "LoggingStreamName",
                    },
                  ],
                ],
              },
            },
            {
              "Action": "organizations:List*",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": "arn:aws:iam::*:role/cloudquery-access",
            },
            {
              "Action": "rds-db:connect",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":rds-db:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":dbuser:",
                    {
                      "Fn::GetAtt": [
                        "PostgresInstance16DE4286E",
                        "DbiResourceId",
                      ],
                    },
                    "/{{resolve:secretsmanager:",
                    {
                      "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                    },
                    ":SecretString:username::}}",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceOrgWideBackupTaskDefinitionTaskRoleDefaultPolicyA57DC5C0",
        "Roles": [
          {
            "Ref": "CloudquerySourceOrgWideBackupTaskDefinitionTaskRoleC089F91D",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceOrgWideCertificatesScheduledEventRule2D4505F4": {
      "Properties": {
        "ScheduleExpression": "cron(0 1 * * ? *)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "servicecatalogueCluster5FC34DC5",
                "Arn",
              ],
            },
            "EcsParameters": {
              "LaunchType": "FARGATE",
              "NetworkConfiguration": {
                "AwsVpcConfiguration": {
                  "AssignPublicIp": "DISABLED",
                  "SecurityGroups": [
                    {
                      "Fn::GetAtt": [
                        "PostgresAccessSecurityGroupServicecatalogue03C78F14",
                        "GroupId",
                      ],
                    },
                  ],
                  "Subnets": {
                    "Ref": "PrivateSubnets",
                  },
                },
              },
              "TaskCount": 1,
              "TaskDefinitionArn": {
                "Ref": "CloudquerySourceOrgWideCertificatesTaskDefinition47A214D9",
              },
            },
            "Id": "Target0",
            "Input": "{}",
            "RoleArn": {
              "Fn::GetAtt": [
                "CloudquerySourceOrgWideCertificatesTaskDefinitionEventsRoleAEA3DD58",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "CloudquerySourceOrgWideCertificatesTaskDefinition47A214D9": {
      "Properties": {
        "ContainerDefinitions": [
          {
            "Command": [
              "/bin/sh",
              "-c",
              "wget -O /usr/local/share/ca-certificates/global-bundle.crt -q https://truststore.pki.rds.amazonaws.com/global/global-bundle.pem && update-ca-certificates;printf 'kind: source
spec:
  name: aws
  path: cloudquery/aws
  version: v23.3.1
  tables:
    - aws_acm*
  destinations:
    - postgresql
  spec:
    regions:
      - eu-west-1
      - eu-west-2
      - us-east-1
      - us-east-2
      - us-west-1
      - ap-southeast-2
      - ca-central-1
    org:
      member_role_name: cloudquery-access
      organization_units:
        - ou-123
' > /source.yaml;printf 'kind: destination
spec:
  name: postgresql
  registry: github
  path: cloudquery/postgresql
  version: v7.0.1
  migrate_mode: forced
  spec:
    connection_string: >-
      user=\${DB_USERNAME} password=\${DB_PASSWORD} host=\${DB_HOST} port=5432
      dbname=postgres sslmode=verify-full
' > /destination.yaml;/app/cloudquery sync /source.yaml /destination.yaml --log-format json --log-console",
            ],
            "DockerLabels": {
              "App": "service-catalogue",
              "Name": "OrgWideCertificates",
              "Stack": "deploy",
              "Stage": "TEST",
            },
            "EntryPoint": [
              "",
            ],
            "Environment": [
              {
                "Name": "GOMEMLIMIT",
                "Value": "409MiB",
              },
            ],
            "Essential": true,
            "Image": "ghcr.io/cloudquery/cloudquery:4.3.5",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "Name": "CloudquerySource-OrgWideCertificatesContainer",
            "Secrets": [
              {
                "Name": "DB_USERNAME",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_HOST",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_PASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
              {
                "Name": "CLOUDQUERY_API_KEY",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "cloudqueryapikeyCCF82F53",
                      },
                      ":api-key::",
                    ],
                  ],
                },
              },
            ],
          },
          {
            "Command": [
              "/bin/sh",
              "-c",
              "psql -c "INSERT INTO cloudquery_table_frequency VALUES ('aws_acm%', 'DAILY') ON CONFLICT (table_name) DO UPDATE SET frequency = 'DAILY'"",
            ],
            "DockerLabels": {
              "App": "service-catalogue",
              "Name": "OrgWideCertificates",
              "Stack": "deploy",
              "Stage": "TEST",
            },
            "EntryPoint": [
              "",
            ],
            "Essential": false,
            "Image": "public.ecr.aws/docker/library/postgres:16-alpine",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "Name": "CloudquerySource-OrgWideCertificatesPostgresContainer",
            "Secrets": [
              {
                "Name": "PGUSER",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              {
                "Name": "PGHOST",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              {
                "Name": "PGPASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
            ],
          },
          {
            "Environment": [
              {
                "Name": "STACK",
                "Value": "deploy",
              },
              {
                "Name": "STAGE",
                "Value": "TEST",
              },
              {
                "Name": "APP",
                "Value": "service-catalogue",
              },
              {
                "Name": "GU_REPO",
                "Value": "guardian/service-catalogue",
              },
            ],
            "Essential": true,
            "FirelensConfiguration": {
              "Type": "fluentbit",
            },
            "Image": "ghcr.io/guardian/devx-logs:2",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "CloudquerySourceOrgWideCertificatesTaskDefinitionCloudquerySourceOrgWideCertificatesFirelensLogGroup3FA5384C",
                },
                "awslogs-region": {
                  "Ref": "AWS::Region",
                },
                "awslogs-stream-prefix": "deploy/TEST/service-catalogue",
              },
            },
            "Name": "CloudquerySource-OrgWideCertificatesFirelens",
          },
        ],
        "Cpu": "256",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "CloudquerySourceOrgWideCertificatesTaskDefinitionExecutionRoleDD0758F2",
            "Arn",
          ],
        },
        "Family": "ServiceCatalogueCloudquerySourceOrgWideCertificatesTaskDefinitionF1FAA598",
        "Memory": "512",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE",
        ],
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "OrgWideCertificates",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "CloudquerySourceOrgWideCertificatesTaskDefinitionTaskRoleC135603C",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "CloudquerySourceOrgWideCertificatesTaskDefinitionCloudquerySourceOrgWideCertificatesFirelensLogGroup3FA5384C": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionInDays": 1,
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "OrgWideCertificates",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "CloudquerySourceOrgWideCertificatesTaskDefinitionEventsRoleAEA3DD58": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "OrgWideCertificates",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceOrgWideCertificatesTaskDefinitionEventsRoleDefaultPolicyD224AA54": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ecs:RunTask",
              "Condition": {
                "ArnEquals": {
                  "ecs:cluster": {
                    "Fn::GetAtt": [
                      "servicecatalogueCluster5FC34DC5",
                      "Arn",
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Resource": {
                "Ref": "CloudquerySourceOrgWideCertificatesTaskDefinition47A214D9",
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceOrgWideCertificatesTaskDefinitionExecutionRoleDD0758F2",
                  "Arn",
                ],
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceOrgWideCertificatesTaskDefinitionTaskRoleC135603C",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceOrgWideCertificatesTaskDefinitionEventsRoleDefaultPolicyD224AA54",
        "Roles": [
          {
            "Ref": "CloudquerySourceOrgWideCertificatesTaskDefinitionEventsRoleAEA3DD58",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceOrgWideCertificatesTaskDefinitionExecutionRoleDD0758F2": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "OrgWideCertificates",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceOrgWideCertificatesTaskDefinitionExecutionRoleDefaultPolicyD50E0943": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
              },
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "cloudqueryapikeyCCF82F53",
              },
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceOrgWideCertificatesTaskDefinitionCloudquerySourceOrgWideCertificatesFirelensLogGroup3FA5384C",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceOrgWideCertificatesTaskDefinitionExecutionRoleDefaultPolicyD50E0943",
        "Roles": [
          {
            "Ref": "CloudquerySourceOrgWideCertificatesTaskDefinitionExecutionRoleDD0758F2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceOrgWideCertificatesTaskDefinitionTaskRoleC135603C": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "OrgWideCertificates",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceOrgWideCertificatesTaskDefinitionTaskRoleDefaultPolicyDD963DC8": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kinesis:Describe*",
                "kinesis:Put*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":kinesis:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":stream/",
                    {
                      "Ref": "LoggingStreamName",
                    },
                  ],
                ],
              },
            },
            {
              "Action": "organizations:List*",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": "arn:aws:iam::*:role/cloudquery-access",
            },
            {
              "Action": "rds-db:connect",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":rds-db:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":dbuser:",
                    {
                      "Fn::GetAtt": [
                        "PostgresInstance16DE4286E",
                        "DbiResourceId",
                      ],
                    },
                    "/{{resolve:secretsmanager:",
                    {
                      "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                    },
                    ":SecretString:username::}}",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceOrgWideCertificatesTaskDefinitionTaskRoleDefaultPolicyDD963DC8",
        "Roles": [
          {
            "Ref": "CloudquerySourceOrgWideCertificatesTaskDefinitionTaskRoleC135603C",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceOrgWideCloudFormationScheduledEventRule83F64E14": {
      "Properties": {
        "ScheduleExpression": "rate(3 hours)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "servicecatalogueCluster5FC34DC5",
                "Arn",
              ],
            },
            "EcsParameters": {
              "LaunchType": "FARGATE",
              "NetworkConfiguration": {
                "AwsVpcConfiguration": {
                  "AssignPublicIp": "DISABLED",
                  "SecurityGroups": [
                    {
                      "Fn::GetAtt": [
                        "PostgresAccessSecurityGroupServicecatalogue03C78F14",
                        "GroupId",
                      ],
                    },
                  ],
                  "Subnets": {
                    "Ref": "PrivateSubnets",
                  },
                },
              },
              "TaskCount": 1,
              "TaskDefinitionArn": {
                "Ref": "CloudquerySourceOrgWideCloudFormationTaskDefinitionDA4F8A51",
              },
            },
            "Id": "Target0",
            "Input": "{}",
            "RoleArn": {
              "Fn::GetAtt": [
                "CloudquerySourceOrgWideCloudFormationTaskDefinitionEventsRole2C0BF887",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "CloudquerySourceOrgWideCloudFormationTaskDefinitionCloudquerySourceOrgWideCloudFormationFirelensLogGroup36609B15": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionInDays": 1,
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "OrgWideCloudFormation",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "CloudquerySourceOrgWideCloudFormationTaskDefinitionDA4F8A51": {
      "Properties": {
        "ContainerDefinitions": [
          {
            "Command": [
              "/bin/sh",
              "-c",
              "wget -O /usr/local/share/ca-certificates/global-bundle.crt -q https://truststore.pki.rds.amazonaws.com/global/global-bundle.pem && update-ca-certificates;printf 'kind: source
spec:
  name: aws
  path: cloudquery/aws
  version: v23.3.1
  tables:
    - aws_cloudformation_*
  destinations:
    - postgresql
  spec:
    regions:
      - eu-west-1
      - eu-west-2
      - us-east-1
      - us-east-2
      - us-west-1
      - ap-southeast-2
      - ca-central-1
    org:
      member_role_name: cloudquery-access
      organization_units:
        - ou-123
' > /source.yaml;printf 'kind: destination
spec:
  name: postgresql
  registry: github
  path: cloudquery/postgresql
  version: v7.0.1
  migrate_mode: forced
  spec:
    connection_string: >-
      user=\${DB_USERNAME} password=\${DB_PASSWORD} host=\${DB_HOST} port=5432
      dbname=postgres sslmode=verify-full
' > /destination.yaml;/app/cloudquery sync /source.yaml /destination.yaml --log-format json --log-console",
            ],
            "DockerLabels": {
              "App": "service-catalogue",
              "Name": "OrgWideCloudFormation",
              "Stack": "deploy",
              "Stage": "TEST",
            },
            "EntryPoint": [
              "",
            ],
            "Environment": [
              {
                "Name": "GOMEMLIMIT",
                "Value": "819MiB",
              },
            ],
            "Essential": true,
            "Image": "ghcr.io/cloudquery/cloudquery:4.3.5",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "Name": "CloudquerySource-OrgWideCloudFormationContainer",
            "Secrets": [
              {
                "Name": "DB_USERNAME",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_HOST",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_PASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
              {
                "Name": "CLOUDQUERY_API_KEY",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "cloudqueryapikeyCCF82F53",
                      },
                      ":api-key::",
                    ],
                  ],
                },
              },
            ],
          },
          {
            "Command": [
              "/bin/sh",
              "-c",
              "psql -c "INSERT INTO cloudquery_table_frequency VALUES ('aws_cloudformation_%', 'DAILY') ON CONFLICT (table_name) DO UPDATE SET frequency = 'DAILY'"",
            ],
            "DockerLabels": {
              "App": "service-catalogue",
              "Name": "OrgWideCloudFormation",
              "Stack": "deploy",
              "Stage": "TEST",
            },
            "EntryPoint": [
              "",
            ],
            "Essential": false,
            "Image": "public.ecr.aws/docker/library/postgres:16-alpine",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "Name": "CloudquerySource-OrgWideCloudFormationPostgresContainer",
            "Secrets": [
              {
                "Name": "PGUSER",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              {
                "Name": "PGHOST",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              {
                "Name": "PGPASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
            ],
          },
          {
            "Environment": [
              {
                "Name": "STACK",
                "Value": "deploy",
              },
              {
                "Name": "STAGE",
                "Value": "TEST",
              },
              {
                "Name": "APP",
                "Value": "service-catalogue",
              },
              {
                "Name": "GU_REPO",
                "Value": "guardian/service-catalogue",
              },
            ],
            "Essential": true,
            "FirelensConfiguration": {
              "Type": "fluentbit",
            },
            "Image": "ghcr.io/guardian/devx-logs:2",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "CloudquerySourceOrgWideCloudFormationTaskDefinitionCloudquerySourceOrgWideCloudFormationFirelensLogGroup36609B15",
                },
                "awslogs-region": {
                  "Ref": "AWS::Region",
                },
                "awslogs-stream-prefix": "deploy/TEST/service-catalogue",
              },
            },
            "Name": "CloudquerySource-OrgWideCloudFormationFirelens",
          },
        ],
        "Cpu": "256",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "CloudquerySourceOrgWideCloudFormationTaskDefinitionExecutionRole73C70234",
            "Arn",
          ],
        },
        "Family": "ServiceCatalogueCloudquerySourceOrgWideCloudFormationTaskDefinitionC6E96023",
        "Memory": "1024",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE",
        ],
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "OrgWideCloudFormation",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "CloudquerySourceOrgWideCloudFormationTaskDefinitionTaskRole07134B33",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "CloudquerySourceOrgWideCloudFormationTaskDefinitionEventsRole2C0BF887": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "OrgWideCloudFormation",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceOrgWideCloudFormationTaskDefinitionEventsRoleDefaultPolicy74F50F3C": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ecs:RunTask",
              "Condition": {
                "ArnEquals": {
                  "ecs:cluster": {
                    "Fn::GetAtt": [
                      "servicecatalogueCluster5FC34DC5",
                      "Arn",
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Resource": {
                "Ref": "CloudquerySourceOrgWideCloudFormationTaskDefinitionDA4F8A51",
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceOrgWideCloudFormationTaskDefinitionExecutionRole73C70234",
                  "Arn",
                ],
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceOrgWideCloudFormationTaskDefinitionTaskRole07134B33",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceOrgWideCloudFormationTaskDefinitionEventsRoleDefaultPolicy74F50F3C",
        "Roles": [
          {
            "Ref": "CloudquerySourceOrgWideCloudFormationTaskDefinitionEventsRole2C0BF887",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceOrgWideCloudFormationTaskDefinitionExecutionRole73C70234": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "OrgWideCloudFormation",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceOrgWideCloudFormationTaskDefinitionExecutionRoleDefaultPolicy789C9373": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
              },
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "cloudqueryapikeyCCF82F53",
              },
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceOrgWideCloudFormationTaskDefinitionCloudquerySourceOrgWideCloudFormationFirelensLogGroup36609B15",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceOrgWideCloudFormationTaskDefinitionExecutionRoleDefaultPolicy789C9373",
        "Roles": [
          {
            "Ref": "CloudquerySourceOrgWideCloudFormationTaskDefinitionExecutionRole73C70234",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceOrgWideCloudFormationTaskDefinitionTaskRole07134B33": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "OrgWideCloudFormation",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceOrgWideCloudFormationTaskDefinitionTaskRoleDefaultPolicyDE6AF1BA": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kinesis:Describe*",
                "kinesis:Put*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":kinesis:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":stream/",
                    {
                      "Ref": "LoggingStreamName",
                    },
                  ],
                ],
              },
            },
            {
              "Action": "organizations:List*",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": "arn:aws:iam::*:role/cloudquery-access",
            },
            {
              "Action": "rds-db:connect",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":rds-db:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":dbuser:",
                    {
                      "Fn::GetAtt": [
                        "PostgresInstance16DE4286E",
                        "DbiResourceId",
                      ],
                    },
                    "/{{resolve:secretsmanager:",
                    {
                      "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                    },
                    ":SecretString:username::}}",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceOrgWideCloudFormationTaskDefinitionTaskRoleDefaultPolicyDE6AF1BA",
        "Roles": [
          {
            "Ref": "CloudquerySourceOrgWideCloudFormationTaskDefinitionTaskRole07134B33",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceOrgWideCloudwatchAlarmsScheduledEventRuleB72D02A5": {
      "Properties": {
        "ScheduleExpression": "cron(0 2 * * ? *)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "servicecatalogueCluster5FC34DC5",
                "Arn",
              ],
            },
            "EcsParameters": {
              "LaunchType": "FARGATE",
              "NetworkConfiguration": {
                "AwsVpcConfiguration": {
                  "AssignPublicIp": "DISABLED",
                  "SecurityGroups": [
                    {
                      "Fn::GetAtt": [
                        "PostgresAccessSecurityGroupServicecatalogue03C78F14",
                        "GroupId",
                      ],
                    },
                  ],
                  "Subnets": {
                    "Ref": "PrivateSubnets",
                  },
                },
              },
              "TaskCount": 1,
              "TaskDefinitionArn": {
                "Ref": "CloudquerySourceOrgWideCloudwatchAlarmsTaskDefinitionF28C916F",
              },
            },
            "Id": "Target0",
            "Input": "{}",
            "RoleArn": {
              "Fn::GetAtt": [
                "CloudquerySourceOrgWideCloudwatchAlarmsTaskDefinitionEventsRole44F1283B",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "CloudquerySourceOrgWideCloudwatchAlarmsTaskDefinitionCloudquerySourceOrgWideCloudwatchAlarmsFirelensLogGroup5A8CFBF6": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionInDays": 1,
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "OrgWideCloudwatchAlarms",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "CloudquerySourceOrgWideCloudwatchAlarmsTaskDefinitionEventsRole44F1283B": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "OrgWideCloudwatchAlarms",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceOrgWideCloudwatchAlarmsTaskDefinitionEventsRoleDefaultPolicyFFA9197F": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ecs:RunTask",
              "Condition": {
                "ArnEquals": {
                  "ecs:cluster": {
                    "Fn::GetAtt": [
                      "servicecatalogueCluster5FC34DC5",
                      "Arn",
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Resource": {
                "Ref": "CloudquerySourceOrgWideCloudwatchAlarmsTaskDefinitionF28C916F",
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceOrgWideCloudwatchAlarmsTaskDefinitionExecutionRole6970372F",
                  "Arn",
                ],
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceOrgWideCloudwatchAlarmsTaskDefinitionTaskRoleFB6E9716",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceOrgWideCloudwatchAlarmsTaskDefinitionEventsRoleDefaultPolicyFFA9197F",
        "Roles": [
          {
            "Ref": "CloudquerySourceOrgWideCloudwatchAlarmsTaskDefinitionEventsRole44F1283B",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceOrgWideCloudwatchAlarmsTaskDefinitionExecutionRole6970372F": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "OrgWideCloudwatchAlarms",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceOrgWideCloudwatchAlarmsTaskDefinitionExecutionRoleDefaultPolicy7EA502FA": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
              },
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "cloudqueryapikeyCCF82F53",
              },
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceOrgWideCloudwatchAlarmsTaskDefinitionCloudquerySourceOrgWideCloudwatchAlarmsFirelensLogGroup5A8CFBF6",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceOrgWideCloudwatchAlarmsTaskDefinitionExecutionRoleDefaultPolicy7EA502FA",
        "Roles": [
          {
            "Ref": "CloudquerySourceOrgWideCloudwatchAlarmsTaskDefinitionExecutionRole6970372F",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceOrgWideCloudwatchAlarmsTaskDefinitionF28C916F": {
      "Properties": {
        "ContainerDefinitions": [
          {
            "Command": [
              "/bin/sh",
              "-c",
              "wget -O /usr/local/share/ca-certificates/global-bundle.crt -q https://truststore.pki.rds.amazonaws.com/global/global-bundle.pem && update-ca-certificates;printf 'kind: source
spec:
  name: aws
  path: cloudquery/aws
  version: v23.3.1
  tables:
    - aws_cloudwatch_alarms
  destinations:
    - postgresql
  spec:
    regions:
      - eu-west-1
      - eu-west-2
      - us-east-1
      - us-east-2
      - us-west-1
      - ap-southeast-2
      - ca-central-1
    org:
      member_role_name: cloudquery-access
      organization_units:
        - ou-123
' > /source.yaml;printf 'kind: destination
spec:
  name: postgresql
  registry: github
  path: cloudquery/postgresql
  version: v7.0.1
  migrate_mode: forced
  spec:
    connection_string: >-
      user=\${DB_USERNAME} password=\${DB_PASSWORD} host=\${DB_HOST} port=5432
      dbname=postgres sslmode=verify-full
' > /destination.yaml;/app/cloudquery sync /source.yaml /destination.yaml --log-format json --log-console",
            ],
            "DockerLabels": {
              "App": "service-catalogue",
              "Name": "OrgWideCloudwatchAlarms",
              "Stack": "deploy",
              "Stage": "TEST",
            },
            "EntryPoint": [
              "",
            ],
            "Environment": [
              {
                "Name": "GOMEMLIMIT",
                "Value": "409MiB",
              },
            ],
            "Essential": true,
            "Image": "ghcr.io/cloudquery/cloudquery:4.3.5",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "Name": "CloudquerySource-OrgWideCloudwatchAlarmsContainer",
            "Secrets": [
              {
                "Name": "DB_USERNAME",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_HOST",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_PASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
              {
                "Name": "CLOUDQUERY_API_KEY",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "cloudqueryapikeyCCF82F53",
                      },
                      ":api-key::",
                    ],
                  ],
                },
              },
            ],
          },
          {
            "Command": [
              "/bin/sh",
              "-c",
              "psql -c "INSERT INTO cloudquery_table_frequency VALUES ('aws_cloudwatch_alarms', 'DAILY') ON CONFLICT (table_name) DO UPDATE SET frequency = 'DAILY'"",
            ],
            "DockerLabels": {
              "App": "service-catalogue",
              "Name": "OrgWideCloudwatchAlarms",
              "Stack": "deploy",
              "Stage": "TEST",
            },
            "EntryPoint": [
              "",
            ],
            "Essential": false,
            "Image": "public.ecr.aws/docker/library/postgres:16-alpine",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "Name": "CloudquerySource-OrgWideCloudwatchAlarmsPostgresContainer",
            "Secrets": [
              {
                "Name": "PGUSER",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              {
                "Name": "PGHOST",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              {
                "Name": "PGPASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
            ],
          },
          {
            "Environment": [
              {
                "Name": "STACK",
                "Value": "deploy",
              },
              {
                "Name": "STAGE",
                "Value": "TEST",
              },
              {
                "Name": "APP",
                "Value": "service-catalogue",
              },
              {
                "Name": "GU_REPO",
                "Value": "guardian/service-catalogue",
              },
            ],
            "Essential": true,
            "FirelensConfiguration": {
              "Type": "fluentbit",
            },
            "Image": "ghcr.io/guardian/devx-logs:2",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "CloudquerySourceOrgWideCloudwatchAlarmsTaskDefinitionCloudquerySourceOrgWideCloudwatchAlarmsFirelensLogGroup5A8CFBF6",
                },
                "awslogs-region": {
                  "Ref": "AWS::Region",
                },
                "awslogs-stream-prefix": "deploy/TEST/service-catalogue",
              },
            },
            "Name": "CloudquerySource-OrgWideCloudwatchAlarmsFirelens",
          },
        ],
        "Cpu": "256",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "CloudquerySourceOrgWideCloudwatchAlarmsTaskDefinitionExecutionRole6970372F",
            "Arn",
          ],
        },
        "Family": "ServiceCatalogueCloudquerySourceOrgWideCloudwatchAlarmsTaskDefinition61B22AE9",
        "Memory": "512",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE",
        ],
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "OrgWideCloudwatchAlarms",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "CloudquerySourceOrgWideCloudwatchAlarmsTaskDefinitionTaskRoleFB6E9716",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "CloudquerySourceOrgWideCloudwatchAlarmsTaskDefinitionTaskRoleDefaultPolicy7C3C509A": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kinesis:Describe*",
                "kinesis:Put*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":kinesis:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":stream/",
                    {
                      "Ref": "LoggingStreamName",
                    },
                  ],
                ],
              },
            },
            {
              "Action": "organizations:List*",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": "arn:aws:iam::*:role/cloudquery-access",
            },
            {
              "Action": "rds-db:connect",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":rds-db:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":dbuser:",
                    {
                      "Fn::GetAtt": [
                        "PostgresInstance16DE4286E",
                        "DbiResourceId",
                      ],
                    },
                    "/{{resolve:secretsmanager:",
                    {
                      "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                    },
                    ":SecretString:username::}}",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceOrgWideCloudwatchAlarmsTaskDefinitionTaskRoleDefaultPolicy7C3C509A",
        "Roles": [
          {
            "Ref": "CloudquerySourceOrgWideCloudwatchAlarmsTaskDefinitionTaskRoleFB6E9716",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceOrgWideCloudwatchAlarmsTaskDefinitionTaskRoleFB6E9716": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "OrgWideCloudwatchAlarms",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceOrgWideDynamoDBScheduledEventRule6AF4B752": {
      "Properties": {
        "ScheduleExpression": "cron(0 5 * * ? *)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "servicecatalogueCluster5FC34DC5",
                "Arn",
              ],
            },
            "EcsParameters": {
              "LaunchType": "FARGATE",
              "NetworkConfiguration": {
                "AwsVpcConfiguration": {
                  "AssignPublicIp": "DISABLED",
                  "SecurityGroups": [
                    {
                      "Fn::GetAtt": [
                        "PostgresAccessSecurityGroupServicecatalogue03C78F14",
                        "GroupId",
                      ],
                    },
                  ],
                  "Subnets": {
                    "Ref": "PrivateSubnets",
                  },
                },
              },
              "TaskCount": 1,
              "TaskDefinitionArn": {
                "Ref": "CloudquerySourceOrgWideDynamoDBTaskDefinition7016173E",
              },
            },
            "Id": "Target0",
            "Input": "{}",
            "RoleArn": {
              "Fn::GetAtt": [
                "CloudquerySourceOrgWideDynamoDBTaskDefinitionEventsRole9D48B8A8",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "CloudquerySourceOrgWideDynamoDBTaskDefinition7016173E": {
      "Properties": {
        "ContainerDefinitions": [
          {
            "Command": [
              "/bin/sh",
              "-c",
              "wget -O /usr/local/share/ca-certificates/global-bundle.crt -q https://truststore.pki.rds.amazonaws.com/global/global-bundle.pem && update-ca-certificates;printf 'kind: source
spec:
  name: aws
  path: cloudquery/aws
  version: v23.3.1
  tables:
    - aws_dynamodb*
  destinations:
    - postgresql
  spec:
    regions:
      - eu-west-1
      - eu-west-2
      - us-east-1
      - us-east-2
      - us-west-1
      - ap-southeast-2
      - ca-central-1
    org:
      member_role_name: cloudquery-access
      organization_units:
        - ou-123
' > /source.yaml;printf 'kind: destination
spec:
  name: postgresql
  registry: github
  path: cloudquery/postgresql
  version: v7.0.1
  migrate_mode: forced
  spec:
    connection_string: >-
      user=\${DB_USERNAME} password=\${DB_PASSWORD} host=\${DB_HOST} port=5432
      dbname=postgres sslmode=verify-full
' > /destination.yaml;/app/cloudquery sync /source.yaml /destination.yaml --log-format json --log-console",
            ],
            "DockerLabels": {
              "App": "service-catalogue",
              "Name": "OrgWideDynamoDB",
              "Stack": "deploy",
              "Stage": "TEST",
            },
            "EntryPoint": [
              "",
            ],
            "Environment": [
              {
                "Name": "GOMEMLIMIT",
                "Value": "409MiB",
              },
            ],
            "Essential": true,
            "Image": "ghcr.io/cloudquery/cloudquery:4.3.5",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "Name": "CloudquerySource-OrgWideDynamoDBContainer",
            "Secrets": [
              {
                "Name": "DB_USERNAME",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_HOST",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_PASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
              {
                "Name": "CLOUDQUERY_API_KEY",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "cloudqueryapikeyCCF82F53",
                      },
                      ":api-key::",
                    ],
                  ],
                },
              },
            ],
          },
          {
            "Command": [
              "/bin/sh",
              "-c",
              "psql -c "INSERT INTO cloudquery_table_frequency VALUES ('aws_dynamodb%', 'DAILY') ON CONFLICT (table_name) DO UPDATE SET frequency = 'DAILY'"",
            ],
            "DockerLabels": {
              "App": "service-catalogue",
              "Name": "OrgWideDynamoDB",
              "Stack": "deploy",
              "Stage": "TEST",
            },
            "EntryPoint": [
              "",
            ],
            "Essential": false,
            "Image": "public.ecr.aws/docker/library/postgres:16-alpine",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "Name": "CloudquerySource-OrgWideDynamoDBPostgresContainer",
            "Secrets": [
              {
                "Name": "PGUSER",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              {
                "Name": "PGHOST",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              {
                "Name": "PGPASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
            ],
          },
          {
            "Environment": [
              {
                "Name": "STACK",
                "Value": "deploy",
              },
              {
                "Name": "STAGE",
                "Value": "TEST",
              },
              {
                "Name": "APP",
                "Value": "service-catalogue",
              },
              {
                "Name": "GU_REPO",
                "Value": "guardian/service-catalogue",
              },
            ],
            "Essential": true,
            "FirelensConfiguration": {
              "Type": "fluentbit",
            },
            "Image": "ghcr.io/guardian/devx-logs:2",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "CloudquerySourceOrgWideDynamoDBTaskDefinitionCloudquerySourceOrgWideDynamoDBFirelensLogGroup6E2D315C",
                },
                "awslogs-region": {
                  "Ref": "AWS::Region",
                },
                "awslogs-stream-prefix": "deploy/TEST/service-catalogue",
              },
            },
            "Name": "CloudquerySource-OrgWideDynamoDBFirelens",
          },
        ],
        "Cpu": "256",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "CloudquerySourceOrgWideDynamoDBTaskDefinitionExecutionRole1667A93E",
            "Arn",
          ],
        },
        "Family": "ServiceCatalogueCloudquerySourceOrgWideDynamoDBTaskDefinition7EBC3978",
        "Memory": "512",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE",
        ],
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "OrgWideDynamoDB",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "CloudquerySourceOrgWideDynamoDBTaskDefinitionTaskRole8E1217DC",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "CloudquerySourceOrgWideDynamoDBTaskDefinitionCloudquerySourceOrgWideDynamoDBFirelensLogGroup6E2D315C": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionInDays": 1,
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "OrgWideDynamoDB",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "CloudquerySourceOrgWideDynamoDBTaskDefinitionEventsRole9D48B8A8": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "OrgWideDynamoDB",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceOrgWideDynamoDBTaskDefinitionEventsRoleDefaultPolicy7E238787": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ecs:RunTask",
              "Condition": {
                "ArnEquals": {
                  "ecs:cluster": {
                    "Fn::GetAtt": [
                      "servicecatalogueCluster5FC34DC5",
                      "Arn",
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Resource": {
                "Ref": "CloudquerySourceOrgWideDynamoDBTaskDefinition7016173E",
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceOrgWideDynamoDBTaskDefinitionExecutionRole1667A93E",
                  "Arn",
                ],
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceOrgWideDynamoDBTaskDefinitionTaskRole8E1217DC",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceOrgWideDynamoDBTaskDefinitionEventsRoleDefaultPolicy7E238787",
        "Roles": [
          {
            "Ref": "CloudquerySourceOrgWideDynamoDBTaskDefinitionEventsRole9D48B8A8",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceOrgWideDynamoDBTaskDefinitionExecutionRole1667A93E": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "OrgWideDynamoDB",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceOrgWideDynamoDBTaskDefinitionExecutionRoleDefaultPolicyA773299D": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
              },
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "cloudqueryapikeyCCF82F53",
              },
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceOrgWideDynamoDBTaskDefinitionCloudquerySourceOrgWideDynamoDBFirelensLogGroup6E2D315C",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceOrgWideDynamoDBTaskDefinitionExecutionRoleDefaultPolicyA773299D",
        "Roles": [
          {
            "Ref": "CloudquerySourceOrgWideDynamoDBTaskDefinitionExecutionRole1667A93E",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceOrgWideDynamoDBTaskDefinitionTaskRole8E1217DC": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "OrgWideDynamoDB",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceOrgWideDynamoDBTaskDefinitionTaskRoleDefaultPolicy9F027047": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kinesis:Describe*",
                "kinesis:Put*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":kinesis:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":stream/",
                    {
                      "Ref": "LoggingStreamName",
                    },
                  ],
                ],
              },
            },
            {
              "Action": "organizations:List*",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": "arn:aws:iam::*:role/cloudquery-access",
            },
            {
              "Action": "rds-db:connect",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":rds-db:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":dbuser:",
                    {
                      "Fn::GetAtt": [
                        "PostgresInstance16DE4286E",
                        "DbiResourceId",
                      ],
                    },
                    "/{{resolve:secretsmanager:",
                    {
                      "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                    },
                    ":SecretString:username::}}",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceOrgWideDynamoDBTaskDefinitionTaskRoleDefaultPolicy9F027047",
        "Roles": [
          {
            "Ref": "CloudquerySourceOrgWideDynamoDBTaskDefinitionTaskRole8E1217DC",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceOrgWideEc2ScheduledEventRule3D54BEFB": {
      "Properties": {
        "ScheduleExpression": "rate(30 minutes)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "servicecatalogueCluster5FC34DC5",
                "Arn",
              ],
            },
            "EcsParameters": {
              "LaunchType": "FARGATE",
              "NetworkConfiguration": {
                "AwsVpcConfiguration": {
                  "AssignPublicIp": "DISABLED",
                  "SecurityGroups": [
                    {
                      "Fn::GetAtt": [
                        "PostgresAccessSecurityGroupServicecatalogue03C78F14",
                        "GroupId",
                      ],
                    },
                  ],
                  "Subnets": {
                    "Ref": "PrivateSubnets",
                  },
                },
              },
              "TaskCount": 1,
              "TaskDefinitionArn": {
                "Ref": "CloudquerySourceOrgWideEc2TaskDefinition7E4B2AE4",
              },
            },
            "Id": "Target0",
            "Input": "{}",
            "RoleArn": {
              "Fn::GetAtt": [
                "CloudquerySourceOrgWideEc2TaskDefinitionEventsRole34519DB3",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "CloudquerySourceOrgWideEc2TaskDefinition7E4B2AE4": {
      "Properties": {
        "ContainerDefinitions": [
          {
            "Command": [
              "/bin/sh",
              "-c",
              "wget -O /usr/local/share/ca-certificates/global-bundle.crt -q https://truststore.pki.rds.amazonaws.com/global/global-bundle.pem && update-ca-certificates;printf 'kind: source
spec:
  name: aws
  path: cloudquery/aws
  version: v23.3.1
  tables:
    - aws_ec2_instances
    - aws_ec2_security_groups
    - aws_ec2_images
  destinations:
    - postgresql
  spec:
    regions:
      - eu-west-1
      - eu-west-2
      - us-east-1
      - us-east-2
      - us-west-1
      - ap-southeast-2
      - ca-central-1
    org:
      member_role_name: cloudquery-access
      organization_units:
        - ou-123
' > /source.yaml;printf 'kind: destination
spec:
  name: postgresql
  registry: github
  path: cloudquery/postgresql
  version: v7.0.1
  migrate_mode: forced
  spec:
    connection_string: >-
      user=\${DB_USERNAME} password=\${DB_PASSWORD} host=\${DB_HOST} port=5432
      dbname=postgres sslmode=verify-full
' > /destination.yaml;/app/cloudquery sync /source.yaml /destination.yaml --log-format json --log-console",
            ],
            "DependsOn": [
              {
                "Condition": "SUCCESS",
                "ContainerName": "CloudquerySource-OrgWideEc2AwsCli",
              },
            ],
            "DockerLabels": {
              "App": "service-catalogue",
              "Name": "OrgWideEc2",
              "Stack": "deploy",
              "Stage": "TEST",
            },
            "EntryPoint": [
              "",
            ],
            "Environment": [
              {
                "Name": "GOMEMLIMIT",
                "Value": "819MiB",
              },
            ],
            "Essential": true,
            "Image": "ghcr.io/cloudquery/cloudquery:4.3.5",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "Name": "CloudquerySource-OrgWideEc2Container",
            "Secrets": [
              {
                "Name": "DB_USERNAME",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_HOST",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_PASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
              {
                "Name": "CLOUDQUERY_API_KEY",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "cloudqueryapikeyCCF82F53",
                      },
                      ":api-key::",
                    ],
                  ],
                },
              },
            ],
          },
          {
            "Command": [
              "/bin/bash",
              "-c",
              "yum install -y -q jq awscli;ECS_CLUSTER=$(curl -s $ECS_CONTAINER_METADATA_URI/task | jq -r '.Cluster');ECS_FAMILY=$(curl -s $ECS_CONTAINER_METADATA_URI/task | jq -r '.Family');ECS_TASK_ARN=$(curl -s $ECS_CONTAINER_METADATA_URI/task | jq -r '.TaskARN');RUNNING=$(aws ecs list-tasks --cluster $ECS_CLUSTER --family $ECS_FAMILY | jq '.taskArns | length');[[ \${RUNNING} > 1 ]] && exit 114 || exit 0",
            ],
            "EntryPoint": [
              "",
            ],
            "Essential": false,
            "Image": "public.ecr.aws/amazonlinux/amazonlinux:latest",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "Name": "CloudquerySource-OrgWideEc2AwsCli",
          },
          {
            "Command": [
              "/bin/sh",
              "-c",
              "psql -c "INSERT INTO cloudquery_table_frequency VALUES ('aws_ec2_instances', 'DAILY'),('aws_ec2_security_groups', 'DAILY'),('aws_ec2_images', 'DAILY') ON CONFLICT (table_name) DO UPDATE SET frequency = 'DAILY'"",
            ],
            "DockerLabels": {
              "App": "service-catalogue",
              "Name": "OrgWideEc2",
              "Stack": "deploy",
              "Stage": "TEST",
            },
            "EntryPoint": [
              "",
            ],
            "Essential": false,
            "Image": "public.ecr.aws/docker/library/postgres:16-alpine",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "Name": "CloudquerySource-OrgWideEc2PostgresContainer",
            "Secrets": [
              {
                "Name": "PGUSER",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              {
                "Name": "PGHOST",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              {
                "Name": "PGPASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
            ],
          },
          {
            "Environment": [
              {
                "Name": "STACK",
                "Value": "deploy",
              },
              {
                "Name": "STAGE",
                "Value": "TEST",
              },
              {
                "Name": "APP",
                "Value": "service-catalogue",
              },
              {
                "Name": "GU_REPO",
                "Value": "guardian/service-catalogue",
              },
            ],
            "Essential": true,
            "FirelensConfiguration": {
              "Type": "fluentbit",
            },
            "Image": "ghcr.io/guardian/devx-logs:2",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "CloudquerySourceOrgWideEc2TaskDefinitionCloudquerySourceOrgWideEc2FirelensLogGroup5214B9E0",
                },
                "awslogs-region": {
                  "Ref": "AWS::Region",
                },
                "awslogs-stream-prefix": "deploy/TEST/service-catalogue",
              },
            },
            "Name": "CloudquerySource-OrgWideEc2Firelens",
          },
        ],
        "Cpu": "256",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "CloudquerySourceOrgWideEc2TaskDefinitionExecutionRole806432F0",
            "Arn",
          ],
        },
        "Family": "ServiceCatalogueCloudquerySourceOrgWideEc2TaskDefinition93B6B037",
        "Memory": "1024",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE",
        ],
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "OrgWideEc2",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "CloudquerySourceOrgWideEc2TaskDefinitionTaskRole6C3A882C",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "CloudquerySourceOrgWideEc2TaskDefinitionCloudquerySourceOrgWideEc2FirelensLogGroup5214B9E0": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionInDays": 1,
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "OrgWideEc2",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "CloudquerySourceOrgWideEc2TaskDefinitionEventsRole34519DB3": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "OrgWideEc2",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceOrgWideEc2TaskDefinitionEventsRoleDefaultPolicyA48042A3": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ecs:RunTask",
              "Condition": {
                "ArnEquals": {
                  "ecs:cluster": {
                    "Fn::GetAtt": [
                      "servicecatalogueCluster5FC34DC5",
                      "Arn",
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Resource": {
                "Ref": "CloudquerySourceOrgWideEc2TaskDefinition7E4B2AE4",
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceOrgWideEc2TaskDefinitionExecutionRole806432F0",
                  "Arn",
                ],
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceOrgWideEc2TaskDefinitionTaskRole6C3A882C",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceOrgWideEc2TaskDefinitionEventsRoleDefaultPolicyA48042A3",
        "Roles": [
          {
            "Ref": "CloudquerySourceOrgWideEc2TaskDefinitionEventsRole34519DB3",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceOrgWideEc2TaskDefinitionExecutionRole806432F0": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "OrgWideEc2",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceOrgWideEc2TaskDefinitionExecutionRoleDefaultPolicy1BF4301F": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
              },
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "cloudqueryapikeyCCF82F53",
              },
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceOrgWideEc2TaskDefinitionCloudquerySourceOrgWideEc2FirelensLogGroup5214B9E0",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceOrgWideEc2TaskDefinitionExecutionRoleDefaultPolicy1BF4301F",
        "Roles": [
          {
            "Ref": "CloudquerySourceOrgWideEc2TaskDefinitionExecutionRole806432F0",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceOrgWideEc2TaskDefinitionTaskRole6C3A882C": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "OrgWideEc2",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceOrgWideEc2TaskDefinitionTaskRoleDefaultPolicy908F983F": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ecs:ListTasks",
              "Condition": {
                "StringEquals": {
                  "ecs:cluster": {
                    "Fn::GetAtt": [
                      "servicecatalogueCluster5FC34DC5",
                      "Arn",
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "kinesis:Describe*",
                "kinesis:Put*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":kinesis:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":stream/",
                    {
                      "Ref": "LoggingStreamName",
                    },
                  ],
                ],
              },
            },
            {
              "Action": "organizations:List*",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": "arn:aws:iam::*:role/cloudquery-access",
            },
            {
              "Action": "rds-db:connect",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":rds-db:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":dbuser:",
                    {
                      "Fn::GetAtt": [
                        "PostgresInstance16DE4286E",
                        "DbiResourceId",
                      ],
                    },
                    "/{{resolve:secretsmanager:",
                    {
                      "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                    },
                    ":SecretString:username::}}",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceOrgWideEc2TaskDefinitionTaskRoleDefaultPolicy908F983F",
        "Roles": [
          {
            "Ref": "CloudquerySourceOrgWideEc2TaskDefinitionTaskRole6C3A882C",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceOrgWideInspectorScheduledEventRule0152ABA6": {
      "Properties": {
        "ScheduleExpression": "cron(0 3 * * ? *)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "servicecatalogueCluster5FC34DC5",
                "Arn",
              ],
            },
            "EcsParameters": {
              "LaunchType": "FARGATE",
              "NetworkConfiguration": {
                "AwsVpcConfiguration": {
                  "AssignPublicIp": "DISABLED",
                  "SecurityGroups": [
                    {
                      "Fn::GetAtt": [
                        "PostgresAccessSecurityGroupServicecatalogue03C78F14",
                        "GroupId",
                      ],
                    },
                  ],
                  "Subnets": {
                    "Ref": "PrivateSubnets",
                  },
                },
              },
              "TaskCount": 1,
              "TaskDefinitionArn": {
                "Ref": "CloudquerySourceOrgWideInspectorTaskDefinition25FAB51D",
              },
            },
            "Id": "Target0",
            "Input": "{}",
            "RoleArn": {
              "Fn::GetAtt": [
                "CloudquerySourceOrgWideInspectorTaskDefinitionEventsRoleF72F2CE5",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "CloudquerySourceOrgWideInspectorTaskDefinition25FAB51D": {
      "Properties": {
        "ContainerDefinitions": [
          {
            "Command": [
              "/bin/sh",
              "-c",
              "wget -O /usr/local/share/ca-certificates/global-bundle.crt -q https://truststore.pki.rds.amazonaws.com/global/global-bundle.pem && update-ca-certificates;printf 'kind: source
spec:
  name: aws
  path: cloudquery/aws
  version: v23.3.1
  tables:
    - aws_inspector_findings
    - aws_inspector2_findings
  destinations:
    - postgresql
  spec:
    regions:
      - eu-west-1
      - eu-west-2
      - us-east-1
      - us-east-2
      - us-west-1
      - ap-southeast-2
      - ca-central-1
    org:
      member_role_name: cloudquery-access
      organization_units:
        - ou-123
' > /source.yaml;printf 'kind: destination
spec:
  name: postgresql
  registry: github
  path: cloudquery/postgresql
  version: v7.0.1
  migrate_mode: forced
  spec:
    connection_string: >-
      user=\${DB_USERNAME} password=\${DB_PASSWORD} host=\${DB_HOST} port=5432
      dbname=postgres sslmode=verify-full
' > /destination.yaml;/app/cloudquery sync /source.yaml /destination.yaml --log-format json --log-console",
            ],
            "DockerLabels": {
              "App": "service-catalogue",
              "Name": "OrgWideInspector",
              "Stack": "deploy",
              "Stage": "TEST",
            },
            "EntryPoint": [
              "",
            ],
            "Environment": [
              {
                "Name": "GOMEMLIMIT",
                "Value": "819MiB",
              },
            ],
            "Essential": true,
            "Image": "ghcr.io/cloudquery/cloudquery:4.3.5",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "Name": "CloudquerySource-OrgWideInspectorContainer",
            "Secrets": [
              {
                "Name": "DB_USERNAME",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_HOST",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_PASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
              {
                "Name": "CLOUDQUERY_API_KEY",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "cloudqueryapikeyCCF82F53",
                      },
                      ":api-key::",
                    ],
                  ],
                },
              },
            ],
          },
          {
            "Command": [
              "/bin/sh",
              "-c",
              "psql -c "INSERT INTO cloudquery_table_frequency VALUES ('aws_inspector_findings', 'DAILY'),('aws_inspector2_findings', 'DAILY') ON CONFLICT (table_name) DO UPDATE SET frequency = 'DAILY'"",
            ],
            "DockerLabels": {
              "App": "service-catalogue",
              "Name": "OrgWideInspector",
              "Stack": "deploy",
              "Stage": "TEST",
            },
            "EntryPoint": [
              "",
            ],
            "Essential": false,
            "Image": "public.ecr.aws/docker/library/postgres:16-alpine",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "Name": "CloudquerySource-OrgWideInspectorPostgresContainer",
            "Secrets": [
              {
                "Name": "PGUSER",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              {
                "Name": "PGHOST",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              {
                "Name": "PGPASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
            ],
          },
          {
            "Environment": [
              {
                "Name": "STACK",
                "Value": "deploy",
              },
              {
                "Name": "STAGE",
                "Value": "TEST",
              },
              {
                "Name": "APP",
                "Value": "service-catalogue",
              },
              {
                "Name": "GU_REPO",
                "Value": "guardian/service-catalogue",
              },
            ],
            "Essential": true,
            "FirelensConfiguration": {
              "Type": "fluentbit",
            },
            "Image": "ghcr.io/guardian/devx-logs:2",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "CloudquerySourceOrgWideInspectorTaskDefinitionCloudquerySourceOrgWideInspectorFirelensLogGroupCDA3721C",
                },
                "awslogs-region": {
                  "Ref": "AWS::Region",
                },
                "awslogs-stream-prefix": "deploy/TEST/service-catalogue",
              },
            },
            "Name": "CloudquerySource-OrgWideInspectorFirelens",
          },
        ],
        "Cpu": "256",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "CloudquerySourceOrgWideInspectorTaskDefinitionExecutionRoleBF64FC99",
            "Arn",
          ],
        },
        "Family": "ServiceCatalogueCloudquerySourceOrgWideInspectorTaskDefinition280F3CC7",
        "Memory": "1024",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE",
        ],
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "OrgWideInspector",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "CloudquerySourceOrgWideInspectorTaskDefinitionTaskRole3C0526F5",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "CloudquerySourceOrgWideInspectorTaskDefinitionCloudquerySourceOrgWideInspectorFirelensLogGroupCDA3721C": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionInDays": 1,
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "OrgWideInspector",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "CloudquerySourceOrgWideInspectorTaskDefinitionEventsRoleDefaultPolicy94BFDDF0": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ecs:RunTask",
              "Condition": {
                "ArnEquals": {
                  "ecs:cluster": {
                    "Fn::GetAtt": [
                      "servicecatalogueCluster5FC34DC5",
                      "Arn",
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Resource": {
                "Ref": "CloudquerySourceOrgWideInspectorTaskDefinition25FAB51D",
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceOrgWideInspectorTaskDefinitionExecutionRoleBF64FC99",
                  "Arn",
                ],
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceOrgWideInspectorTaskDefinitionTaskRole3C0526F5",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceOrgWideInspectorTaskDefinitionEventsRoleDefaultPolicy94BFDDF0",
        "Roles": [
          {
            "Ref": "CloudquerySourceOrgWideInspectorTaskDefinitionEventsRoleF72F2CE5",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceOrgWideInspectorTaskDefinitionEventsRoleF72F2CE5": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "OrgWideInspector",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceOrgWideInspectorTaskDefinitionExecutionRoleBF64FC99": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "OrgWideInspector",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceOrgWideInspectorTaskDefinitionExecutionRoleDefaultPolicyBD358658": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
              },
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "cloudqueryapikeyCCF82F53",
              },
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceOrgWideInspectorTaskDefinitionCloudquerySourceOrgWideInspectorFirelensLogGroupCDA3721C",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceOrgWideInspectorTaskDefinitionExecutionRoleDefaultPolicyBD358658",
        "Roles": [
          {
            "Ref": "CloudquerySourceOrgWideInspectorTaskDefinitionExecutionRoleBF64FC99",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceOrgWideInspectorTaskDefinitionTaskRole3C0526F5": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "OrgWideInspector",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceOrgWideInspectorTaskDefinitionTaskRoleDefaultPolicy93DAC4A1": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kinesis:Describe*",
                "kinesis:Put*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":kinesis:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":stream/",
                    {
                      "Ref": "LoggingStreamName",
                    },
                  ],
                ],
              },
            },
            {
              "Action": "organizations:List*",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": "arn:aws:iam::*:role/cloudquery-access",
            },
            {
              "Action": "rds-db:connect",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":rds-db:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":dbuser:",
                    {
                      "Fn::GetAtt": [
                        "PostgresInstance16DE4286E",
                        "DbiResourceId",
                      ],
                    },
                    "/{{resolve:secretsmanager:",
                    {
                      "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                    },
                    ":SecretString:username::}}",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceOrgWideInspectorTaskDefinitionTaskRoleDefaultPolicy93DAC4A1",
        "Roles": [
          {
            "Ref": "CloudquerySourceOrgWideInspectorTaskDefinitionTaskRole3C0526F5",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceOrgWideLoadBalancersScheduledEventRule1B13EFF3": {
      "Properties": {
        "ScheduleExpression": "cron(0 23 * * ? *)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "servicecatalogueCluster5FC34DC5",
                "Arn",
              ],
            },
            "EcsParameters": {
              "LaunchType": "FARGATE",
              "NetworkConfiguration": {
                "AwsVpcConfiguration": {
                  "AssignPublicIp": "DISABLED",
                  "SecurityGroups": [
                    {
                      "Fn::GetAtt": [
                        "PostgresAccessSecurityGroupServicecatalogue03C78F14",
                        "GroupId",
                      ],
                    },
                  ],
                  "Subnets": {
                    "Ref": "PrivateSubnets",
                  },
                },
              },
              "TaskCount": 1,
              "TaskDefinitionArn": {
                "Ref": "CloudquerySourceOrgWideLoadBalancersTaskDefinitionF1D11F23",
              },
            },
            "Id": "Target0",
            "Input": "{}",
            "RoleArn": {
              "Fn::GetAtt": [
                "CloudquerySourceOrgWideLoadBalancersTaskDefinitionEventsRoleC6DAFC26",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "CloudquerySourceOrgWideLoadBalancersTaskDefinitionCloudquerySourceOrgWideLoadBalancersFirelensLogGroupC2738C36": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionInDays": 1,
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "OrgWideLoadBalancers",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "CloudquerySourceOrgWideLoadBalancersTaskDefinitionEventsRoleC6DAFC26": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "OrgWideLoadBalancers",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceOrgWideLoadBalancersTaskDefinitionEventsRoleDefaultPolicy0BDC4116": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ecs:RunTask",
              "Condition": {
                "ArnEquals": {
                  "ecs:cluster": {
                    "Fn::GetAtt": [
                      "servicecatalogueCluster5FC34DC5",
                      "Arn",
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Resource": {
                "Ref": "CloudquerySourceOrgWideLoadBalancersTaskDefinitionF1D11F23",
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceOrgWideLoadBalancersTaskDefinitionExecutionRole78CACF8A",
                  "Arn",
                ],
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceOrgWideLoadBalancersTaskDefinitionTaskRoleABB2ABAD",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceOrgWideLoadBalancersTaskDefinitionEventsRoleDefaultPolicy0BDC4116",
        "Roles": [
          {
            "Ref": "CloudquerySourceOrgWideLoadBalancersTaskDefinitionEventsRoleC6DAFC26",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceOrgWideLoadBalancersTaskDefinitionExecutionRole78CACF8A": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "OrgWideLoadBalancers",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceOrgWideLoadBalancersTaskDefinitionExecutionRoleDefaultPolicy3D7183B9": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
              },
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "cloudqueryapikeyCCF82F53",
              },
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceOrgWideLoadBalancersTaskDefinitionCloudquerySourceOrgWideLoadBalancersFirelensLogGroupC2738C36",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceOrgWideLoadBalancersTaskDefinitionExecutionRoleDefaultPolicy3D7183B9",
        "Roles": [
          {
            "Ref": "CloudquerySourceOrgWideLoadBalancersTaskDefinitionExecutionRole78CACF8A",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceOrgWideLoadBalancersTaskDefinitionF1D11F23": {
      "Properties": {
        "ContainerDefinitions": [
          {
            "Command": [
              "/bin/sh",
              "-c",
              "wget -O /usr/local/share/ca-certificates/global-bundle.crt -q https://truststore.pki.rds.amazonaws.com/global/global-bundle.pem && update-ca-certificates;printf 'kind: source
spec:
  name: aws
  path: cloudquery/aws
  version: v23.3.1
  tables:
    - aws_elbv1_*
    - aws_elbv2_*
  destinations:
    - postgresql
  spec:
    regions:
      - eu-west-1
      - eu-west-2
      - us-east-1
      - us-east-2
      - us-west-1
      - ap-southeast-2
      - ca-central-1
    org:
      member_role_name: cloudquery-access
      organization_units:
        - ou-123
' > /source.yaml;printf 'kind: destination
spec:
  name: postgresql
  registry: github
  path: cloudquery/postgresql
  version: v7.0.1
  migrate_mode: forced
  spec:
    connection_string: >-
      user=\${DB_USERNAME} password=\${DB_PASSWORD} host=\${DB_HOST} port=5432
      dbname=postgres sslmode=verify-full
' > /destination.yaml;/app/cloudquery sync /source.yaml /destination.yaml --log-format json --log-console",
            ],
            "DockerLabels": {
              "App": "service-catalogue",
              "Name": "OrgWideLoadBalancers",
              "Stack": "deploy",
              "Stage": "TEST",
            },
            "EntryPoint": [
              "",
            ],
            "Environment": [
              {
                "Name": "GOMEMLIMIT",
                "Value": "409MiB",
              },
            ],
            "Essential": true,
            "Image": "ghcr.io/cloudquery/cloudquery:4.3.5",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "Name": "CloudquerySource-OrgWideLoadBalancersContainer",
            "Secrets": [
              {
                "Name": "DB_USERNAME",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_HOST",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_PASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
              {
                "Name": "CLOUDQUERY_API_KEY",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "cloudqueryapikeyCCF82F53",
                      },
                      ":api-key::",
                    ],
                  ],
                },
              },
            ],
          },
          {
            "Command": [
              "/bin/sh",
              "-c",
              "psql -c "INSERT INTO cloudquery_table_frequency VALUES ('aws_elbv1_%', 'DAILY'),('aws_elbv2_%', 'DAILY') ON CONFLICT (table_name) DO UPDATE SET frequency = 'DAILY'"",
            ],
            "DockerLabels": {
              "App": "service-catalogue",
              "Name": "OrgWideLoadBalancers",
              "Stack": "deploy",
              "Stage": "TEST",
            },
            "EntryPoint": [
              "",
            ],
            "Essential": false,
            "Image": "public.ecr.aws/docker/library/postgres:16-alpine",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "Name": "CloudquerySource-OrgWideLoadBalancersPostgresContainer",
            "Secrets": [
              {
                "Name": "PGUSER",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              {
                "Name": "PGHOST",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              {
                "Name": "PGPASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
            ],
          },
          {
            "Environment": [
              {
                "Name": "STACK",
                "Value": "deploy",
              },
              {
                "Name": "STAGE",
                "Value": "TEST",
              },
              {
                "Name": "APP",
                "Value": "service-catalogue",
              },
              {
                "Name": "GU_REPO",
                "Value": "guardian/service-catalogue",
              },
            ],
            "Essential": true,
            "FirelensConfiguration": {
              "Type": "fluentbit",
            },
            "Image": "ghcr.io/guardian/devx-logs:2",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "CloudquerySourceOrgWideLoadBalancersTaskDefinitionCloudquerySourceOrgWideLoadBalancersFirelensLogGroupC2738C36",
                },
                "awslogs-region": {
                  "Ref": "AWS::Region",
                },
                "awslogs-stream-prefix": "deploy/TEST/service-catalogue",
              },
            },
            "Name": "CloudquerySource-OrgWideLoadBalancersFirelens",
          },
        ],
        "Cpu": "256",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "CloudquerySourceOrgWideLoadBalancersTaskDefinitionExecutionRole78CACF8A",
            "Arn",
          ],
        },
        "Family": "ServiceCatalogueCloudquerySourceOrgWideLoadBalancersTaskDefinition572402B4",
        "Memory": "512",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE",
        ],
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "OrgWideLoadBalancers",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "CloudquerySourceOrgWideLoadBalancersTaskDefinitionTaskRoleABB2ABAD",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "CloudquerySourceOrgWideLoadBalancersTaskDefinitionTaskRoleABB2ABAD": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "OrgWideLoadBalancers",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceOrgWideLoadBalancersTaskDefinitionTaskRoleDefaultPolicy07CCC4DB": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kinesis:Describe*",
                "kinesis:Put*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":kinesis:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":stream/",
                    {
                      "Ref": "LoggingStreamName",
                    },
                  ],
                ],
              },
            },
            {
              "Action": "organizations:List*",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": "arn:aws:iam::*:role/cloudquery-access",
            },
            {
              "Action": "rds-db:connect",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":rds-db:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":dbuser:",
                    {
                      "Fn::GetAtt": [
                        "PostgresInstance16DE4286E",
                        "DbiResourceId",
                      ],
                    },
                    "/{{resolve:secretsmanager:",
                    {
                      "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                    },
                    ":SecretString:username::}}",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceOrgWideLoadBalancersTaskDefinitionTaskRoleDefaultPolicy07CCC4DB",
        "Roles": [
          {
            "Ref": "CloudquerySourceOrgWideLoadBalancersTaskDefinitionTaskRoleABB2ABAD",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceOrgWideRDSScheduledEventRuleD2037915": {
      "Properties": {
        "ScheduleExpression": "cron(0 6 * * ? *)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "servicecatalogueCluster5FC34DC5",
                "Arn",
              ],
            },
            "EcsParameters": {
              "LaunchType": "FARGATE",
              "NetworkConfiguration": {
                "AwsVpcConfiguration": {
                  "AssignPublicIp": "DISABLED",
                  "SecurityGroups": [
                    {
                      "Fn::GetAtt": [
                        "PostgresAccessSecurityGroupServicecatalogue03C78F14",
                        "GroupId",
                      ],
                    },
                  ],
                  "Subnets": {
                    "Ref": "PrivateSubnets",
                  },
                },
              },
              "TaskCount": 1,
              "TaskDefinitionArn": {
                "Ref": "CloudquerySourceOrgWideRDSTaskDefinitionFDF4F4E5",
              },
            },
            "Id": "Target0",
            "Input": "{}",
            "RoleArn": {
              "Fn::GetAtt": [
                "CloudquerySourceOrgWideRDSTaskDefinitionEventsRoleA4A3D1A7",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "CloudquerySourceOrgWideRDSTaskDefinitionCloudquerySourceOrgWideRDSFirelensLogGroup1324D19F": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionInDays": 1,
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "OrgWideRDS",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "CloudquerySourceOrgWideRDSTaskDefinitionEventsRoleA4A3D1A7": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "OrgWideRDS",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceOrgWideRDSTaskDefinitionEventsRoleDefaultPolicyF90E32FB": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ecs:RunTask",
              "Condition": {
                "ArnEquals": {
                  "ecs:cluster": {
                    "Fn::GetAtt": [
                      "servicecatalogueCluster5FC34DC5",
                      "Arn",
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Resource": {
                "Ref": "CloudquerySourceOrgWideRDSTaskDefinitionFDF4F4E5",
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceOrgWideRDSTaskDefinitionExecutionRole419A7267",
                  "Arn",
                ],
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceOrgWideRDSTaskDefinitionTaskRole1B7B6625",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceOrgWideRDSTaskDefinitionEventsRoleDefaultPolicyF90E32FB",
        "Roles": [
          {
            "Ref": "CloudquerySourceOrgWideRDSTaskDefinitionEventsRoleA4A3D1A7",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceOrgWideRDSTaskDefinitionExecutionRole419A7267": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "OrgWideRDS",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceOrgWideRDSTaskDefinitionExecutionRoleDefaultPolicy7D4FBE6E": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
              },
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "cloudqueryapikeyCCF82F53",
              },
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceOrgWideRDSTaskDefinitionCloudquerySourceOrgWideRDSFirelensLogGroup1324D19F",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceOrgWideRDSTaskDefinitionExecutionRoleDefaultPolicy7D4FBE6E",
        "Roles": [
          {
            "Ref": "CloudquerySourceOrgWideRDSTaskDefinitionExecutionRole419A7267",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceOrgWideRDSTaskDefinitionFDF4F4E5": {
      "Properties": {
        "ContainerDefinitions": [
          {
            "Command": [
              "/bin/sh",
              "-c",
              "wget -O /usr/local/share/ca-certificates/global-bundle.crt -q https://truststore.pki.rds.amazonaws.com/global/global-bundle.pem && update-ca-certificates;printf 'kind: source
spec:
  name: aws
  path: cloudquery/aws
  version: v23.3.1
  tables:
    - aws_rds_instances
    - aws_rds_clusters
    - aws_rds_db_snapshots
    - aws_rds_cluster_snapshots
  destinations:
    - postgresql
  spec:
    regions:
      - eu-west-1
      - eu-west-2
      - us-east-1
      - us-east-2
      - us-west-1
      - ap-southeast-2
      - ca-central-1
    org:
      member_role_name: cloudquery-access
      organization_units:
        - ou-123
' > /source.yaml;printf 'kind: destination
spec:
  name: postgresql
  registry: github
  path: cloudquery/postgresql
  version: v7.0.1
  migrate_mode: forced
  spec:
    connection_string: >-
      user=\${DB_USERNAME} password=\${DB_PASSWORD} host=\${DB_HOST} port=5432
      dbname=postgres sslmode=verify-full
' > /destination.yaml;/app/cloudquery sync /source.yaml /destination.yaml --log-format json --log-console",
            ],
            "DockerLabels": {
              "App": "service-catalogue",
              "Name": "OrgWideRDS",
              "Stack": "deploy",
              "Stage": "TEST",
            },
            "EntryPoint": [
              "",
            ],
            "Environment": [
              {
                "Name": "GOMEMLIMIT",
                "Value": "409MiB",
              },
            ],
            "Essential": true,
            "Image": "ghcr.io/cloudquery/cloudquery:4.3.5",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "Name": "CloudquerySource-OrgWideRDSContainer",
            "Secrets": [
              {
                "Name": "DB_USERNAME",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_HOST",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_PASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
              {
                "Name": "CLOUDQUERY_API_KEY",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "cloudqueryapikeyCCF82F53",
                      },
                      ":api-key::",
                    ],
                  ],
                },
              },
            ],
          },
          {
            "Command": [
              "/bin/sh",
              "-c",
              "psql -c "INSERT INTO cloudquery_table_frequency VALUES ('aws_rds_instances', 'DAILY'),('aws_rds_clusters', 'DAILY'),('aws_rds_db_snapshots', 'DAILY'),('aws_rds_cluster_snapshots', 'DAILY') ON CONFLICT (table_name) DO UPDATE SET frequency = 'DAILY'"",
            ],
            "DockerLabels": {
              "App": "service-catalogue",
              "Name": "OrgWideRDS",
              "Stack": "deploy",
              "Stage": "TEST",
            },
            "EntryPoint": [
              "",
            ],
            "Essential": false,
            "Image": "public.ecr.aws/docker/library/postgres:16-alpine",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "Name": "CloudquerySource-OrgWideRDSPostgresContainer",
            "Secrets": [
              {
                "Name": "PGUSER",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              {
                "Name": "PGHOST",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              {
                "Name": "PGPASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
            ],
          },
          {
            "Environment": [
              {
                "Name": "STACK",
                "Value": "deploy",
              },
              {
                "Name": "STAGE",
                "Value": "TEST",
              },
              {
                "Name": "APP",
                "Value": "service-catalogue",
              },
              {
                "Name": "GU_REPO",
                "Value": "guardian/service-catalogue",
              },
            ],
            "Essential": true,
            "FirelensConfiguration": {
              "Type": "fluentbit",
            },
            "Image": "ghcr.io/guardian/devx-logs:2",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "CloudquerySourceOrgWideRDSTaskDefinitionCloudquerySourceOrgWideRDSFirelensLogGroup1324D19F",
                },
                "awslogs-region": {
                  "Ref": "AWS::Region",
                },
                "awslogs-stream-prefix": "deploy/TEST/service-catalogue",
              },
            },
            "Name": "CloudquerySource-OrgWideRDSFirelens",
          },
        ],
        "Cpu": "256",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "CloudquerySourceOrgWideRDSTaskDefinitionExecutionRole419A7267",
            "Arn",
          ],
        },
        "Family": "ServiceCatalogueCloudquerySourceOrgWideRDSTaskDefinition382DCCB0",
        "Memory": "512",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE",
        ],
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "OrgWideRDS",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "CloudquerySourceOrgWideRDSTaskDefinitionTaskRole1B7B6625",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "CloudquerySourceOrgWideRDSTaskDefinitionTaskRole1B7B6625": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "OrgWideRDS",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceOrgWideRDSTaskDefinitionTaskRoleDefaultPolicy9677AC82": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kinesis:Describe*",
                "kinesis:Put*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":kinesis:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":stream/",
                    {
                      "Ref": "LoggingStreamName",
                    },
                  ],
                ],
              },
            },
            {
              "Action": "organizations:List*",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": "arn:aws:iam::*:role/cloudquery-access",
            },
            {
              "Action": "rds-db:connect",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":rds-db:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":dbuser:",
                    {
                      "Fn::GetAtt": [
                        "PostgresInstance16DE4286E",
                        "DbiResourceId",
                      ],
                    },
                    "/{{resolve:secretsmanager:",
                    {
                      "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                    },
                    ":SecretString:username::}}",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceOrgWideRDSTaskDefinitionTaskRoleDefaultPolicy9677AC82",
        "Roles": [
          {
            "Ref": "CloudquerySourceOrgWideRDSTaskDefinitionTaskRole1B7B6625",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceOrgWideS3ScheduledEventRuleB310F050": {
      "Properties": {
        "ScheduleExpression": "cron(0 4 * * ? *)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "servicecatalogueCluster5FC34DC5",
                "Arn",
              ],
            },
            "EcsParameters": {
              "LaunchType": "FARGATE",
              "NetworkConfiguration": {
                "AwsVpcConfiguration": {
                  "AssignPublicIp": "DISABLED",
                  "SecurityGroups": [
                    {
                      "Fn::GetAtt": [
                        "PostgresAccessSecurityGroupServicecatalogue03C78F14",
                        "GroupId",
                      ],
                    },
                  ],
                  "Subnets": {
                    "Ref": "PrivateSubnets",
                  },
                },
              },
              "TaskCount": 1,
              "TaskDefinitionArn": {
                "Ref": "CloudquerySourceOrgWideS3TaskDefinition8B6BA52D",
              },
            },
            "Id": "Target0",
            "Input": "{}",
            "RoleArn": {
              "Fn::GetAtt": [
                "CloudquerySourceOrgWideS3TaskDefinitionEventsRole9E60BBDE",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "CloudquerySourceOrgWideS3TaskDefinition8B6BA52D": {
      "Properties": {
        "ContainerDefinitions": [
          {
            "Command": [
              "/bin/sh",
              "-c",
              "wget -O /usr/local/share/ca-certificates/global-bundle.crt -q https://truststore.pki.rds.amazonaws.com/global/global-bundle.pem && update-ca-certificates;printf 'kind: source
spec:
  name: aws
  path: cloudquery/aws
  version: v23.3.1
  tables:
    - aws_s3*
  destinations:
    - postgresql
  spec:
    regions:
      - eu-west-1
      - eu-west-2
      - us-east-1
      - us-east-2
      - us-west-1
      - ap-southeast-2
      - ca-central-1
    org:
      member_role_name: cloudquery-access
      organization_units:
        - ou-123
' > /source.yaml;printf 'kind: destination
spec:
  name: postgresql
  registry: github
  path: cloudquery/postgresql
  version: v7.0.1
  migrate_mode: forced
  spec:
    connection_string: >-
      user=\${DB_USERNAME} password=\${DB_PASSWORD} host=\${DB_HOST} port=5432
      dbname=postgres sslmode=verify-full
' > /destination.yaml;/app/cloudquery sync /source.yaml /destination.yaml --log-format json --log-console",
            ],
            "DockerLabels": {
              "App": "service-catalogue",
              "Name": "OrgWideS3",
              "Stack": "deploy",
              "Stage": "TEST",
            },
            "EntryPoint": [
              "",
            ],
            "Environment": [
              {
                "Name": "GOMEMLIMIT",
                "Value": "409MiB",
              },
            ],
            "Essential": true,
            "Image": "ghcr.io/cloudquery/cloudquery:4.3.5",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "Name": "CloudquerySource-OrgWideS3Container",
            "Secrets": [
              {
                "Name": "DB_USERNAME",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_HOST",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_PASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
              {
                "Name": "CLOUDQUERY_API_KEY",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "cloudqueryapikeyCCF82F53",
                      },
                      ":api-key::",
                    ],
                  ],
                },
              },
            ],
          },
          {
            "Command": [
              "/bin/sh",
              "-c",
              "psql -c "INSERT INTO cloudquery_table_frequency VALUES ('aws_s3%', 'DAILY') ON CONFLICT (table_name) DO UPDATE SET frequency = 'DAILY'"",
            ],
            "DockerLabels": {
              "App": "service-catalogue",
              "Name": "OrgWideS3",
              "Stack": "deploy",
              "Stage": "TEST",
            },
            "EntryPoint": [
              "",
            ],
            "Essential": false,
            "Image": "public.ecr.aws/docker/library/postgres:16-alpine",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "Name": "CloudquerySource-OrgWideS3PostgresContainer",
            "Secrets": [
              {
                "Name": "PGUSER",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              {
                "Name": "PGHOST",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              {
                "Name": "PGPASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
            ],
          },
          {
            "Environment": [
              {
                "Name": "STACK",
                "Value": "deploy",
              },
              {
                "Name": "STAGE",
                "Value": "TEST",
              },
              {
                "Name": "APP",
                "Value": "service-catalogue",
              },
              {
                "Name": "GU_REPO",
                "Value": "guardian/service-catalogue",
              },
            ],
            "Essential": true,
            "FirelensConfiguration": {
              "Type": "fluentbit",
            },
            "Image": "ghcr.io/guardian/devx-logs:2",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "CloudquerySourceOrgWideS3TaskDefinitionCloudquerySourceOrgWideS3FirelensLogGroupF8BCB6DF",
                },
                "awslogs-region": {
                  "Ref": "AWS::Region",
                },
                "awslogs-stream-prefix": "deploy/TEST/service-catalogue",
              },
            },
            "Name": "CloudquerySource-OrgWideS3Firelens",
          },
        ],
        "Cpu": "256",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "CloudquerySourceOrgWideS3TaskDefinitionExecutionRole4F6DD2B0",
            "Arn",
          ],
        },
        "Family": "ServiceCatalogueCloudquerySourceOrgWideS3TaskDefinition7DEB6275",
        "Memory": "512",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE",
        ],
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "OrgWideS3",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "CloudquerySourceOrgWideS3TaskDefinitionTaskRole32E46B16",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "CloudquerySourceOrgWideS3TaskDefinitionCloudquerySourceOrgWideS3FirelensLogGroupF8BCB6DF": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionInDays": 1,
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "OrgWideS3",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "CloudquerySourceOrgWideS3TaskDefinitionEventsRole9E60BBDE": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "OrgWideS3",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceOrgWideS3TaskDefinitionEventsRoleDefaultPolicy214D9C1E": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ecs:RunTask",
              "Condition": {
                "ArnEquals": {
                  "ecs:cluster": {
                    "Fn::GetAtt": [
                      "servicecatalogueCluster5FC34DC5",
                      "Arn",
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Resource": {
                "Ref": "CloudquerySourceOrgWideS3TaskDefinition8B6BA52D",
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceOrgWideS3TaskDefinitionExecutionRole4F6DD2B0",
                  "Arn",
                ],
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceOrgWideS3TaskDefinitionTaskRole32E46B16",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceOrgWideS3TaskDefinitionEventsRoleDefaultPolicy214D9C1E",
        "Roles": [
          {
            "Ref": "CloudquerySourceOrgWideS3TaskDefinitionEventsRole9E60BBDE",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceOrgWideS3TaskDefinitionExecutionRole4F6DD2B0": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "OrgWideS3",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceOrgWideS3TaskDefinitionExecutionRoleDefaultPolicy6874A226": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
              },
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "cloudqueryapikeyCCF82F53",
              },
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceOrgWideS3TaskDefinitionCloudquerySourceOrgWideS3FirelensLogGroupF8BCB6DF",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceOrgWideS3TaskDefinitionExecutionRoleDefaultPolicy6874A226",
        "Roles": [
          {
            "Ref": "CloudquerySourceOrgWideS3TaskDefinitionExecutionRole4F6DD2B0",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceOrgWideS3TaskDefinitionTaskRole32E46B16": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "OrgWideS3",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceOrgWideS3TaskDefinitionTaskRoleDefaultPolicyAF6A0EA5": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kinesis:Describe*",
                "kinesis:Put*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":kinesis:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":stream/",
                    {
                      "Ref": "LoggingStreamName",
                    },
                  ],
                ],
              },
            },
            {
              "Action": "organizations:List*",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": "arn:aws:iam::*:role/cloudquery-access",
            },
            {
              "Action": "rds-db:connect",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":rds-db:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":dbuser:",
                    {
                      "Fn::GetAtt": [
                        "PostgresInstance16DE4286E",
                        "DbiResourceId",
                      ],
                    },
                    "/{{resolve:secretsmanager:",
                    {
                      "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                    },
                    ":SecretString:username::}}",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceOrgWideS3TaskDefinitionTaskRoleDefaultPolicyAF6A0EA5",
        "Roles": [
          {
            "Ref": "CloudquerySourceOrgWideS3TaskDefinitionTaskRole32E46B16",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceRemainingAwsDataScheduledEventRuleAE2A0ED1": {
      "Properties": {
        "ScheduleExpression": "cron(0 16 ? * SAT *)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "servicecatalogueCluster5FC34DC5",
                "Arn",
              ],
            },
            "EcsParameters": {
              "LaunchType": "FARGATE",
              "NetworkConfiguration": {
                "AwsVpcConfiguration": {
                  "AssignPublicIp": "DISABLED",
                  "SecurityGroups": [
                    {
                      "Fn::GetAtt": [
                        "PostgresAccessSecurityGroupServicecatalogue03C78F14",
                        "GroupId",
                      ],
                    },
                  ],
                  "Subnets": {
                    "Ref": "PrivateSubnets",
                  },
                },
              },
              "TaskCount": 1,
              "TaskDefinitionArn": {
                "Ref": "CloudquerySourceRemainingAwsDataTaskDefinition8790EDD9",
              },
            },
            "Id": "Target0",
            "Input": "{}",
            "RoleArn": {
              "Fn::GetAtt": [
                "CloudquerySourceRemainingAwsDataTaskDefinitionEventsRole7E7383AF",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "CloudquerySourceRemainingAwsDataTaskDefinition8790EDD9": {
      "Properties": {
        "ContainerDefinitions": [
          {
            "Command": [
              "/bin/sh",
              "-c",
              "wget -O /usr/local/share/ca-certificates/global-bundle.crt -q https://truststore.pki.rds.amazonaws.com/global/global-bundle.pem && update-ca-certificates;printf 'kind: source
spec:
  name: aws
  path: cloudquery/aws
  version: v23.3.1
  tables:
    - aws_*
  skip_tables:
    - aws_ec2_vpc_endpoint_services
    - aws_cloudtrail_events
    - aws_docdb_cluster_parameter_groups
    - aws_docdb_engine_versions
    - aws_ec2_instance_types
    - aws_elasticache_engine_versions
    - aws_elasticache_parameter_groups
    - aws_elasticache_reserved_cache_nodes_offerings
    - aws_elasticache_service_updates
    - aws_emr_supported_instance_types
    - aws_neptune_cluster_parameter_groups
    - aws_neptune_db_parameter_groups
    - aws_rds_cluster_parameter_groups
    - aws_rds_db_parameter_groups
    - aws_rds_engine_versions
    - aws_servicequotas_services
    - aws_identitystore_users
    - aws_identitystore_groups
    - aws_quicksight_data_sets
    - aws_quicksight_dashboards
    - aws_quicksight_analyses
    - aws_quicksight_users
    - aws_quicksight_templates
    - aws_quicksight_groups
    - aws_quicksight_folders
    - aws_quicksight_data_sources
    - aws_amp_workspaces
    - aws_ssoadmin_instances
    - aws_glue_connections
    - aws_computeoptimizer_ecs_service_recommendations
    - aws_xray_sampling_rules
    - aws_xray_resource_policies
    - aws_xray_groups
    - aws_stepfunctions_map_runs
    - aws_stepfunctions_map_run_executions
    - aws_stepfunctions_executions
    - aws_organization*
    - aws_accessanalyzer_*
    - aws_securityhub_*
    - aws_cloudformation_*
    - aws_costexplorer_*
    - aws_elbv1_*
    - aws_elbv2_*
    - aws_autoscaling_groups
    - aws_acm*
    - aws_cloudwatch_alarms
    - aws_inspector_findings
    - aws_inspector2_findings
    - aws_s3*
    - aws_dynamodb*
    - aws_rds_instances
    - aws_rds_clusters
    - aws_rds_db_snapshots
    - aws_rds_cluster_snapshots
    - aws_backup_protected_resources
    - aws_backup_vaults
    - aws_backup_vault_recovery_points
    - aws_ec2_instances
    - aws_ec2_security_groups
    - aws_ec2_images
  destinations:
    - postgresql
  concurrency: 2000
  spec:
    regions:
      - eu-west-1
      - eu-west-2
      - us-east-1
      - us-east-2
      - us-west-1
      - ap-southeast-2
      - ca-central-1
    org:
      member_role_name: cloudquery-access
      organization_units:
        - ou-123
' > /source.yaml;printf 'kind: destination
spec:
  name: postgresql
  registry: github
  path: cloudquery/postgresql
  version: v7.0.1
  migrate_mode: forced
  spec:
    connection_string: >-
      user=\${DB_USERNAME} password=\${DB_PASSWORD} host=\${DB_HOST} port=5432
      dbname=postgres sslmode=verify-full
' > /destination.yaml;/app/cloudquery sync /source.yaml /destination.yaml --log-format json --log-console",
            ],
            "DockerLabels": {
              "App": "service-catalogue",
              "Name": "RemainingAwsData",
              "Stack": "deploy",
              "Stage": "TEST",
            },
            "EntryPoint": [
              "",
            ],
            "Environment": [
              {
                "Name": "GOMEMLIMIT",
                "Value": "1638MiB",
              },
            ],
            "Essential": true,
            "Image": "ghcr.io/cloudquery/cloudquery:4.3.5",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "Name": "CloudquerySource-RemainingAwsDataContainer",
            "Secrets": [
              {
                "Name": "DB_USERNAME",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_HOST",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_PASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
              {
                "Name": "CLOUDQUERY_API_KEY",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "cloudqueryapikeyCCF82F53",
                      },
                      ":api-key::",
                    ],
                  ],
                },
              },
            ],
          },
          {
            "Command": [
              "/bin/sh",
              "-c",
              "psql -c "INSERT INTO cloudquery_table_frequency VALUES ('aws_%', 'WEEKLY') ON CONFLICT (table_name) DO UPDATE SET frequency = 'WEEKLY'"",
            ],
            "DockerLabels": {
              "App": "service-catalogue",
              "Name": "RemainingAwsData",
              "Stack": "deploy",
              "Stage": "TEST",
            },
            "EntryPoint": [
              "",
            ],
            "Essential": false,
            "Image": "public.ecr.aws/docker/library/postgres:16-alpine",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "Name": "CloudquerySource-RemainingAwsDataPostgresContainer",
            "Secrets": [
              {
                "Name": "PGUSER",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              {
                "Name": "PGHOST",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              {
                "Name": "PGPASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
            ],
          },
          {
            "Environment": [
              {
                "Name": "STACK",
                "Value": "deploy",
              },
              {
                "Name": "STAGE",
                "Value": "TEST",
              },
              {
                "Name": "APP",
                "Value": "service-catalogue",
              },
              {
                "Name": "GU_REPO",
                "Value": "guardian/service-catalogue",
              },
            ],
            "Essential": true,
            "FirelensConfiguration": {
              "Type": "fluentbit",
            },
            "Image": "ghcr.io/guardian/devx-logs:2",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "CloudquerySourceRemainingAwsDataTaskDefinitionCloudquerySourceRemainingAwsDataFirelensLogGroupBC28DA66",
                },
                "awslogs-region": {
                  "Ref": "AWS::Region",
                },
                "awslogs-stream-prefix": "deploy/TEST/service-catalogue",
              },
            },
            "Name": "CloudquerySource-RemainingAwsDataFirelens",
          },
        ],
        "Cpu": "1024",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "CloudquerySourceRemainingAwsDataTaskDefinitionExecutionRoleDC6B9AB5",
            "Arn",
          ],
        },
        "Family": "ServiceCatalogueCloudquerySourceRemainingAwsDataTaskDefinitionE7E84FF0",
        "Memory": "2048",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE",
        ],
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "RemainingAwsData",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "CloudquerySourceRemainingAwsDataTaskDefinitionTaskRoleDB59F8F3",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "CloudquerySourceRemainingAwsDataTaskDefinitionCloudquerySourceRemainingAwsDataFirelensLogGroupBC28DA66": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionInDays": 1,
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "RemainingAwsData",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "CloudquerySourceRemainingAwsDataTaskDefinitionEventsRole7E7383AF": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "RemainingAwsData",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceRemainingAwsDataTaskDefinitionEventsRoleDefaultPolicyEA0EC3BA": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ecs:RunTask",
              "Condition": {
                "ArnEquals": {
                  "ecs:cluster": {
                    "Fn::GetAtt": [
                      "servicecatalogueCluster5FC34DC5",
                      "Arn",
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Resource": {
                "Ref": "CloudquerySourceRemainingAwsDataTaskDefinition8790EDD9",
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceRemainingAwsDataTaskDefinitionExecutionRoleDC6B9AB5",
                  "Arn",
                ],
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceRemainingAwsDataTaskDefinitionTaskRoleDB59F8F3",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceRemainingAwsDataTaskDefinitionEventsRoleDefaultPolicyEA0EC3BA",
        "Roles": [
          {
            "Ref": "CloudquerySourceRemainingAwsDataTaskDefinitionEventsRole7E7383AF",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceRemainingAwsDataTaskDefinitionExecutionRoleDC6B9AB5": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "RemainingAwsData",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceRemainingAwsDataTaskDefinitionExecutionRoleDefaultPolicyA56237EA": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
              },
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "cloudqueryapikeyCCF82F53",
              },
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceRemainingAwsDataTaskDefinitionCloudquerySourceRemainingAwsDataFirelensLogGroupBC28DA66",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceRemainingAwsDataTaskDefinitionExecutionRoleDefaultPolicyA56237EA",
        "Roles": [
          {
            "Ref": "CloudquerySourceRemainingAwsDataTaskDefinitionExecutionRoleDC6B9AB5",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceRemainingAwsDataTaskDefinitionTaskRoleDB59F8F3": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "RemainingAwsData",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceRemainingAwsDataTaskDefinitionTaskRoleDefaultPolicyA7859C69": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kinesis:Describe*",
                "kinesis:Put*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":kinesis:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":stream/",
                    {
                      "Ref": "LoggingStreamName",
                    },
                  ],
                ],
              },
            },
            {
              "Action": "organizations:List*",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": "arn:aws:iam::*:role/cloudquery-access",
            },
            {
              "Action": "rds-db:connect",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":rds-db:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":dbuser:",
                    {
                      "Fn::GetAtt": [
                        "PostgresInstance16DE4286E",
                        "DbiResourceId",
                      ],
                    },
                    "/{{resolve:secretsmanager:",
                    {
                      "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                    },
                    ":SecretString:username::}}",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceRemainingAwsDataTaskDefinitionTaskRoleDefaultPolicyA7859C69",
        "Roles": [
          {
            "Ref": "CloudquerySourceRemainingAwsDataTaskDefinitionTaskRoleDB59F8F3",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceRiffRaffDataScheduledEventRuleDE690018": {
      "Properties": {
        "ScheduleExpression": "cron(0 0 * * ? *)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "servicecatalogueCluster5FC34DC5",
                "Arn",
              ],
            },
            "EcsParameters": {
              "LaunchType": "FARGATE",
              "NetworkConfiguration": {
                "AwsVpcConfiguration": {
                  "AssignPublicIp": "DISABLED",
                  "SecurityGroups": [
                    {
                      "Fn::GetAtt": [
                        "PostgresAccessSecurityGroupServicecatalogue03C78F14",
                        "GroupId",
                      ],
                    },
                    {
                      "Ref": "SsmParameterValueTESTdeployriffraffexternaldatabaseaccesssecuritygroupC96584B6F00A464EAD1953AFF4B05118Parameter",
                    },
                  ],
                  "Subnets": {
                    "Ref": "PrivateSubnets",
                  },
                },
              },
              "TaskCount": 1,
              "TaskDefinitionArn": {
                "Ref": "CloudquerySourceRiffRaffDataTaskDefinitionFF023225",
              },
            },
            "Id": "Target0",
            "Input": "{}",
            "RoleArn": {
              "Fn::GetAtt": [
                "CloudquerySourceRiffRaffDataTaskDefinitionEventsRole5EF6E214",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "CloudquerySourceRiffRaffDataTaskDefinitionCloudquerySourceRiffRaffDataFirelensLogGroup55CB2F37": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionInDays": 1,
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "RiffRaffData",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "CloudquerySourceRiffRaffDataTaskDefinitionEventsRole5EF6E214": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "RiffRaffData",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceRiffRaffDataTaskDefinitionEventsRoleDefaultPolicyAD8B28A1": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ecs:RunTask",
              "Condition": {
                "ArnEquals": {
                  "ecs:cluster": {
                    "Fn::GetAtt": [
                      "servicecatalogueCluster5FC34DC5",
                      "Arn",
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Resource": {
                "Ref": "CloudquerySourceRiffRaffDataTaskDefinitionFF023225",
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceRiffRaffDataTaskDefinitionExecutionRole18EFA1E2",
                  "Arn",
                ],
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceRiffRaffDataTaskDefinitionTaskRoleC8F8FCE3",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceRiffRaffDataTaskDefinitionEventsRoleDefaultPolicyAD8B28A1",
        "Roles": [
          {
            "Ref": "CloudquerySourceRiffRaffDataTaskDefinitionEventsRole5EF6E214",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceRiffRaffDataTaskDefinitionExecutionRole18EFA1E2": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "RiffRaffData",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceRiffRaffDataTaskDefinitionExecutionRoleDefaultPolicyA6FD732F": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "RiffRaffDatabaseCredentials2033FD7A",
              },
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
              },
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "cloudqueryapikeyCCF82F53",
              },
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceRiffRaffDataTaskDefinitionCloudquerySourceRiffRaffDataFirelensLogGroup55CB2F37",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceRiffRaffDataTaskDefinitionExecutionRoleDefaultPolicyA6FD732F",
        "Roles": [
          {
            "Ref": "CloudquerySourceRiffRaffDataTaskDefinitionExecutionRole18EFA1E2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceRiffRaffDataTaskDefinitionFF023225": {
      "Properties": {
        "ContainerDefinitions": [
          {
            "Command": [
              "/bin/sh",
              "-c",
              "wget -O /usr/local/share/ca-certificates/global-bundle.crt -q https://truststore.pki.rds.amazonaws.com/global/global-bundle.pem && update-ca-certificates;printf 'kind: source
spec:
  name: postgresql
  path: cloudquery/postgresql
  version: v3.0.7
  destinations:
    - postgresql
  tables:
    - riffraff_*
  skip_tables:
    - riffraff_deploy_logs
  spec:
    connection_string: >-
      user=\${RIFFRAFF_DB_USERNAME} password=\${RIFFRAFF_DB_PASSWORD}
      host=\${RIFFRAFF_DB_HOST} port=5432 dbname=riffraff sslmode=verify-ca
' > /source.yaml;printf 'kind: destination
spec:
  name: postgresql
  registry: github
  path: cloudquery/postgresql
  version: v7.0.1
  migrate_mode: forced
  spec:
    connection_string: >-
      user=\${DB_USERNAME} password=\${DB_PASSWORD} host=\${DB_HOST} port=5432
      dbname=postgres sslmode=verify-full
' > /destination.yaml;/app/cloudquery sync /source.yaml /destination.yaml --log-format json --log-console",
            ],
            "DockerLabels": {
              "App": "service-catalogue",
              "Name": "RiffRaffData",
              "Stack": "deploy",
              "Stage": "TEST",
            },
            "EntryPoint": [
              "",
            ],
            "Environment": [
              {
                "Name": "GOMEMLIMIT",
                "Value": "409MiB",
              },
            ],
            "Essential": true,
            "Image": "ghcr.io/cloudquery/cloudquery:4.3.5",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "Name": "CloudquerySource-RiffRaffDataContainer",
            "Secrets": [
              {
                "Name": "RIFFRAFF_DB_USERNAME",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "RiffRaffDatabaseCredentials2033FD7A",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              {
                "Name": "RIFFRAFF_DB_PASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "RiffRaffDatabaseCredentials2033FD7A",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
              {
                "Name": "RIFFRAFF_DB_HOST",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "RiffRaffDatabaseCredentials2033FD7A",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_USERNAME",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_HOST",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_PASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
              {
                "Name": "CLOUDQUERY_API_KEY",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "cloudqueryapikeyCCF82F53",
                      },
                      ":api-key::",
                    ],
                  ],
                },
              },
            ],
          },
          {
            "Command": [
              "/bin/sh",
              "-c",
              "psql -c "INSERT INTO cloudquery_table_frequency VALUES ('riffraff_%', 'DAILY') ON CONFLICT (table_name) DO UPDATE SET frequency = 'DAILY'"",
            ],
            "DockerLabels": {
              "App": "service-catalogue",
              "Name": "RiffRaffData",
              "Stack": "deploy",
              "Stage": "TEST",
            },
            "EntryPoint": [
              "",
            ],
            "Essential": false,
            "Image": "public.ecr.aws/docker/library/postgres:16-alpine",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "Name": "CloudquerySource-RiffRaffDataPostgresContainer",
            "Secrets": [
              {
                "Name": "PGUSER",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              {
                "Name": "PGHOST",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              {
                "Name": "PGPASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
            ],
          },
          {
            "Environment": [
              {
                "Name": "STACK",
                "Value": "deploy",
              },
              {
                "Name": "STAGE",
                "Value": "TEST",
              },
              {
                "Name": "APP",
                "Value": "service-catalogue",
              },
              {
                "Name": "GU_REPO",
                "Value": "guardian/service-catalogue",
              },
            ],
            "Essential": true,
            "FirelensConfiguration": {
              "Type": "fluentbit",
            },
            "Image": "ghcr.io/guardian/devx-logs:2",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "CloudquerySourceRiffRaffDataTaskDefinitionCloudquerySourceRiffRaffDataFirelensLogGroup55CB2F37",
                },
                "awslogs-region": {
                  "Ref": "AWS::Region",
                },
                "awslogs-stream-prefix": "deploy/TEST/service-catalogue",
              },
            },
            "Name": "CloudquerySource-RiffRaffDataFirelens",
          },
        ],
        "Cpu": "256",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "CloudquerySourceRiffRaffDataTaskDefinitionExecutionRole18EFA1E2",
            "Arn",
          ],
        },
        "Family": "ServiceCatalogueCloudquerySourceRiffRaffDataTaskDefinitionD52C3076",
        "Memory": "512",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE",
        ],
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "RiffRaffData",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "CloudquerySourceRiffRaffDataTaskDefinitionTaskRoleC8F8FCE3",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "CloudquerySourceRiffRaffDataTaskDefinitionTaskRoleC8F8FCE3": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "RiffRaffData",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceRiffRaffDataTaskDefinitionTaskRoleDefaultPolicyA40520E9": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kinesis:Describe*",
                "kinesis:Put*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":kinesis:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":stream/",
                    {
                      "Ref": "LoggingStreamName",
                    },
                  ],
                ],
              },
            },
            {
              "Action": "rds-db:connect",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":rds-db:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":dbuser:",
                    {
                      "Fn::GetAtt": [
                        "PostgresInstance16DE4286E",
                        "DbiResourceId",
                      ],
                    },
                    "/{{resolve:secretsmanager:",
                    {
                      "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                    },
                    ":SecretString:username::}}",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceRiffRaffDataTaskDefinitionTaskRoleDefaultPolicyA40520E9",
        "Roles": [
          {
            "Ref": "CloudquerySourceRiffRaffDataTaskDefinitionTaskRoleC8F8FCE3",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceSnykAllScheduledEventRule73601A00": {
      "Properties": {
        "ScheduleExpression": "cron(0 6 * * ? *)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "servicecatalogueCluster5FC34DC5",
                "Arn",
              ],
            },
            "EcsParameters": {
              "LaunchType": "FARGATE",
              "NetworkConfiguration": {
                "AwsVpcConfiguration": {
                  "AssignPublicIp": "DISABLED",
                  "SecurityGroups": [
                    {
                      "Fn::GetAtt": [
                        "PostgresAccessSecurityGroupServicecatalogue03C78F14",
                        "GroupId",
                      ],
                    },
                  ],
                  "Subnets": {
                    "Ref": "PrivateSubnets",
                  },
                },
              },
              "TaskCount": 1,
              "TaskDefinitionArn": {
                "Ref": "CloudquerySourceSnykAllTaskDefinitionC8C1F3EC",
              },
            },
            "Id": "Target0",
            "Input": "{}",
            "RoleArn": {
              "Fn::GetAtt": [
                "CloudquerySourceSnykAllTaskDefinitionEventsRoleCC78F3D4",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "CloudquerySourceSnykAllTaskDefinitionC8C1F3EC": {
      "Properties": {
        "ContainerDefinitions": [
          {
            "Command": [
              "/bin/sh",
              "-c",
              "wget -O /usr/local/share/ca-certificates/global-bundle.crt -q https://truststore.pki.rds.amazonaws.com/global/global-bundle.pem && update-ca-certificates;printf 'kind: source
spec:
  name: snyk
  path: cloudquery/snyk
  version: v4.0.2
  tables:
    - snyk_dependencies
    - snyk_groups
    - snyk_group_members
    - snyk_integrations
    - snyk_organizations
    - snyk_organization_members
    - snyk_reporting_issues
    - snyk_reporting_latest_issues
  skip_tables:
    - snyk_organization_provisions
  destinations:
    - postgresql
  spec:
    api_key: \${SNYK_API_KEY}
    table_options:
      snyk_reporting_issues:
        period: 30d
' > /source.yaml;printf 'kind: destination
spec:
  name: postgresql
  registry: github
  path: cloudquery/postgresql
  version: v7.0.1
  migrate_mode: forced
  spec:
    connection_string: >-
      user=\${DB_USERNAME} password=\${DB_PASSWORD} host=\${DB_HOST} port=5432
      dbname=postgres sslmode=verify-full
' > /destination.yaml;/app/cloudquery sync /source.yaml /destination.yaml --log-format json --log-console",
            ],
            "DockerLabels": {
              "App": "service-catalogue",
              "Name": "SnykAll",
              "Stack": "deploy",
              "Stage": "TEST",
            },
            "EntryPoint": [
              "",
            ],
            "Environment": [
              {
                "Name": "GOMEMLIMIT",
                "Value": "819MiB",
              },
            ],
            "Essential": true,
            "Image": "ghcr.io/cloudquery/cloudquery:4.3.5",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "Name": "CloudquerySource-SnykAllContainer",
            "Secrets": [
              {
                "Name": "SNYK_API_KEY",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "snykcredentials4D951A18",
                      },
                      ":api-key::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_USERNAME",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_HOST",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              {
                "Name": "DB_PASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
              {
                "Name": "CLOUDQUERY_API_KEY",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "cloudqueryapikeyCCF82F53",
                      },
                      ":api-key::",
                    ],
                  ],
                },
              },
            ],
          },
          {
            "Command": [
              "/bin/sh",
              "-c",
              "psql -c "INSERT INTO cloudquery_table_frequency VALUES ('snyk_dependencies', 'DAILY'),('snyk_groups', 'DAILY'),('snyk_group_members', 'DAILY'),('snyk_integrations', 'DAILY'),('snyk_organizations', 'DAILY'),('snyk_organization_members', 'DAILY'),('snyk_reporting_issues', 'DAILY'),('snyk_reporting_latest_issues', 'DAILY') ON CONFLICT (table_name) DO UPDATE SET frequency = 'DAILY'"",
            ],
            "DockerLabels": {
              "App": "service-catalogue",
              "Name": "SnykAll",
              "Stack": "deploy",
              "Stage": "TEST",
            },
            "EntryPoint": [
              "",
            ],
            "Essential": false,
            "Image": "public.ecr.aws/docker/library/postgres:16-alpine",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "Name": "CloudquerySource-SnykAllPostgresContainer",
            "Secrets": [
              {
                "Name": "PGUSER",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              {
                "Name": "PGHOST",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              {
                "Name": "PGPASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
            ],
          },
          {
            "Environment": [
              {
                "Name": "STACK",
                "Value": "deploy",
              },
              {
                "Name": "STAGE",
                "Value": "TEST",
              },
              {
                "Name": "APP",
                "Value": "service-catalogue",
              },
              {
                "Name": "GU_REPO",
                "Value": "guardian/service-catalogue",
              },
            ],
            "Essential": true,
            "FirelensConfiguration": {
              "Type": "fluentbit",
            },
            "Image": "ghcr.io/guardian/devx-logs:2",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "CloudquerySourceSnykAllTaskDefinitionCloudquerySourceSnykAllFirelensLogGroupB81AA085",
                },
                "awslogs-region": {
                  "Ref": "AWS::Region",
                },
                "awslogs-stream-prefix": "deploy/TEST/service-catalogue",
              },
            },
            "Name": "CloudquerySource-SnykAllFirelens",
          },
        ],
        "Cpu": "256",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "CloudquerySourceSnykAllTaskDefinitionExecutionRoleBE6C1050",
            "Arn",
          ],
        },
        "Family": "ServiceCatalogueCloudquerySourceSnykAllTaskDefinitionBFF67A0E",
        "Memory": "1024",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE",
        ],
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "SnykAll",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "CloudquerySourceSnykAllTaskDefinitionTaskRole09B2B669",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "CloudquerySourceSnykAllTaskDefinitionCloudquerySourceSnykAllFirelensLogGroupB81AA085": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionInDays": 1,
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "SnykAll",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "CloudquerySourceSnykAllTaskDefinitionEventsRoleCC78F3D4": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "SnykAll",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceSnykAllTaskDefinitionEventsRoleDefaultPolicy9851E7F3": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ecs:RunTask",
              "Condition": {
                "ArnEquals": {
                  "ecs:cluster": {
                    "Fn::GetAtt": [
                      "servicecatalogueCluster5FC34DC5",
                      "Arn",
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Resource": {
                "Ref": "CloudquerySourceSnykAllTaskDefinitionC8C1F3EC",
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceSnykAllTaskDefinitionExecutionRoleBE6C1050",
                  "Arn",
                ],
              },
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceSnykAllTaskDefinitionTaskRole09B2B669",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceSnykAllTaskDefinitionEventsRoleDefaultPolicy9851E7F3",
        "Roles": [
          {
            "Ref": "CloudquerySourceSnykAllTaskDefinitionEventsRoleCC78F3D4",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceSnykAllTaskDefinitionExecutionRoleBE6C1050": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "SnykAll",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceSnykAllTaskDefinitionExecutionRoleDefaultPolicyCC076BFE": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "snykcredentials4D951A18",
              },
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
              },
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "cloudqueryapikeyCCF82F53",
              },
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudquerySourceSnykAllTaskDefinitionCloudquerySourceSnykAllFirelensLogGroupB81AA085",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceSnykAllTaskDefinitionExecutionRoleDefaultPolicyCC076BFE",
        "Roles": [
          {
            "Ref": "CloudquerySourceSnykAllTaskDefinitionExecutionRoleBE6C1050",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CloudquerySourceSnykAllTaskDefinitionTaskRole09B2B669": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "SnykAll",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CloudquerySourceSnykAllTaskDefinitionTaskRoleDefaultPolicy27C73C5C": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kinesis:Describe*",
                "kinesis:Put*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":kinesis:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":stream/",
                    {
                      "Ref": "LoggingStreamName",
                    },
                  ],
                ],
              },
            },
            {
              "Action": "rds-db:connect",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":rds-db:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":dbuser:",
                    {
                      "Fn::GetAtt": [
                        "PostgresInstance16DE4286E",
                        "DbiResourceId",
                      ],
                    },
                    "/{{resolve:secretsmanager:",
                    {
                      "Ref": "PostgresInstance1SecretAttachmentBA0D257D",
                    },
                    ":SecretString:username::}}",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudquerySourceSnykAllTaskDefinitionTaskRoleDefaultPolicy27C73C5C",
        "Roles": [
          {
            "Ref": "CloudquerySourceSnykAllTaskDefinitionTaskRole09B2B669",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DataAudit2FEB3068": {
      "DependsOn": [
        "DataAuditServiceRoleDefaultPolicyB6C67E52",
        "DataAuditServiceRole35A15887",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "DistributionBucketName",
          },
          "S3Key": "deploy/TEST/data-audit/data-audit.zip",
        },
        "Environment": {
          "Variables": {
            "APP": "data-audit",
            "DATABASE_HOSTNAME": {
              "Fn::GetAtt": [
                "PostgresInstance16DE4286E",
                "Endpoint.Address",
              ],
            },
            "QUERY_LOGGING": "false",
            "STACK": "deploy",
            "STAGE": "TEST",
          },
        },
        "Handler": "index.main",
        "MemorySize": 512,
        "Role": {
          "Fn::GetAtt": [
            "DataAuditServiceRole35A15887",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
        "Tags": [
          {
            "Key": "App",
            "Value": "data-audit",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "Timeout": 600,
        "VpcConfig": {
          "SecurityGroupIds": [
            {
              "Fn::GetAtt": [
                "PostgresAccessSecurityGroupServicecatalogue03C78F14",
                "GroupId",
              ],
            },
          ],
          "SubnetIds": {
            "Ref": "PrivateSubnets",
          },
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "DataAuditDataAuditrate1day015E5BEEB": {
      "Properties": {
        "ScheduleExpression": "rate(1 day)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "DataAudit2FEB3068",
                "Arn",
              ],
            },
            "Id": "Target0",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "DataAuditDataAuditrate1day0AllowEventRuleServiceCatalogueDataAudit9CC2131ED1368FFF": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "DataAudit2FEB3068",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "DataAuditDataAuditrate1day015E5BEEB",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DataAuditServiceRole35A15887": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole",
              ],
            ],
          },
        ],
        "Tags": [
          {
            "Key": "App",
            "Value": "data-audit",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "DataAuditServiceRoleDefaultPolicyB6C67E52": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      {
                        "Ref": "DistributionBucketName",
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      {
                        "Ref": "DistributionBucketName",
                      },
                      "/deploy/TEST/data-audit/data-audit.zip",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "ssm:GetParametersByPath",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:ssm:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/TEST/deploy/data-audit",
                  ],
                ],
              },
            },
            {
              "Action": [
                "ssm:GetParameters",
                "ssm:GetParameter",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:ssm:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/TEST/deploy/data-audit/*",
                  ],
                ],
              },
            },
            {
              "Action": "rds-db:connect",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":rds-db:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":dbuser:",
                    {
                      "Fn::GetAtt": [
                        "PostgresInstance16DE4286E",
                        "DbiResourceId",
                      ],
                    },
                    "/dataaudit",
                  ],
                ],
              },
            },
            {
              "Action": "organizations:List*",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": "arn:aws:iam::*:role/cloudquery-access",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DataAuditServiceRoleDefaultPolicyB6C67E52",
        "Roles": [
          {
            "Ref": "DataAuditServiceRole35A15887",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "EfsMountTargetSteampipeDatabaseEFSA": {
      "Properties": {
        "FileSystemId": {
          "Ref": "SteampipeDatabaseEFS4822AB7A",
        },
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "steampipesgServicecatalogue18CB8C1F",
              "GroupId",
            ],
          },
        ],
        "SubnetId": {
          "Fn::Select": [
            0,
            {
              "Ref": "PrivateSubnets",
            },
          ],
        },
      },
      "Type": "AWS::EFS::MountTarget",
    },
    "EfsMountTargetSteampipeDatabaseEFSB": {
      "Properties": {
        "FileSystemId": {
          "Ref": "SteampipeDatabaseEFS4822AB7A",
        },
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "steampipesgServicecatalogue18CB8C1F",
              "GroupId",
            ],
          },
        ],
        "SubnetId": {
          "Fn::Select": [
            1,
            {
              "Ref": "PrivateSubnets",
            },
          ],
        },
      },
      "Type": "AWS::EFS::MountTarget",
    },
    "EfsMountTargetSteampipeDatabaseEFSC": {
      "Properties": {
        "FileSystemId": {
          "Ref": "SteampipeDatabaseEFS4822AB7A",
        },
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "steampipesgServicecatalogue18CB8C1F",
              "GroupId",
            ],
          },
        ],
        "SubnetId": {
          "Fn::Select": [
            2,
            {
              "Ref": "PrivateSubnets",
            },
          ],
        },
      },
      "Type": "AWS::EFS::MountTarget",
    },
    "PostgresAccessSecurityGroupParam38DFE001": {
      "Properties": {
        "DataType": "text",
        "Name": "/TEST/deploy/service-catalogue/postgres-access-security-group",
        "Tags": {
          "Stack": "deploy",
          "Stage": "TEST",
          "gu:cdk:version": "TEST",
          "gu:repo": "guardian/service-catalogue",
        },
        "Tier": "Standard",
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "PostgresAccessSecurityGroupServicecatalogue03C78F14",
            "GroupId",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "PostgresAccessSecurityGroupServicecatalogue03C78F14": {
      "Properties": {
        "GroupDescription": "ServiceCatalogue/PostgresAccessSecurityGroupServicecatalogue",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "Tags": [
          {
            "Key": "App",
            "Value": "service-catalogue",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "VpcId": {
          "Ref": "VpcId",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "PostgresInstance16DE4286E": {
      "DeletionPolicy": "Snapshot",
      "Properties": {
        "AllocatedStorage": "100",
        "CACertificateIdentifier": "rds-ca-rsa2048-g1",
        "CopyTagsToSnapshot": true,
        "DBInstanceClass": "db.t4g.small",
        "DBSubnetGroupName": {
          "Ref": "PostgresInstance1SubnetGroupCAC045A5",
        },
        "DeletionProtection": true,
        "EnableIAMDatabaseAuthentication": true,
        "Engine": "postgres",
        "MasterUserPassword": {
          "Fn::Join": [
            "",
            [
              "{{resolve:secretsmanager:",
              {
                "Ref": "PostgresInstance1Secret7FA1A24B",
              },
              ":SecretString:password::}}",
            ],
          ],
        },
        "MasterUsername": {
          "Fn::Join": [
            "",
            [
              "{{resolve:secretsmanager:",
              {
                "Ref": "PostgresInstance1Secret7FA1A24B",
              },
              ":SecretString:username::}}",
            ],
          ],
        },
        "Port": "5432",
        "PubliclyAccessible": false,
        "StorageEncrypted": true,
        "StorageType": "gp2",
        "Tags": [
          {
            "Key": "devx-backup-enabled",
            "Value": "true",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "VPCSecurityGroups": [
          {
            "Fn::GetAtt": [
              "PostgresSecurityGroupServicecatalogueD2F089D5",
              "GroupId",
            ],
          },
        ],
      },
      "Type": "AWS::RDS::DBInstance",
      "UpdateReplacePolicy": "Snapshot",
    },
    "PostgresInstance1Secret7FA1A24B": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "Description": {
          "Fn::Join": [
            "",
            [
              "Generated by the CDK for stack: ",
              {
                "Ref": "AWS::StackName",
              },
            ],
          ],
        },
        "GenerateSecretString": {
          "ExcludeCharacters": " %+~\`#$&*()|[]{}:;<>?!'/@"\\",
          "GenerateStringKey": "password",
          "PasswordLength": 30,
          "SecretStringTemplate": "{"username":"postgres"}",
        },
        "Tags": [
          {
            "Key": "devx-backup-enabled",
            "Value": "true",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
    "PostgresInstance1SecretAttachmentBA0D257D": {
      "Properties": {
        "SecretId": {
          "Ref": "PostgresInstance1Secret7FA1A24B",
        },
        "TargetId": {
          "Ref": "PostgresInstance16DE4286E",
        },
        "TargetType": "AWS::RDS::DBInstance",
      },
      "Type": "AWS::SecretsManager::SecretTargetAttachment",
    },
    "PostgresInstance1SubnetGroupCAC045A5": {
      "Properties": {
        "DBSubnetGroupDescription": "Subnet group for PostgresInstance1 database",
        "SubnetIds": {
          "Ref": "PrivateSubnets",
        },
        "Tags": [
          {
            "Key": "devx-backup-enabled",
            "Value": "true",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::RDS::DBSubnetGroup",
    },
    "PostgresInstanceEndpointAddress6E14162C": {
      "Properties": {
        "DataType": "text",
        "Name": "/TEST/deploy/service-catalogue/postgres-instance-endpoint-address",
        "Tags": {
          "Stack": "deploy",
          "Stage": "TEST",
          "gu:cdk:version": "TEST",
          "gu:repo": "guardian/service-catalogue",
        },
        "Tier": "Standard",
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "PostgresInstance16DE4286E",
            "Endpoint.Address",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "PostgresSecurityGroupServicecatalogueD2F089D5": {
      "Properties": {
        "GroupDescription": "ServiceCatalogue/PostgresSecurityGroupServicecatalogue",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": "10.0.0.4/22",
            "Description": "Allow connection to Postgres from the office network.",
            "FromPort": 5432,
            "IpProtocol": "tcp",
            "ToPort": 5432,
          },
        ],
        "Tags": [
          {
            "Key": "App",
            "Value": "service-catalogue",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "VpcId": {
          "Ref": "VpcId",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "PostgresSecurityGroupServicecataloguefromServiceCataloguePostgresAccessSecurityGroupServicecatalogue56F7252C5432A44FF186": {
      "Properties": {
        "Description": "from ServiceCataloguePostgresAccessSecurityGroupServicecatalogue56F7252C:5432",
        "FromPort": 5432,
        "GroupId": {
          "Fn::GetAtt": [
            "PostgresSecurityGroupServicecatalogueD2F089D5",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "PostgresAccessSecurityGroupServicecatalogue03C78F14",
            "GroupId",
          ],
        },
        "ToPort": 5432,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "RiffRaffDatabaseCredentials2033FD7A": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "GenerateSecretString": {},
        "Name": "/TEST/deploy/service-catalogue/riffraff-database-credentials",
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
    "SteampipeDNS": {
      "Properties": {
        "Name": "steampipe.code.dev-gutools.co.uk",
        "RecordType": "CNAME",
        "ResourceRecords": [
          {
            "Fn::GetAtt": [
              "steampipenlb8A25667C",
              "DNSName",
            ],
          },
        ],
        "Stage": "TEST",
        "TTL": 3600,
      },
      "Type": "Guardian::DNS::RecordSet",
    },
    "SteampipeDatabaseEFS4822AB7A": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "Encrypted": true,
        "FileSystemTags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "ServiceCatalogue/SteampipeDatabaseEFS",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "PerformanceMode": "generalPurpose",
        "ThroughputMode": "elastic",
      },
      "Type": "AWS::EFS::FileSystem",
      "UpdateReplacePolicy": "Retain",
    },
    "SteampipeDatabaseEFSSteampipeDatabaseEFSAccessPoint2C2619C6": {
      "Properties": {
        "AccessPointTags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "ServiceCatalogue/SteampipeDatabaseEFS/SteampipeDatabaseEFSAccessPoint",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "FileSystemId": {
          "Ref": "SteampipeDatabaseEFS4822AB7A",
        },
        "RootDirectory": {
          "CreationInfo": {
            "OwnerGid": "0",
            "OwnerUid": "9193",
            "Permissions": "755",
          },
          "Path": "/steampipe-database",
        },
      },
      "Type": "AWS::EFS::AccessPoint",
    },
    "SteampipeSecurityGroupServicecatalogue45A0E3D6": {
      "Properties": {
        "GroupDescription": "ServiceCatalogue/SteampipeSecurityGroupServicecatalogue",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": "10.0.0.4/22",
            "Description": "Allow connection to Steampipe from the office network.",
            "FromPort": 9193,
            "IpProtocol": "tcp",
            "ToPort": 9193,
          },
        ],
        "Tags": [
          {
            "Key": "App",
            "Value": "service-catalogue",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "VpcId": {
          "Ref": "VpcId",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "SteampipeSecurityGroupServicecataloguefromServiceCataloguePostgresAccessSecurityGroupServicecatalogue56F7252C919316EC7C95": {
      "Properties": {
        "Description": "from ServiceCataloguePostgresAccessSecurityGroupServicecatalogue56F7252C:9193",
        "FromPort": 9193,
        "GroupId": {
          "Fn::GetAtt": [
            "SteampipeSecurityGroupServicecatalogue45A0E3D6",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "PostgresAccessSecurityGroupServicecatalogue03C78F14",
            "GroupId",
          ],
        },
        "ToPort": 9193,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "SteampipeSecurityGroupServicecataloguefromServiceCataloguePostgresSecurityGroupServicecatalogue716624F091938A31DC0C": {
      "Properties": {
        "Description": "from ServiceCataloguePostgresSecurityGroupServicecatalogue716624F0:9193",
        "FromPort": 9193,
        "GroupId": {
          "Fn::GetAtt": [
            "SteampipeSecurityGroupServicecatalogue45A0E3D6",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "PostgresSecurityGroupServicecatalogueD2F089D5",
            "GroupId",
          ],
        },
        "ToPort": 9193,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "TopicBFC7AF6E": {
      "Properties": {
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "TopicName": "interactive-monitor-TEST",
      },
      "Type": "AWS::SNS::Topic",
    },
    "branchprotectorgithubappauth4E91892E": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "GenerateSecretString": {},
        "Name": "/TEST/deploy/service-catalogue/branch-protector-github-app-secret",
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
    "cloudqueryapikeyCCF82F53": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "GenerateSecretString": {},
        "Name": "/TEST/deploy/service-catalogue/cloudquery-api-key",
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
    "fastlycredentialsF42D3C80": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "GenerateSecretString": {},
        "Name": "/TEST/deploy/service-catalogue/fastly-credentials",
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
    "githubcredentialsAF453741": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "GenerateSecretString": {},
        "Name": "/TEST/deploy/service-catalogue/github-credentials",
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
    "githublanguages5093EDEC": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "GenerateSecretString": {},
        "Name": "/TEST/deploy/service-catalogue/github-languages",
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
    "interactivemonitor3435C6C2": {
      "DependsOn": [
        "interactivemonitorServiceRoleDefaultPolicy44B1B670",
        "interactivemonitorServiceRoleC210EED3",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "DistributionBucketName",
          },
          "S3Key": "deploy/TEST/interactive-monitor/interactive-monitor.zip",
        },
        "Environment": {
          "Variables": {
            "APP": "interactive-monitor",
            "GITHUB_APP_SECRET": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Fn::Select": [
                      0,
                      {
                        "Fn::Split": [
                          "-",
                          {
                            "Fn::Select": [
                              6,
                              {
                                "Fn::Split": [
                                  ":",
                                  {
                                    "Ref": "interactivemonitorgithubapp9777D674",
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                    ],
                  },
                  {
                    "Fn::Select": [
                      1,
                      {
                        "Fn::Split": [
                          "-",
                          {
                            "Fn::Select": [
                              6,
                              {
                                "Fn::Split": [
                                  ":",
                                  {
                                    "Ref": "interactivemonitorgithubapp9777D674",
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                    ],
                  },
                  {
                    "Fn::Select": [
                      2,
                      {
                        "Fn::Split": [
                          "-",
                          {
                            "Fn::Select": [
                              6,
                              {
                                "Fn::Split": [
                                  ":",
                                  {
                                    "Ref": "interactivemonitorgithubapp9777D674",
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                    ],
                  },
                  {
                    "Fn::Select": [
                      3,
                      {
                        "Fn::Split": [
                          "-",
                          {
                            "Fn::Select": [
                              6,
                              {
                                "Fn::Split": [
                                  ":",
                                  {
                                    "Ref": "interactivemonitorgithubapp9777D674",
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                    ],
                  },
                  {
                    "Fn::Select": [
                      4,
                      {
                        "Fn::Split": [
                          "-",
                          {
                            "Fn::Select": [
                              6,
                              {
                                "Fn::Split": [
                                  ":",
                                  {
                                    "Ref": "interactivemonitorgithubapp9777D674",
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                    ],
                  },
                ],
              ],
            },
            "STACK": "deploy",
            "STAGE": "TEST",
          },
        },
        "Handler": "index.handler",
        "MemorySize": 512,
        "ReservedConcurrentExecutions": 1,
        "Role": {
          "Fn::GetAtt": [
            "interactivemonitorServiceRoleC210EED3",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
        "Tags": [
          {
            "Key": "App",
            "Value": "interactive-monitor",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "Timeout": 30,
      },
      "Type": "AWS::Lambda::Function",
    },
    "interactivemonitorAllowInvokeServiceCatalogueTopic0AC51635C623A304": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "interactivemonitor3435C6C2",
            "Arn",
          ],
        },
        "Principal": "sns.amazonaws.com",
        "SourceArn": {
          "Ref": "TopicBFC7AF6E",
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "interactivemonitorServiceRoleC210EED3": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "Tags": [
          {
            "Key": "App",
            "Value": "interactive-monitor",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "interactivemonitorServiceRoleDefaultPolicy44B1B670": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      {
                        "Ref": "DistributionBucketName",
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      {
                        "Ref": "DistributionBucketName",
                      },
                      "/deploy/TEST/interactive-monitor/interactive-monitor.zip",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "ssm:GetParametersByPath",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:ssm:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/TEST/deploy/interactive-monitor",
                  ],
                ],
              },
            },
            {
              "Action": [
                "ssm:GetParameters",
                "ssm:GetParameter",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:ssm:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/TEST/deploy/interactive-monitor/*",
                  ],
                ],
              },
            },
            {
              "Action": "s3:ListBucket",
              "Effect": "Allow",
              "Resource": [
                "arn:aws:s3:::gdn-cdn",
                "arn:aws:s3:::gdn-cdn/*",
              ],
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "interactivemonitorgithubapp9777D674",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "interactivemonitorServiceRoleDefaultPolicy44B1B670",
        "Roles": [
          {
            "Ref": "interactivemonitorServiceRoleC210EED3",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "interactivemonitorTopic5CA9BB6E": {
      "Properties": {
        "Endpoint": {
          "Fn::GetAtt": [
            "interactivemonitor3435C6C2",
            "Arn",
          ],
        },
        "Protocol": "lambda",
        "TopicArn": {
          "Ref": "TopicBFC7AF6E",
        },
      },
      "Type": "AWS::SNS::Subscription",
    },
    "interactivemonitorgithubapp9777D674": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "GenerateSecretString": {},
        "Name": "/TEST/deploy/service-catalogue/interactive-monitor-github-app",
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
    "ns1credentialsA8DD3B2D": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "GenerateSecretString": {},
        "Name": "/TEST/deploy/service-catalogue/ns1-credentials",
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
    "repocop20553EB8": {
      "DependsOn": [
        "repocopServiceRoleDefaultPolicyF20BF625",
        "repocopServiceRole757D74E8",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "DistributionBucketName",
          },
          "S3Key": "deploy/TEST/repocop/repocop.zip",
        },
        "Environment": {
          "Variables": {
            "ANGHAMMARAD_SNS_ARN": {
              "Ref": "AnghammaradSnsArn",
            },
            "APP": "repocop",
            "DATABASE_HOSTNAME": {
              "Fn::GetAtt": [
                "PostgresInstance16DE4286E",
                "Endpoint.Address",
              ],
            },
            "GITHUB_APP_SECRET": {
              "Ref": "branchprotectorgithubappauth4E91892E",
            },
            "INTERACTIVES_COUNT": "3",
            "INTERACTIVE_MONITOR_TOPIC_ARN": {
              "Ref": "TopicBFC7AF6E",
            },
            "QUERY_LOGGING": "false",
            "SNYK_API_KEY_ARN": {
              "Ref": "snykcredentials4D951A18",
            },
            "SNYK_INTEGRATOR_INPUT_TOPIC_ARN": {
              "Ref": "snykintegratorinputtopicTEST6BCA9CE1",
            },
            "STACK": "deploy",
            "STAGE": "TEST",
          },
        },
        "Handler": "index.main",
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "repocopServiceRole757D74E8",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
        "Tags": [
          {
            "Key": "App",
            "Value": "repocop",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "Timeout": 300,
        "VpcConfig": {
          "SecurityGroupIds": [
            {
              "Fn::GetAtt": [
                "PostgresAccessSecurityGroupServicecatalogue03C78F14",
                "GroupId",
              ],
            },
          ],
          "SubnetIds": {
            "Ref": "PrivateSubnets",
          },
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "repocopServiceRole757D74E8": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole",
              ],
            ],
          },
        ],
        "Tags": [
          {
            "Key": "App",
            "Value": "repocop",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "repocopServiceRoleDefaultPolicyF20BF625": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      {
                        "Ref": "DistributionBucketName",
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      {
                        "Ref": "DistributionBucketName",
                      },
                      "/deploy/TEST/repocop/repocop.zip",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "ssm:GetParametersByPath",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:ssm:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/TEST/deploy/repocop",
                  ],
                ],
              },
            },
            {
              "Action": [
                "ssm:GetParameters",
                "ssm:GetParameter",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:ssm:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/TEST/deploy/repocop/*",
                  ],
                ],
              },
            },
            {
              "Action": "rds-db:connect",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":rds-db:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":dbuser:",
                    {
                      "Fn::GetAtt": [
                        "PostgresInstance16DE4286E",
                        "DbiResourceId",
                      ],
                    },
                    "/repocop",
                  ],
                ],
              },
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "branchprotectorgithubappauth4E91892E",
              },
            },
            {
              "Action": "sns:Publish",
              "Effect": "Allow",
              "Resource": {
                "Ref": "AnghammaradSnsArn",
              },
            },
            {
              "Action": "sns:Publish",
              "Effect": "Allow",
              "Resource": {
                "Ref": "TopicBFC7AF6E",
              },
            },
            {
              "Action": "sns:Publish",
              "Effect": "Allow",
              "Resource": {
                "Ref": "snykintegratorinputtopicTEST6BCA9CE1",
              },
            },
            {
              "Action": "cloudwatch:PutMetricData",
              "Condition": {
                "StringEquals": {
                  "cloudwatch:namespace": "repocop",
                },
              },
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "snykcredentials4D951A18",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "repocopServiceRoleDefaultPolicyF20BF625",
        "Roles": [
          {
            "Ref": "repocopServiceRole757D74E8",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "repocoprepocopcron3010MONFRI09611B07D": {
      "Properties": {
        "ScheduleExpression": "cron(30 10 ? * MON-FRI *)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "repocop20553EB8",
                "Arn",
              ],
            },
            "Id": "Target0",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "repocoprepocopcron3010MONFRI0AllowEventRuleServiceCataloguerepocop7BEB589205008C24": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "repocop20553EB8",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "repocoprepocopcron3010MONFRI09611B07D",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "servicecatalogueCluster5FC34DC5": {
      "Properties": {
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::ECS::Cluster",
    },
    "servicecatalogueClusterAF65BC89": {
      "Properties": {
        "CapacityProviders": [
          "FARGATE",
          "FARGATE_SPOT",
        ],
        "Cluster": {
          "Ref": "servicecatalogueCluster5FC34DC5",
        },
        "DefaultCapacityProviderStrategy": [],
      },
      "Type": "AWS::ECS::ClusterCapacityProviderAssociations",
    },
    "snykcredentials4D951A18": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "GenerateSecretString": {},
        "Name": "/TEST/deploy/service-catalogue/snyk-credentials",
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
    "snykintegrator1EF519CF": {
      "DependsOn": [
        "snykintegratorServiceRoleDefaultPolicyC9028053",
        "snykintegratorServiceRole8B7567EF",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "DistributionBucketName",
          },
          "S3Key": "deploy/TEST/snyk-integrator/snyk-integrator.zip",
        },
        "Environment": {
          "Variables": {
            "APP": "snyk-integrator",
            "GITHUB_APP_SECRET": {
              "Ref": "snykintegratorgithubappauth8C64864D",
            },
            "STACK": "deploy",
            "STAGE": "TEST",
          },
        },
        "Handler": "index.handler",
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "snykintegratorServiceRole8B7567EF",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
        "Tags": [
          {
            "Key": "App",
            "Value": "snyk-integrator",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "Timeout": 300,
        "VpcConfig": {
          "SecurityGroupIds": [
            {
              "Fn::GetAtt": [
                "snykintegratorSecurityGroup158665A3",
                "GroupId",
              ],
            },
          ],
          "SubnetIds": {
            "Ref": "PrivateSubnets",
          },
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "snykintegratorAllowInvokeServiceCataloguesnykintegratorinputtopicTEST8ADE3A2EDEF3DA67": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "snykintegrator1EF519CF",
            "Arn",
          ],
        },
        "Principal": "sns.amazonaws.com",
        "SourceArn": {
          "Ref": "snykintegratorinputtopicTEST6BCA9CE1",
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "snykintegratorSecurityGroup158665A3": {
      "Properties": {
        "GroupDescription": "Automatic security group for Lambda Function ServiceCataloguesnykintegratorC6E6D2B3",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "Tags": [
          {
            "Key": "App",
            "Value": "snyk-integrator",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "VpcId": {
          "Ref": "VpcId",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "snykintegratorServiceRole8B7567EF": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole",
              ],
            ],
          },
        ],
        "Tags": [
          {
            "Key": "App",
            "Value": "snyk-integrator",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "snykintegratorServiceRoleDefaultPolicyC9028053": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      {
                        "Ref": "DistributionBucketName",
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      {
                        "Ref": "DistributionBucketName",
                      },
                      "/deploy/TEST/snyk-integrator/snyk-integrator.zip",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "ssm:GetParametersByPath",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:ssm:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/TEST/deploy/snyk-integrator",
                  ],
                ],
              },
            },
            {
              "Action": [
                "ssm:GetParameters",
                "ssm:GetParameter",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:ssm:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/TEST/deploy/snyk-integrator/*",
                  ],
                ],
              },
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "snykintegratorgithubappauth8C64864D",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "snykintegratorServiceRoleDefaultPolicyC9028053",
        "Roles": [
          {
            "Ref": "snykintegratorServiceRole8B7567EF",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "snykintegratorgithubappauth8C64864D": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "GenerateSecretString": {},
        "Name": "/TEST/deploy/service-catalogue/snyk-integrator-github-app-secret",
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
    "snykintegratorinputtopicTEST6BCA9CE1": {
      "Properties": {
        "DisplayName": "Snyk Integrator Input Topic",
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::SNS::Topic",
    },
    "snykintegratorsnykintegratorinputtopicTEST80B8842E": {
      "Properties": {
        "Endpoint": {
          "Fn::GetAtt": [
            "snykintegrator1EF519CF",
            "Arn",
          ],
        },
        "Protocol": "lambda",
        "TopicArn": {
          "Ref": "snykintegratorinputtopicTEST6BCA9CE1",
        },
      },
      "Type": "AWS::SNS::Subscription",
    },
    "steampipeService2E9D07AE": {
      "DependsOn": [
        "steampipenlbsteampipenlblistener4500F2D0",
        "steampipenlbsteampipenlblistenersteampipenlbtargetGroup8BBC7369",
        "steampipeTaskDefinitionTaskRoleDefaultPolicyE6E26240",
        "steampipeTaskDefinitionTaskRole8DC44379",
      ],
      "Properties": {
        "Cluster": {
          "Ref": "servicecatalogueCluster5FC34DC5",
        },
        "DeploymentConfiguration": {
          "Alarms": {
            "AlarmNames": [],
            "Enable": false,
            "Rollback": false,
          },
          "MaximumPercent": 100,
          "MinimumHealthyPercent": 0,
        },
        "DesiredCount": 1,
        "EnableECSManagedTags": false,
        "HealthCheckGracePeriodSeconds": 60,
        "LaunchType": "FARGATE",
        "LoadBalancers": [
          {
            "ContainerName": "steampipeContainer",
            "ContainerPort": 9193,
            "TargetGroupArn": {
              "Ref": "steampipenlbsteampipenlblistenersteampipenlbtargetGroup8BBC7369",
            },
          },
        ],
        "NetworkConfiguration": {
          "AwsvpcConfiguration": {
            "AssignPublicIp": "DISABLED",
            "SecurityGroups": [
              {
                "Fn::GetAtt": [
                  "steampipesgServicecatalogue18CB8C1F",
                  "GroupId",
                ],
              },
            ],
            "Subnets": {
              "Ref": "PrivateSubnets",
            },
          },
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "TaskDefinition": {
          "Ref": "steampipeTaskDefinition767BA166",
        },
      },
      "Type": "AWS::ECS::Service",
    },
    "steampipeTaskDefinition767BA166": {
      "Properties": {
        "ContainerDefinitions": [
          {
            "Command": [
              "steampipe service start --foreground",
            ],
            "DockerLabels": {
              "App": "service-catalogue",
              "Stack": "deploy",
              "Stage": "TEST",
            },
            "EntryPoint": [
              "/bin/sh",
              "-c",
            ],
            "Essential": true,
            "Image": "ghcr.io/guardian/service-catalogue/steampipe:1",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "kinesis_streams",
                "region": {
                  "Ref": "AWS::Region",
                },
                "retry_limit": "2",
                "stream": {
                  "Ref": "LoggingStreamName",
                },
              },
            },
            "MountPoints": [
              {
                "ContainerPath": "/home/steampipe/.steampipe/db/14.2.0/",
                "ReadOnly": false,
                "SourceVolume": "steampipe-database",
              },
            ],
            "Name": "steampipeContainer",
            "PortMappings": [
              {
                "ContainerPort": 9193,
                "Name": "steampipe",
                "Protocol": "tcp",
              },
            ],
            "Secrets": [
              {
                "Name": "STEAMPIPE_DATABASE_PASSWORD",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "steampipecredentials98149F9E",
                      },
                      ":steampipe-db-password::",
                    ],
                  ],
                },
              },
              {
                "Name": "GITHUB_TOKEN",
                "ValueFrom": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "steampipecredentials98149F9E",
                      },
                      ":github-token::",
                    ],
                  ],
                },
              },
            ],
          },
          {
            "Environment": [
              {
                "Name": "STACK",
                "Value": "deploy",
              },
              {
                "Name": "STAGE",
                "Value": "TEST",
              },
              {
                "Name": "APP",
                "Value": "service-catalogue",
              },
              {
                "Name": "GU_REPO",
                "Value": "guardian/service-catalogue",
              },
            ],
            "Essential": true,
            "FirelensConfiguration": {
              "Type": "fluentbit",
            },
            "Image": "ghcr.io/guardian/devx-logs:2",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "steampipeTaskDefinitionsteampipeFirelensLogGroup61FE1785",
                },
                "awslogs-region": {
                  "Ref": "AWS::Region",
                },
                "awslogs-stream-prefix": "deploy/TEST/service-catalogue",
              },
            },
            "Name": "steampipeFirelens",
          },
        ],
        "Cpu": "256",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "steampipeTaskDefinitionExecutionRole36454CCE",
            "Arn",
          ],
        },
        "Family": "ServiceCataloguesteampipeTaskDefinition7074901D",
        "Memory": "512",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE",
        ],
        "RuntimePlatform": {
          "CpuArchitecture": "ARM64",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "steampipeTaskDefinitionTaskRole8DC44379",
            "Arn",
          ],
        },
        "Volumes": [
          {
            "EFSVolumeConfiguration": {
              "AuthorizationConfig": {
                "AccessPointId": {
                  "Ref": "SteampipeDatabaseEFSSteampipeDatabaseEFSAccessPoint2C2619C6",
                },
              },
              "FilesystemId": {
                "Ref": "SteampipeDatabaseEFS4822AB7A",
              },
              "TransitEncryption": "ENABLED",
            },
            "Name": "steampipe-database",
          },
        ],
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "steampipeTaskDefinitionExecutionRole36454CCE": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "steampipeTaskDefinitionExecutionRoleDefaultPolicy901D37C5": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "steampipecredentials98149F9E",
              },
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "steampipeTaskDefinitionsteampipeFirelensLogGroup61FE1785",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "steampipeTaskDefinitionExecutionRoleDefaultPolicy901D37C5",
        "Roles": [
          {
            "Ref": "steampipeTaskDefinitionExecutionRole36454CCE",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "steampipeTaskDefinitionTaskRole8DC44379": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "steampipeTaskDefinitionTaskRoleDefaultPolicyE6E26240": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kinesis:Describe*",
                "kinesis:Put*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":kinesis:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":stream/",
                    {
                      "Ref": "LoggingStreamName",
                    },
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "steampipeTaskDefinitionTaskRoleDefaultPolicyE6E26240",
        "Roles": [
          {
            "Ref": "steampipeTaskDefinitionTaskRole8DC44379",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "steampipeTaskDefinitionsteampipeFirelensLogGroup61FE1785": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionInDays": 1,
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "steampipecredentials98149F9E": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "GenerateSecretString": {},
        "Name": "/TEST/deploy/service-catalogue/steampipe-credentials",
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
    "steampipenlb8A25667C": {
      "Properties": {
        "LoadBalancerAttributes": [
          {
            "Key": "deletion_protection.enabled",
            "Value": "false",
          },
        ],
        "Scheme": "internal",
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "SteampipeSecurityGroupServicecatalogue45A0E3D6",
              "GroupId",
            ],
          },
          {
            "Fn::GetAtt": [
              "steampipesgServicecatalogue18CB8C1F",
              "GroupId",
            ],
          },
        ],
        "Subnets": {
          "Ref": "PrivateSubnets",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "Type": "network",
      },
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
    },
    "steampipenlbsteampipenlblistener4500F2D0": {
      "Properties": {
        "DefaultActions": [
          {
            "TargetGroupArn": {
              "Ref": "steampipenlbsteampipenlblistenersteampipenlbtargetGroup8BBC7369",
            },
            "Type": "forward",
          },
        ],
        "LoadBalancerArn": {
          "Ref": "steampipenlb8A25667C",
        },
        "Port": 9193,
        "Protocol": "TCP",
      },
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
    },
    "steampipenlbsteampipenlblistenersteampipenlbtargetGroup8BBC7369": {
      "Properties": {
        "HealthCheckIntervalSeconds": 5,
        "HealthCheckTimeoutSeconds": 2,
        "HealthyThresholdCount": 2,
        "Port": 9193,
        "Protocol": "TCP",
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "TargetType": "ip",
        "VpcId": {
          "Ref": "VpcId",
        },
      },
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
    },
    "steampipesgServicecatalogue18CB8C1F": {
      "Properties": {
        "GroupDescription": "ServiceCatalogue/steampipe-sgServicecatalogue",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "Tags": [
          {
            "Key": "App",
            "Value": "service-catalogue",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "VpcId": {
          "Ref": "VpcId",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "steampipesgServicecataloguefromServiceCataloguesteampipesgServicecatalogue96A883E720492E3A726D": {
      "Properties": {
        "Description": "Allow this SG to talk to EFS mounts also using this SG",
        "FromPort": 2049,
        "GroupId": {
          "Fn::GetAtt": [
            "steampipesgServicecatalogue18CB8C1F",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "steampipesgServicecatalogue18CB8C1F",
            "GroupId",
          ],
        },
        "ToPort": 2049,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "steampipesgServicecataloguefromServiceCataloguesteampipesgServicecatalogue96A883E79193F33A348B": {
      "Properties": {
        "Description": "Allow this SG to talk to other applications also using this SG (in this case NLB to ECS)",
        "FromPort": 9193,
        "GroupId": {
          "Fn::GetAtt": [
            "steampipesgServicecatalogue18CB8C1F",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "steampipesgServicecatalogue18CB8C1F",
            "GroupId",
          ],
        },
        "ToPort": 9193,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
  },
}
`;
