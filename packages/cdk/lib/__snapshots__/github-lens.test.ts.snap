// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`The GithubLens stack matches the snapshot 1`] = `
{
  "Metadata": {
    "gu:cdk:constructs": [
      "GuS3Bucket",
      "GuStringParameter",
      "GuStringParameter",
      "GuStringParameter",
      "GuDistributionBucketParameter",
      "GuAnghammaradTopicParameter",
      "GuVpcParameter",
      "GuSubnetListParameter",
      "GuSubnetListParameter",
      "GuEc2App",
      "GuCertificate",
      "GuInstanceRole",
      "GuSSMRunCommandPolicy",
      "GuDescribeEC2Policy",
      "GuLoggingStreamNameParameter",
      "GuLogShippingPolicy",
      "GuGetDistributablePolicy",
      "GuParameterStoreReadPolicy",
      "GuAmiParameter",
      "GuHttpsEgressSecurityGroup",
      "GuAutoScalingGroup",
      "GuWazuhAccess",
      "GuApplicationLoadBalancer",
      "GuApplicationTargetGroup",
      "GuHttpsApplicationListener",
      "GuSecurityGroup",
      "GuAlb5xxPercentageAlarm",
      "GuUnhealthyInstancesAlarm",
      "GuCname",
      "GuScheduledLambda",
      "GuLambdaErrorPercentageAlarm",
    ],
    "gu:cdk:version": "TEST",
  },
  "Outputs": {
    "LoadBalancerGithublensapiDnsName": {
      "Description": "DNS entry for LoadBalancerGithublensapi",
      "Value": {
        "Fn::GetAtt": [
          "LoadBalancerGithublensapi0DC349AD",
          "DNSName",
        ],
      },
    },
  },
  "Parameters": {
    "AMIGithublensapi": {
      "Description": "Amazon Machine Image ID for the app github-lens-api. Use this in conjunction with AMIgo to keep AMIs up to date.",
      "Type": "AWS::EC2::Image::Id",
    },
    "AnghammaradSnsArn": {
      "Default": "/account/services/anghammarad.topic.arn",
      "Description": "SSM parameter containing the ARN of the Anghammarad SNS topic",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "DistributionBucketName": {
      "Default": "/account/services/artifact.bucket",
      "Description": "SSM parameter containing the S3 bucket name holding distribution artifacts",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "LoggingStreamName": {
      "Default": "/account/services/logging.stream.name",
      "Description": "SSM parameter containing the Name (not ARN) on the kinesis stream",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "VpcId": {
      "Default": "/account/vpc/primary/id",
      "Description": "Virtual Private Cloud to run EC2 instances within. Should NOT be the account default VPC.",
      "Type": "AWS::SSM::Parameter::Value<AWS::EC2::VPC::Id>",
    },
    "githubappid": {
      "Default": "/INFRA/deploy/github-lens/github-app-id",
      "Description": "(From SSM) The GitHub app ID of the app used to authenticate github-lens",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "githubinstallationid": {
      "Default": "/INFRA/deploy/github-lens/github-installation-id",
      "Description": "(From SSM) The GitHub installation ID of the app used to authenticate github-lens in the Guardian org",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "githublensapiPrivateSubnets": {
      "Default": "/account/vpc/primary/subnets/private",
      "Description": "A list of private subnets",
      "Type": "AWS::SSM::Parameter::Value<List<AWS::EC2::Subnet::Id>>",
    },
    "githublensapiPublicSubnets": {
      "Default": "/account/vpc/primary/subnets/public",
      "Description": "A list of public subnets",
      "Type": "AWS::SSM::Parameter::Value<List<AWS::EC2::Subnet::Id>>",
    },
    "githubprivatekey": {
      "Default": "/INFRA/deploy/github-lens/github-private-key",
      "Description": "(From SSM) (KMS encrypted) The private key of the app used to authenticate github-lens in the Guardian org",
      "NoEcho": true,
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "AutoScalingGroupGithublensapiASG9A8AE08B": {
      "Properties": {
        "HealthCheckGracePeriod": 120,
        "HealthCheckType": "ELB",
        "LaunchConfigurationName": {
          "Ref": "AutoScalingGroupGithublensapiLaunchConfigED794D0D",
        },
        "MaxSize": "2",
        "MinSize": "1",
        "Tags": [
          {
            "Key": "App",
            "PropagateAtLaunch": true,
            "Value": "github-lens-api",
          },
          {
            "Key": "gu:cdk:version",
            "PropagateAtLaunch": true,
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "PropagateAtLaunch": true,
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "LogKinesisStreamName",
            "PropagateAtLaunch": true,
            "Value": {
              "Ref": "LoggingStreamName",
            },
          },
          {
            "Key": "Name",
            "PropagateAtLaunch": true,
            "Value": "GithubLens/AutoScalingGroupGithublensapi",
          },
          {
            "Key": "Stack",
            "PropagateAtLaunch": true,
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "PropagateAtLaunch": true,
            "Value": "INFRA",
          },
          {
            "Key": "SystemdUnit",
            "PropagateAtLaunch": true,
            "Value": "github-lens-api.service",
          },
        ],
        "TargetGroupARNs": [
          {
            "Ref": "TargetGroupGithublensapi08E11958",
          },
        ],
        "VPCZoneIdentifier": {
          "Ref": "githublensapiPrivateSubnets",
        },
      },
      "Type": "AWS::AutoScaling::AutoScalingGroup",
    },
    "AutoScalingGroupGithublensapiInstanceProfile02115151": {
      "Properties": {
        "Roles": [
          {
            "Ref": "InstanceRoleGithublensapi15815617",
          },
        ],
      },
      "Type": "AWS::IAM::InstanceProfile",
    },
    "AutoScalingGroupGithublensapiLaunchConfigED794D0D": {
      "DependsOn": [
        "InstanceRoleGithublensapiDefaultPolicy0C5E588B",
        "InstanceRoleGithublensapi15815617",
      ],
      "Properties": {
        "IamInstanceProfile": {
          "Ref": "AutoScalingGroupGithublensapiInstanceProfile02115151",
        },
        "ImageId": {
          "Ref": "AMIGithublensapi",
        },
        "InstanceType": "t4g.nano",
        "MetadataOptions": {
          "HttpTokens": "required",
        },
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "GuHttpsEgressSecurityGroupGithublensapi4002F148",
              "GroupId",
            ],
          },
          {
            "Fn::GetAtt": [
              "WazuhSecurityGroup",
              "GroupId",
            ],
          },
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash -ev
cat << EOF > /etc/systemd/system/github-lens-api.service
[Unit]
Description=Github Lens API

[Service]
Environment="DATA_BUCKET_NAME=",
                {
                  "Ref": "githublensdatabucketGithublens7C07FDE7",
                },
                ""
Environment="PORT=8900"
Environment="STAGE=INFRA"
ExecStart=/usr/bin/node /handler.js

[Install]
WantedBy=multi-user.target
EOF

aws s3 cp s3://",
                {
                  "Ref": "DistributionBucketName",
                },
                "/deploy/INFRA/github-lens-api/github-lens-api.zip github-lens-api.zip
unzip github-lens-api.zip
chmod +x /handler.js
systemctl start github-lens-api
",
              ],
            ],
          },
        },
      },
      "Type": "AWS::AutoScaling::LaunchConfiguration",
    },
    "CertificateGithublensapi4318D111": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "DomainName": "github-lens.gutools.co.uk",
        "Tags": [
          {
            "Key": "App",
            "Value": "github-lens-api",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Name",
            "Value": "GithubLens/CertificateGithublensapi",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "INFRA",
          },
        ],
        "ValidationMethod": "DNS",
      },
      "Type": "AWS::CertificateManager::Certificate",
      "UpdateReplacePolicy": "Retain",
    },
    "DNS": {
      "Properties": {
        "Name": "github-lens.gutools.co.uk",
        "RecordType": "CNAME",
        "ResourceRecords": [
          {
            "Fn::GetAtt": [
              "LoadBalancerGithublensapi0DC349AD",
              "DNSName",
            ],
          },
        ],
        "Stage": "INFRA",
        "TTL": 3600,
      },
      "Type": "Guardian::DNS::RecordSet",
    },
    "DescribeEC2PolicyFF5F9295": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "autoscaling:DescribeAutoScalingInstances",
                "autoscaling:DescribeAutoScalingGroups",
                "ec2:DescribeTags",
                "ec2:DescribeInstances",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "describe-ec2-policy",
        "Roles": [
          {
            "Ref": "InstanceRoleGithublensapi15815617",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "GetDistributablePolicyGithublensapiC633BD13": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:GetObject",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:s3:::",
                    {
                      "Ref": "DistributionBucketName",
                    },
                    "/deploy/INFRA/github-lens-api/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "GetDistributablePolicyGithublensapiC633BD13",
        "Roles": [
          {
            "Ref": "InstanceRoleGithublensapi15815617",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "GuHttpsEgressSecurityGroupGithublensapi4002F148": {
      "Properties": {
        "GroupDescription": "Allow all outbound HTTPS traffic",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound HTTPS traffic",
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "Tags": [
          {
            "Key": "App",
            "Value": "github-lens-api",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "INFRA",
          },
        ],
        "VpcId": {
          "Ref": "VpcId",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "GuHttpsEgressSecurityGroupGithublensapifromGithubLensInternalIngressSecurityGroupGithublensapiD4073FAD8900A4E48325": {
      "Properties": {
        "Description": "Load balancer to target",
        "FromPort": 8900,
        "GroupId": {
          "Fn::GetAtt": [
            "GuHttpsEgressSecurityGroupGithublensapi4002F148",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "InternalIngressSecurityGroupGithublensapi2BEE9DF4",
            "GroupId",
          ],
        },
        "ToPort": 8900,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "GuHttpsEgressSecurityGroupGithublensapifromGithubLensLoadBalancerGithublensapiSecurityGroup2BC6E5BA89001B58638F": {
      "Properties": {
        "Description": "Load balancer to target",
        "FromPort": 8900,
        "GroupId": {
          "Fn::GetAtt": [
            "GuHttpsEgressSecurityGroupGithublensapi4002F148",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "LoadBalancerGithublensapiSecurityGroup3BAB53B9",
            "GroupId",
          ],
        },
        "ToPort": 8900,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "GuLogShippingPolicy981BFE5A": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kinesis:Describe*",
                "kinesis:Put*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:kinesis:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":stream/",
                    {
                      "Ref": "LoggingStreamName",
                    },
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "GuLogShippingPolicy981BFE5A",
        "Roles": [
          {
            "Ref": "InstanceRoleGithublensapi15815617",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "High5xxPercentageAlarmGithublensapiC50B1CF6": {
      "Properties": {
        "ActionsEnabled": true,
        "AlarmActions": [
          {
            "Fn::Join": [
              "",
              [
                "arn:aws:sns:",
                {
                  "Ref": "AWS::Region",
                },
                ":",
                {
                  "Ref": "AWS::AccountId",
                },
                ":",
                {
                  "Ref": "AnghammaradSnsArn",
                },
              ],
            ],
          },
        ],
        "AlarmDescription": "github-lens-api exceeded 1% error rate",
        "AlarmName": "High 5XX error % from github-lens-api in INFRA",
        "ComparisonOperator": "GreaterThanThreshold",
        "EvaluationPeriods": 60,
        "Metrics": [
          {
            "Expression": "100*(m1+m2)/m3",
            "Id": "expr_1",
            "Label": "% of 5XX responses served for github-lens-api (load balancer and instances combined)",
          },
          {
            "Id": "m1",
            "MetricStat": {
              "Metric": {
                "Dimensions": [
                  {
                    "Name": "LoadBalancer",
                    "Value": {
                      "Fn::GetAtt": [
                        "LoadBalancerGithublensapi0DC349AD",
                        "LoadBalancerFullName",
                      ],
                    },
                  },
                ],
                "MetricName": "HTTPCode_ELB_5XX_Count",
                "Namespace": "AWS/ApplicationELB",
              },
              "Period": 60,
              "Stat": "Sum",
            },
            "ReturnData": false,
          },
          {
            "Id": "m2",
            "MetricStat": {
              "Metric": {
                "Dimensions": [
                  {
                    "Name": "LoadBalancer",
                    "Value": {
                      "Fn::GetAtt": [
                        "LoadBalancerGithublensapi0DC349AD",
                        "LoadBalancerFullName",
                      ],
                    },
                  },
                ],
                "MetricName": "HTTPCode_Target_5XX_Count",
                "Namespace": "AWS/ApplicationELB",
              },
              "Period": 60,
              "Stat": "Sum",
            },
            "ReturnData": false,
          },
          {
            "Id": "m3",
            "MetricStat": {
              "Metric": {
                "Dimensions": [
                  {
                    "Name": "LoadBalancer",
                    "Value": {
                      "Fn::GetAtt": [
                        "LoadBalancerGithublensapi0DC349AD",
                        "LoadBalancerFullName",
                      ],
                    },
                  },
                ],
                "MetricName": "RequestCount",
                "Namespace": "AWS/ApplicationELB",
              },
              "Period": 60,
              "Stat": "Sum",
            },
            "ReturnData": false,
          },
        ],
        "Threshold": 1,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "INFRAdeploygithublens2B0B3293": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "EnableKeyRotation": true,
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "INFRA",
          },
        ],
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain",
    },
    "InstanceRoleGithublensapi15815617": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ec2.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Path": "/",
        "Tags": [
          {
            "Key": "App",
            "Value": "github-lens-api",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "INFRA",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "InstanceRoleGithublensapiDefaultPolicy0C5E588B": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "githublensdatabucketGithublens7C07FDE7",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "githublensdatabucketGithublens7C07FDE7",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "InstanceRoleGithublensapiDefaultPolicy0C5E588B",
        "Roles": [
          {
            "Ref": "InstanceRoleGithublensapi15815617",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "InternalIngressSecurityGroupGithublensapi2BEE9DF4": {
      "Properties": {
        "GroupDescription": "Allow restricted ingress from CIDR ranges",
        "SecurityGroupIngress": [
          {
            "CidrIp": "10.0.0.0/8",
            "Description": "Allow access on port 443 from 10.0.0.0/8",
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "Tags": [
          {
            "Key": "App",
            "Value": "github-lens-api",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "INFRA",
          },
        ],
        "VpcId": {
          "Ref": "VpcId",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "InternalIngressSecurityGroupGithublensapitoGithubLensGuHttpsEgressSecurityGroupGithublensapi786E594E890018881CD2": {
      "Properties": {
        "Description": "Load balancer to target",
        "DestinationSecurityGroupId": {
          "Fn::GetAtt": [
            "GuHttpsEgressSecurityGroupGithublensapi4002F148",
            "GroupId",
          ],
        },
        "FromPort": 8900,
        "GroupId": {
          "Fn::GetAtt": [
            "InternalIngressSecurityGroupGithublensapi2BEE9DF4",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "ToPort": 8900,
      },
      "Type": "AWS::EC2::SecurityGroupEgress",
    },
    "ListenerGithublensapiCF255DF8": {
      "Properties": {
        "Certificates": [
          {
            "CertificateArn": {
              "Ref": "CertificateGithublensapi4318D111",
            },
          },
        ],
        "DefaultActions": [
          {
            "TargetGroupArn": {
              "Ref": "TargetGroupGithublensapi08E11958",
            },
            "Type": "forward",
          },
        ],
        "LoadBalancerArn": {
          "Ref": "LoadBalancerGithublensapi0DC349AD",
        },
        "Port": 443,
        "Protocol": "HTTPS",
      },
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
    },
    "LoadBalancerGithublensapi0DC349AD": {
      "Properties": {
        "LoadBalancerAttributes": [
          {
            "Key": "deletion_protection.enabled",
            "Value": "true",
          },
        ],
        "Scheme": "internal",
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "LoadBalancerGithublensapiSecurityGroup3BAB53B9",
              "GroupId",
            ],
          },
          {
            "Fn::GetAtt": [
              "InternalIngressSecurityGroupGithublensapi2BEE9DF4",
              "GroupId",
            ],
          },
        ],
        "Subnets": {
          "Ref": "githublensapiPrivateSubnets",
        },
        "Tags": [
          {
            "Key": "App",
            "Value": "github-lens-api",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "INFRA",
          },
        ],
        "Type": "application",
      },
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
    },
    "LoadBalancerGithublensapiSecurityGroup3BAB53B9": {
      "Properties": {
        "GroupDescription": "Automatically created Security Group for ELB GithubLensLoadBalancerGithublensapiB907D9D7",
        "Tags": [
          {
            "Key": "App",
            "Value": "github-lens-api",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "INFRA",
          },
        ],
        "VpcId": {
          "Ref": "VpcId",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "LoadBalancerGithublensapiSecurityGrouptoGithubLensGuHttpsEgressSecurityGroupGithublensapi786E594E8900799CA36D": {
      "Properties": {
        "Description": "Load balancer to target",
        "DestinationSecurityGroupId": {
          "Fn::GetAtt": [
            "GuHttpsEgressSecurityGroupGithublensapi4002F148",
            "GroupId",
          ],
        },
        "FromPort": 8900,
        "GroupId": {
          "Fn::GetAtt": [
            "LoadBalancerGithublensapiSecurityGroup3BAB53B9",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "ToPort": 8900,
      },
      "Type": "AWS::EC2::SecurityGroupEgress",
    },
    "ParameterStoreReadGithublensapi77C298FE": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ssm:GetParametersByPath",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:ssm:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/INFRA/deploy/github-lens-api",
                  ],
                ],
              },
            },
            {
              "Action": [
                "ssm:GetParameters",
                "ssm:GetParameter",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:ssm:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/INFRA/deploy/github-lens-api/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "parameter-store-read-policy",
        "Roles": [
          {
            "Ref": "InstanceRoleGithublensapi15815617",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "SSMRunCommandPolicy244E1613": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ec2messages:AcknowledgeMessage",
                "ec2messages:DeleteMessage",
                "ec2messages:FailMessage",
                "ec2messages:GetEndpoint",
                "ec2messages:GetMessages",
                "ec2messages:SendReply",
                "ssm:UpdateInstanceInformation",
                "ssm:ListInstanceAssociations",
                "ssm:DescribeInstanceProperties",
                "ssm:DescribeDocumentParameters",
                "ssmmessages:CreateControlChannel",
                "ssmmessages:CreateDataChannel",
                "ssmmessages:OpenControlChannel",
                "ssmmessages:OpenDataChannel",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ssm-run-command-policy",
        "Roles": [
          {
            "Ref": "InstanceRoleGithublensapi15815617",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "TargetGroupGithublensapi08E11958": {
      "Properties": {
        "HealthCheckIntervalSeconds": 10,
        "HealthCheckPath": "/healthcheck",
        "HealthCheckProtocol": "HTTP",
        "HealthCheckTimeoutSeconds": 5,
        "HealthyThresholdCount": 5,
        "Port": 8900,
        "Protocol": "HTTP",
        "Tags": [
          {
            "Key": "App",
            "Value": "github-lens-api",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "INFRA",
          },
        ],
        "TargetGroupAttributes": [
          {
            "Key": "deregistration_delay.timeout_seconds",
            "Value": "30",
          },
          {
            "Key": "stickiness.enabled",
            "Value": "false",
          },
        ],
        "TargetType": "instance",
        "UnhealthyThresholdCount": 2,
        "VpcId": {
          "Ref": "VpcId",
        },
      },
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
    },
    "UnhealthyInstancesAlarmGithublensapiD49343E9": {
      "Properties": {
        "ActionsEnabled": true,
        "AlarmActions": [
          {
            "Fn::Join": [
              "",
              [
                "arn:aws:sns:",
                {
                  "Ref": "AWS::Region",
                },
                ":",
                {
                  "Ref": "AWS::AccountId",
                },
                ":",
                {
                  "Ref": "AnghammaradSnsArn",
                },
              ],
            ],
          },
        ],
        "AlarmDescription": "github-lens-api's instances have failed healthchecks several times over the last 1 hour.
      This typically results in the AutoScaling Group cycling instances and can lead to problems with deployment,
      scaling or handling traffic spikes.

      Check github-lens-api's application logs or ssh onto an unhealthy instance in order to debug these problems.",
        "AlarmName": "Unhealthy instances for github-lens-api in INFRA",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "DatapointsToAlarm": 30,
        "Dimensions": [
          {
            "Name": "LoadBalancer",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Fn::Select": [
                      1,
                      {
                        "Fn::Split": [
                          "/",
                          {
                            "Ref": "ListenerGithublensapiCF255DF8",
                          },
                        ],
                      },
                    ],
                  },
                  "/",
                  {
                    "Fn::Select": [
                      2,
                      {
                        "Fn::Split": [
                          "/",
                          {
                            "Ref": "ListenerGithublensapiCF255DF8",
                          },
                        ],
                      },
                    ],
                  },
                  "/",
                  {
                    "Fn::Select": [
                      3,
                      {
                        "Fn::Split": [
                          "/",
                          {
                            "Ref": "ListenerGithublensapiCF255DF8",
                          },
                        ],
                      },
                    ],
                  },
                ],
              ],
            },
          },
          {
            "Name": "TargetGroup",
            "Value": {
              "Fn::GetAtt": [
                "TargetGroupGithublensapi08E11958",
                "TargetGroupFullName",
              ],
            },
          },
        ],
        "EvaluationPeriods": 60,
        "MetricName": "UnHealthyHostCount",
        "Namespace": "AWS/ApplicationELB",
        "Period": 60,
        "Statistic": "Maximum",
        "Threshold": 1,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "WazuhSecurityGroup": {
      "Properties": {
        "GroupDescription": "Allow outbound traffic from wazuh agent to manager",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Wazuh event logging",
            "FromPort": 1514,
            "IpProtocol": "tcp",
            "ToPort": 1514,
          },
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Wazuh agent registration",
            "FromPort": 1515,
            "IpProtocol": "tcp",
            "ToPort": 1515,
          },
        ],
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "INFRA",
          },
        ],
        "VpcId": {
          "Ref": "VpcId",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "githubdatafetcherlambda94945EFA": {
      "DependsOn": [
        "githubdatafetcherlambdaServiceRoleDefaultPolicy5674D0A7",
        "githubdatafetcherlambdaServiceRole7DA5959D",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "DistributionBucketName",
          },
          "S3Key": "deploy/INFRA/github-data-fetcher/github-data-fetcher.zip",
        },
        "Environment": {
          "Variables": {
            "APP": "github-data-fetcher",
            "DATA_BUCKET_NAME": {
              "Ref": "githublensdatabucketGithublens7C07FDE7",
            },
            "GITHUB_APP_ID": {
              "Ref": "githubappid",
            },
            "GITHUB_APP_INSTALLATION_ID": {
              "Ref": "githubinstallationid",
            },
            "GITHUB_APP_PRIVATE_KEY": {
              "Ref": "githubprivatekey",
            },
            "KMS_KEY_ID": {
              "Ref": "INFRAdeploygithublens2B0B3293",
            },
            "STACK": "deploy",
            "STAGE": "INFRA",
          },
        },
        "Handler": "handler.main",
        "MemorySize": 512,
        "Role": {
          "Fn::GetAtt": [
            "githubdatafetcherlambdaServiceRole7DA5959D",
            "Arn",
          ],
        },
        "Runtime": "nodejs16.x",
        "Tags": [
          {
            "Key": "App",
            "Value": "github-data-fetcher",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "INFRA",
          },
        ],
        "Timeout": 300,
      },
      "Type": "AWS::Lambda::Function",
    },
    "githubdatafetcherlambdaErrorPercentageAlarmForLambda0B647163": {
      "Properties": {
        "ActionsEnabled": true,
        "AlarmActions": [
          {
            "Fn::Join": [
              "",
              [
                "arn:aws:sns:",
                {
                  "Ref": "AWS::Region",
                },
                ":",
                {
                  "Ref": "AWS::AccountId",
                },
                ":devx-alerts",
              ],
            ],
          },
        ],
        "AlarmDescription": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "githubdatafetcherlambda94945EFA",
              },
              " exceeded 0% error rate",
            ],
          ],
        },
        "AlarmName": {
          "Fn::Join": [
            "",
            [
              "High error % from ",
              {
                "Ref": "githubdatafetcherlambda94945EFA",
              },
              " lambda in INFRA",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "EvaluationPeriods": 1,
        "Metrics": [
          {
            "Expression": "100*m1/m2",
            "Id": "expr_1",
            "Label": {
              "Fn::Join": [
                "",
                [
                  "Error % of ",
                  {
                    "Ref": "githubdatafetcherlambda94945EFA",
                  },
                ],
              ],
            },
          },
          {
            "Id": "m1",
            "MetricStat": {
              "Metric": {
                "Dimensions": [
                  {
                    "Name": "FunctionName",
                    "Value": {
                      "Ref": "githubdatafetcherlambda94945EFA",
                    },
                  },
                ],
                "MetricName": "Errors",
                "Namespace": "AWS/Lambda",
              },
              "Period": 60,
              "Stat": "Sum",
            },
            "ReturnData": false,
          },
          {
            "Id": "m2",
            "MetricStat": {
              "Metric": {
                "Dimensions": [
                  {
                    "Name": "FunctionName",
                    "Value": {
                      "Ref": "githubdatafetcherlambda94945EFA",
                    },
                  },
                ],
                "MetricName": "Invocations",
                "Namespace": "AWS/Lambda",
              },
              "Period": 60,
              "Stat": "Sum",
            },
            "ReturnData": false,
          },
        ],
        "Threshold": 0,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "githubdatafetcherlambdaServiceRole7DA5959D": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "Tags": [
          {
            "Key": "App",
            "Value": "github-data-fetcher",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "INFRA",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "githubdatafetcherlambdaServiceRoleDefaultPolicy5674D0A7": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "kms:Decrypt",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "INFRAdeploygithublens2B0B3293",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      {
                        "Ref": "DistributionBucketName",
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      {
                        "Ref": "DistributionBucketName",
                      },
                      "/deploy/INFRA/github-data-fetcher/github-data-fetcher.zip",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "ssm:GetParametersByPath",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:ssm:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/INFRA/deploy/github-data-fetcher",
                  ],
                ],
              },
            },
            {
              "Action": [
                "ssm:GetParameters",
                "ssm:GetParameter",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:ssm:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/INFRA/deploy/github-data-fetcher/*",
                  ],
                ],
              },
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "githublensdatabucketGithublens7C07FDE7",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "githublensdatabucketGithublens7C07FDE7",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "githubdatafetcherlambdaServiceRoleDefaultPolicy5674D0A7",
        "Roles": [
          {
            "Ref": "githubdatafetcherlambdaServiceRole7DA5959D",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "githubdatafetcherlambdagithubdatafetcherlambdacron080AllowEventRuleGithubLensgithubdatafetcherlambdaE2220E44970E0DB1": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "githubdatafetcherlambda94945EFA",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "githubdatafetcherlambdagithubdatafetcherlambdacron080DB012BEB",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "githubdatafetcherlambdagithubdatafetcherlambdacron080DB012BEB": {
      "Properties": {
        "ScheduleExpression": "cron(0 8 * * ? *)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "githubdatafetcherlambda94945EFA",
                "Arn",
              ],
            },
            "Id": "Target0",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "githublensdatabucketGithublens7C07FDE7": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "BucketName": "github-lens-data-infra",
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": [
          {
            "Key": "App",
            "Value": "github-lens",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/service-catalogue",
          },
          {
            "Key": "Stack",
            "Value": "deploy",
          },
          {
            "Key": "Stage",
            "Value": "INFRA",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
  },
}
`;
