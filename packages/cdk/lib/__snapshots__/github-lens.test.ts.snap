// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`The GithubLens stack matches the snapshot 1`] = `
Object {
  "Metadata": Object {
    "gu:cdk:constructs": Array [
      "GuS3Bucket",
      "GuStringParameter",
      "GuStringParameter",
      "GuStringParameter",
      "GuDistributionBucketParameter",
      "GuScheduledLambda",
      "GuLambdaErrorPercentageAlarm",
    ],
    "gu:cdk:version": "TEST",
  },
  "Outputs": Object {
    "githublensEndpoint50F83866": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "https://",
            Object {
              "Ref": "githublens9CE5C757",
            },
            ".execute-api.",
            Object {
              "Ref": "AWS::Region",
            },
            ".",
            Object {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            Object {
              "Ref": "githublensDeploymentStageprod251885B9",
            },
            "/",
          ],
        ],
      },
    },
  },
  "Parameters": Object {
    "DistributionBucketName": Object {
      "Default": "/account/services/artifact.bucket",
      "Description": "SSM parameter containing the S3 bucket name holding distribution artifacts",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "githubappid": Object {
      "Default": "/TEST/deploy/github-lens/github-app-id",
      "Description": "(From SSM) The GitHub app ID of the app used to authenticate github-lens",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "githubinstallationid": Object {
      "Default": "/TEST/deploy/github-lens/github-installation-id",
      "Description": "(From SSM) The GitHub installation ID of the app used to authenticate github-lens in the Guardian org",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "githubprivatekey": Object {
      "Default": "/TEST/deploy/github-lens/github-private-key",
      "Description": "(From SSM) (KMS encrypted) The private key of the app used to authenticate github-lens in the Guardian org",
      "NoEcho": true,
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "TESTdeploygithublensFF348C57": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "EnableKeyRotation": true,
        "KeyPolicy": Object {
          "Statement": Array [
            Object {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/github-lens",
          },
          Object {
            "Key": "Stack",
            "Value": "deploy",
          },
          Object {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain",
    },
    "githublens9CE5C757": Object {
      "Properties": Object {
        "Description": "Returns information about The Guardian's various GitHub projects.",
        "Name": "GitHub Metadata API",
        "Tags": Array [
          Object {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/github-lens",
          },
          Object {
            "Key": "Stack",
            "Value": "deploy",
          },
          Object {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "githublensAccount9C8A7CF3": Object {
      "DeletionPolicy": "Retain",
      "DependsOn": Array [
        "githublens9CE5C757",
      ],
      "Properties": Object {
        "CloudWatchRoleArn": Object {
          "Fn::GetAtt": Array [
            "githublensCloudWatchRole4719BF07",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
      "UpdateReplacePolicy": "Retain",
    },
    "githublensCloudWatchRole4719BF07": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
        "Tags": Array [
          Object {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/github-lens",
          },
          Object {
            "Key": "Stack",
            "Value": "deploy",
          },
          Object {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
      "UpdateReplacePolicy": "Retain",
    },
    "githublensDeployment30D22A9E4591515aca2e53b0da112a1cec7907e5": Object {
      "DependsOn": Array [
        "githublensreposGETF199EB37",
        "githublensrepos4B767F30",
      ],
      "Properties": Object {
        "Description": "Returns information about The Guardian's various GitHub projects.",
        "RestApiId": Object {
          "Ref": "githublens9CE5C757",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
    },
    "githublensDeploymentStageprod251885B9": Object {
      "DependsOn": Array [
        "githublensAccount9C8A7CF3",
      ],
      "Properties": Object {
        "DeploymentId": Object {
          "Ref": "githublensDeployment30D22A9E4591515aca2e53b0da112a1cec7907e5",
        },
        "RestApiId": Object {
          "Ref": "githublens9CE5C757",
        },
        "StageName": "prod",
        "Tags": Array [
          Object {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/github-lens",
          },
          Object {
            "Key": "Stack",
            "Value": "deploy",
          },
          Object {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "githublensdatabucketGithublens7C07FDE7": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": "github-lens",
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/github-lens",
          },
          Object {
            "Key": "Stack",
            "Value": "deploy",
          },
          Object {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "githublensrepos4B767F30": Object {
      "Properties": Object {
        "ParentId": Object {
          "Fn::GetAtt": Array [
            "githublens9CE5C757",
            "RootResourceId",
          ],
        },
        "PathPart": "repos",
        "RestApiId": Object {
          "Ref": "githublens9CE5C757",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "githublensreposGETF199EB37": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "GET",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "StatusCode": "200",
            },
          ],
          "PassthroughBehavior": "NEVER",
          "RequestTemplates": Object {
            "application/json": "{ \\"statgusCode\\": 200 }",
          },
          "Type": "MOCK",
        },
        "ResourceId": Object {
          "Ref": "githublensrepos4B767F30",
        },
        "RestApiId": Object {
          "Ref": "githublens9CE5C757",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "repofetcherlambda3F53E41B": Object {
      "DependsOn": Array [
        "repofetcherlambdaServiceRoleDefaultPolicy50E545F9",
        "repofetcherlambdaServiceRole28143926",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "DistributionBucketName",
          },
          "S3Key": "deploy/TEST/repo-fetcher/repo-fetcher.zip",
        },
        "Environment": Object {
          "Variables": Object {
            "APP": "repo-fetcher",
            "DATA_BUCKET_NAME": Object {
              "Ref": "githublensdatabucketGithublens7C07FDE7",
            },
            "GITHUB_APP_ID": Object {
              "Ref": "githubappid",
            },
            "GITHUB_APP_INSTALLATION_ID": Object {
              "Ref": "githubinstallationid",
            },
            "GITHUB_APP_PRIVATE_KEY": Object {
              "Ref": "githubprivatekey",
            },
            "KMS_KEY_ID": Object {
              "Ref": "TESTdeploygithublensFF348C57",
            },
            "STACK": "deploy",
            "STAGE": "TEST",
          },
        },
        "Handler": "handler.main",
        "MemorySize": 512,
        "Role": Object {
          "Fn::GetAtt": Array [
            "repofetcherlambdaServiceRole28143926",
            "Arn",
          ],
        },
        "Runtime": "nodejs16.x",
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": "repo-fetcher",
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/github-lens",
          },
          Object {
            "Key": "Stack",
            "Value": "deploy",
          },
          Object {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "Timeout": 300,
      },
      "Type": "AWS::Lambda::Function",
    },
    "repofetcherlambdaErrorPercentageAlarmForLambda25B92F1F": Object {
      "Properties": Object {
        "ActionsEnabled": true,
        "AlarmActions": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:aws:sns:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":",
                Object {
                  "Ref": "AWS::AccountId",
                },
                ":devx-alerts",
              ],
            ],
          },
        ],
        "AlarmDescription": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "repofetcherlambda3F53E41B",
              },
              " exceeded 0% error rate",
            ],
          ],
        },
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "High error % from ",
              Object {
                "Ref": "repofetcherlambda3F53E41B",
              },
              " lambda in TEST",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "EvaluationPeriods": 1,
        "Metrics": Array [
          Object {
            "Expression": "100*m1/m2",
            "Id": "expr_1",
            "Label": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "Error % of ",
                  Object {
                    "Ref": "repofetcherlambda3F53E41B",
                  },
                ],
              ],
            },
          },
          Object {
            "Id": "m1",
            "MetricStat": Object {
              "Metric": Object {
                "Dimensions": Array [
                  Object {
                    "Name": "FunctionName",
                    "Value": Object {
                      "Ref": "repofetcherlambda3F53E41B",
                    },
                  },
                ],
                "MetricName": "Errors",
                "Namespace": "AWS/Lambda",
              },
              "Period": 60,
              "Stat": "Sum",
            },
            "ReturnData": false,
          },
          Object {
            "Id": "m2",
            "MetricStat": Object {
              "Metric": Object {
                "Dimensions": Array [
                  Object {
                    "Name": "FunctionName",
                    "Value": Object {
                      "Ref": "repofetcherlambda3F53E41B",
                    },
                  },
                ],
                "MetricName": "Invocations",
                "Namespace": "AWS/Lambda",
              },
              "Period": 60,
              "Stat": "Sum",
            },
            "ReturnData": false,
          },
        ],
        "Threshold": 0,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "repofetcherlambdaServiceRole28143926": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": "repo-fetcher",
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/github-lens",
          },
          Object {
            "Key": "Stack",
            "Value": "deploy",
          },
          Object {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "repofetcherlambdaServiceRoleDefaultPolicy50E545F9": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:PutObject",
                "s3:PutObjectAcl",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Fn::GetAtt": Array [
                        "githublensdatabucketGithublens7C07FDE7",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
            },
            Object {
              "Action": "kms:Decrypt",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "TESTdeploygithublensFF348C57",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      Object {
                        "Ref": "DistributionBucketName",
                      },
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      Object {
                        "Ref": "DistributionBucketName",
                      },
                      "/deploy/TEST/repo-fetcher/repo-fetcher.zip",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "ssm:GetParametersByPath",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:aws:ssm:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/TEST/deploy/repo-fetcher",
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "ssm:GetParameters",
                "ssm:GetParameter",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:aws:ssm:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/TEST/deploy/repo-fetcher/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "repofetcherlambdaServiceRoleDefaultPolicy50E545F9",
        "Roles": Array [
          Object {
            "Ref": "repofetcherlambdaServiceRole28143926",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "repofetcherlambdarepofetcherlambdacron080AllowEventRuleGithubLensrepofetcherlambda584DB7587F4F78A1": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "repofetcherlambda3F53E41B",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": Object {
          "Fn::GetAtt": Array [
            "repofetcherlambdarepofetcherlambdacron080B8E1215D",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "repofetcherlambdarepofetcherlambdacron080B8E1215D": Object {
      "Properties": Object {
        "ScheduleExpression": "cron(0 8 * * ? *)",
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::GetAtt": Array [
                "repofetcherlambda3F53E41B",
                "Arn",
              ],
            },
            "Id": "Target0",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
  },
}
`;
