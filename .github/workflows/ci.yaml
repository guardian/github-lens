name: test
on:
  pull_request:
  workflow_dispatch:
  push:
    branches:
      - main
jobs:
  test:
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    steps:
      - uses: actions/checkout@v3

      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: eu-west-1
          role-to-assume: ${{ secrets.GU_RIFF_RAFF_ROLE_ARN }}

      - uses: actions/setup-node@v3
        with:
          node-version-file: "cdk/.nvmrc"
          cache: npm
          cache-dependency-path: cdk/package-lock.json

      - name: synth CDK
        run: |
          cd cdk
          npm ci
          npm test -- --passWithNoTests
          npm run lint
          npm run synth

      - uses: actions/setup-go@v3
        with:
          go-version: "1.19"

      - name: build lambda
        run: |
          env GOOS=linux GOARCH=amd64 go build main.go
          zip lambda.zip main

      - uses: guardian/actions-riff-raff@v1
        with:
          app: cdk-metadata
          config: |
            stacks:
              - deploy
            regions:
              - eu-west-1
            allowedStages:
              - INFRA
            deployments:
              cloudformation:
                app: cdk-metadata
                type: cloud-formation
                sources:
                  -  cdk/cdk.out/CdkMetadata-INFRA.template.json
                parameters:
                  templatePath: CdkMetadata-INFRA.template.json
              lambda:
                app: cdk-metadata
                type: aws-lambda
                sources:
                  - lambda.zip
                dependencies:
                  - cloudformation
                parameters:
                  bucketSsmLookup: true
                  lookupByTags: true
                  fileName: lambda.zip

      - uses: guardian/actions-riff-raff@v1
        with:
          app: cdk-metadata-roles
          config: |
            stacks:
              - playground
              - deploy
              - composer
              - workflow
              - media-service
              - content-api
              - cms-fronts
              - ophan
              - frontend
              - identity
              - mobile
              - targeting
              - membership
              - pfi
              - security
              - data-science
            regions:
              - eu-west-1
            allowedStages:
              - INFRA
            deployments:
              cloudformation:
                app: cdk-metadata-roles
                type: cloud-formation
                sources:
                  -  cdk/cdk.out/CdkMetadataAccess-INFRA.template.json
                parameters:
                  templatePath: CdkMetadataAccess-INFRA.template.json
