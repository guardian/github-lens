// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`The CloudFormation Lens stack matches the snapshot 1`] = `
Object {
  "Metadata": Object {
    "gu:cdk:constructs": Array [
      "GuDistributionBucketParameter",
      "GuAnghammaradTopicParameter",
      "GuEc2App",
      "GuVpcParameter",
      "GuSubnetListParameter",
      "GuCertificate",
      "GuInstanceRole",
      "GuSSMRunCommandPolicy",
      "GuDescribeEC2Policy",
      "GuLoggingStreamNameParameter",
      "GuLogShippingPolicy",
      "GuGetDistributablePolicy",
      "GuParameterStoreReadPolicy",
      "GuAmiParameter",
      "GuHttpsEgressSecurityGroup",
      "GuAutoScalingGroup",
      "GuWazuhAccess",
      "GuSubnetListParameter",
      "GuApplicationLoadBalancer",
      "GuApplicationTargetGroup",
      "GuHttpsApplicationListener",
      "GuSecurityGroup",
      "GuAlb5xxPercentageAlarm",
      "GuUnhealthyInstancesAlarm",
      "GuCname",
    ],
    "gu:cdk:version": "TEST",
  },
  "Outputs": Object {
    "LoadBalancerCloudformationlensDnsName": Object {
      "Description": "DNS entry for LoadBalancerCloudformationlens",
      "Value": Object {
        "Fn::GetAtt": Array [
          "LoadBalancerCloudformationlens45065A19",
          "DNSName",
        ],
      },
    },
  },
  "Parameters": Object {
    "AMICloudformationlens": Object {
      "Description": "Amazon Machine Image ID for the app cloudformation-lens. Use this in conjunction with AMIgo to keep AMIs up to date.",
      "Type": "AWS::EC2::Image::Id",
    },
    "AnghammaradSnsArn": Object {
      "Default": "/account/services/anghammarad.topic.arn",
      "Description": "SSM parameter containing the ARN of the Anghammarad SNS topic",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "DistributionBucketName": Object {
      "Default": "/account/services/artifact.bucket",
      "Description": "SSM parameter containing the S3 bucket name holding distribution artifacts",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "LoggingStreamName": Object {
      "Default": "/account/services/logging.stream.name",
      "Description": "SSM parameter containing the Name (not ARN) on the kinesis stream",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "VpcId": Object {
      "Default": "/account/vpc/primary/id",
      "Description": "Virtual Private Cloud to run EC2 instances within. Should NOT be the account default VPC.",
      "Type": "AWS::SSM::Parameter::Value<AWS::EC2::VPC::Id>",
    },
    "cloudformationlensPrivateSubnets": Object {
      "Default": "/account/vpc/primary/subnets/private",
      "Description": "A list of private subnets",
      "Type": "AWS::SSM::Parameter::Value<List<AWS::EC2::Subnet::Id>>",
    },
    "cloudformationlensPublicSubnets": Object {
      "Default": "/account/vpc/primary/subnets/public",
      "Description": "A list of public subnets",
      "Type": "AWS::SSM::Parameter::Value<List<AWS::EC2::Subnet::Id>>",
    },
  },
  "Resources": Object {
    "AutoScalingGroupCloudformationlensASGDA76A8B5": Object {
      "Properties": Object {
        "HealthCheckGracePeriod": 120,
        "HealthCheckType": "ELB",
        "LaunchConfigurationName": Object {
          "Ref": "AutoScalingGroupCloudformationlensLaunchConfig82219E2C",
        },
        "MaxSize": "2",
        "MinSize": "1",
        "Tags": Array [
          Object {
            "Key": "App",
            "PropagateAtLaunch": true,
            "Value": "cloudformation-lens",
          },
          Object {
            "Key": "gu:cdk:pattern-name",
            "PropagateAtLaunch": true,
            "Value": "GuEc2App",
          },
          Object {
            "Key": "gu:cdk:version",
            "PropagateAtLaunch": true,
            "Value": "TEST",
          },
          Object {
            "Key": "gu:repo",
            "PropagateAtLaunch": true,
            "Value": "guardian/cdk-metadata",
          },
          Object {
            "Key": "LogKinesisStreamName",
            "PropagateAtLaunch": true,
            "Value": Object {
              "Ref": "LoggingStreamName",
            },
          },
          Object {
            "Key": "Name",
            "PropagateAtLaunch": true,
            "Value": "CloudFormationLens/AutoScalingGroupCloudformationlens",
          },
          Object {
            "Key": "Stack",
            "PropagateAtLaunch": true,
            "Value": "deploy",
          },
          Object {
            "Key": "Stage",
            "PropagateAtLaunch": true,
            "Value": "TEST",
          },
          Object {
            "Key": "SystemdUnit",
            "PropagateAtLaunch": true,
            "Value": "cloudformation-lens.service",
          },
        ],
        "TargetGroupARNs": Array [
          Object {
            "Ref": "TargetGroupCloudformationlensAB0868BD",
          },
        ],
        "VPCZoneIdentifier": Object {
          "Ref": "cloudformationlensPrivateSubnets",
        },
      },
      "Type": "AWS::AutoScaling::AutoScalingGroup",
    },
    "AutoScalingGroupCloudformationlensInstanceProfile4261FC07": Object {
      "Properties": Object {
        "Roles": Array [
          Object {
            "Ref": "InstanceRoleCloudformationlensBF921D31",
          },
        ],
      },
      "Type": "AWS::IAM::InstanceProfile",
    },
    "AutoScalingGroupCloudformationlensLaunchConfig82219E2C": Object {
      "DependsOn": Array [
        "InstanceRoleCloudformationlensDefaultPolicy5FCE5D0D",
        "InstanceRoleCloudformationlensBF921D31",
      ],
      "Properties": Object {
        "IamInstanceProfile": Object {
          "Ref": "AutoScalingGroupCloudformationlensInstanceProfile4261FC07",
        },
        "ImageId": Object {
          "Ref": "AMICloudformationlens",
        },
        "InstanceType": "t4g.nano",
        "MetadataOptions": Object {
          "HttpTokens": "required",
        },
        "SecurityGroups": Array [
          Object {
            "Fn::GetAtt": Array [
              "GuHttpsEgressSecurityGroupCloudformationlens7F9B14D7",
              "GroupId",
            ],
          },
          Object {
            "Fn::GetAtt": Array [
              "WazuhSecurityGroup",
              "GroupId",
            ],
          },
        ],
        "UserData": Object {
          "Fn::Base64": Object {
            "Fn::Join": Array [
              "",
              Array [
                "#!/bin/bash -ev
cat << EOF > /etc/systemd/system/cloudformation-lens.service
[Unit]
Description=CDK Metadata

[Service]
Environment=\\"BUCKET=",
                Object {
                  "Ref": "databucketA7E4F76C",
                },
                "\\"
ExecStart=/cloudformation-lens

[Install]
WantedBy=multi-user.target
EOF

aws s3 cp s3://",
                Object {
                  "Ref": "DistributionBucketName",
                },
                "/deploy/TEST/cloudformation-lens/cloudformation-lens /cloudformation-lens
chmod +x /cloudformation-lens
systemctl start cloudformation-lens
",
              ],
            ],
          },
        },
      },
      "Type": "AWS::AutoScaling::LaunchConfiguration",
    },
    "CertificateCloudformationlens470553BA": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "DomainName": "cloudformation-lens.gutools.co.uk",
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": "cloudformation-lens",
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/cdk-metadata",
          },
          Object {
            "Key": "Stack",
            "Value": "deploy",
          },
          Object {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "ValidationMethod": "DNS",
      },
      "Type": "AWS::CertificateManager::Certificate",
      "UpdateReplacePolicy": "Retain",
    },
    "DescribeEC2PolicyFF5F9295": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "autoscaling:DescribeAutoScalingInstances",
                "autoscaling:DescribeAutoScalingGroups",
                "ec2:DescribeTags",
                "ec2:DescribeInstances",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "describe-ec2-policy",
        "Roles": Array [
          Object {
            "Ref": "InstanceRoleCloudformationlensBF921D31",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "GetDistributablePolicyCloudformationlens44E49028": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:GetObject",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:aws:s3:::",
                    Object {
                      "Ref": "DistributionBucketName",
                    },
                    "/deploy/TEST/cloudformation-lens/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "GetDistributablePolicyCloudformationlens44E49028",
        "Roles": Array [
          Object {
            "Ref": "InstanceRoleCloudformationlensBF921D31",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "GuHttpsEgressSecurityGroupCloudformationlens7F9B14D7": Object {
      "Properties": Object {
        "GroupDescription": "Allow all outbound HTTPS traffic",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound HTTPS traffic",
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": "cloudformation-lens",
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/cdk-metadata",
          },
          Object {
            "Key": "Stack",
            "Value": "deploy",
          },
          Object {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "VpcId": Object {
          "Ref": "VpcId",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "GuHttpsEgressSecurityGroupCloudformationlensfromCloudFormationLensLoadBalancerCloudformationlensSecurityGroup432308D38900BA6D99FC": Object {
      "Properties": Object {
        "Description": "Load balancer to target",
        "FromPort": 8900,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "GuHttpsEgressSecurityGroupCloudformationlens7F9B14D7",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "LoadBalancerCloudformationlensSecurityGroup43E2BD8C",
            "GroupId",
          ],
        },
        "ToPort": 8900,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "GuHttpsEgressSecurityGroupCloudformationlensfromCloudFormationLensRestrictedIngressSecurityGroupCloudformationlens43D1D3C98900C57F276B": Object {
      "Properties": Object {
        "Description": "Load balancer to target",
        "FromPort": 8900,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "GuHttpsEgressSecurityGroupCloudformationlens7F9B14D7",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "RestrictedIngressSecurityGroupCloudformationlens38AB35D2",
            "GroupId",
          ],
        },
        "ToPort": 8900,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "GuLogShippingPolicy981BFE5A": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "kinesis:Describe*",
                "kinesis:Put*",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:aws:kinesis:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":stream/",
                    Object {
                      "Ref": "LoggingStreamName",
                    },
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "GuLogShippingPolicy981BFE5A",
        "Roles": Array [
          Object {
            "Ref": "InstanceRoleCloudformationlensBF921D31",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "High5xxPercentageAlarmCloudformationlensDF9C5968": Object {
      "Properties": Object {
        "ActionsEnabled": true,
        "AlarmActions": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:aws:sns:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":",
                Object {
                  "Ref": "AWS::AccountId",
                },
                ":",
                Object {
                  "Ref": "AnghammaradSnsArn",
                },
              ],
            ],
          },
        ],
        "AlarmDescription": "cloudformation-lens exceeded 1% error rate",
        "AlarmName": "High 5XX error % from cloudformation-lens in TEST",
        "ComparisonOperator": "GreaterThanThreshold",
        "EvaluationPeriods": 60,
        "Metrics": Array [
          Object {
            "Expression": "100*(m1+m2)/m3",
            "Id": "expr_1",
            "Label": "% of 5XX responses served for cloudformation-lens (load balancer and instances combined)",
          },
          Object {
            "Id": "m1",
            "MetricStat": Object {
              "Metric": Object {
                "Dimensions": Array [
                  Object {
                    "Name": "LoadBalancer",
                    "Value": Object {
                      "Fn::GetAtt": Array [
                        "LoadBalancerCloudformationlens45065A19",
                        "LoadBalancerFullName",
                      ],
                    },
                  },
                ],
                "MetricName": "HTTPCode_ELB_5XX_Count",
                "Namespace": "AWS/ApplicationELB",
              },
              "Period": 60,
              "Stat": "Sum",
            },
            "ReturnData": false,
          },
          Object {
            "Id": "m2",
            "MetricStat": Object {
              "Metric": Object {
                "Dimensions": Array [
                  Object {
                    "Name": "LoadBalancer",
                    "Value": Object {
                      "Fn::GetAtt": Array [
                        "LoadBalancerCloudformationlens45065A19",
                        "LoadBalancerFullName",
                      ],
                    },
                  },
                ],
                "MetricName": "HTTPCode_Target_5XX_Count",
                "Namespace": "AWS/ApplicationELB",
              },
              "Period": 60,
              "Stat": "Sum",
            },
            "ReturnData": false,
          },
          Object {
            "Id": "m3",
            "MetricStat": Object {
              "Metric": Object {
                "Dimensions": Array [
                  Object {
                    "Name": "LoadBalancer",
                    "Value": Object {
                      "Fn::GetAtt": Array [
                        "LoadBalancerCloudformationlens45065A19",
                        "LoadBalancerFullName",
                      ],
                    },
                  },
                ],
                "MetricName": "RequestCount",
                "Namespace": "AWS/ApplicationELB",
              },
              "Period": 60,
              "Stat": "Sum",
            },
            "ReturnData": false,
          },
        ],
        "Threshold": 1,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "InstanceRoleCloudformationlensBF921D31": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "ec2.",
                      Object {
                        "Ref": "AWS::URLSuffix",
                      },
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Path": "/",
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": "cloudformation-lens",
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/cdk-metadata",
          },
          Object {
            "Key": "Stack",
            "Value": "deploy",
          },
          Object {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "InstanceRoleCloudformationlensDefaultPolicy5FCE5D0D": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": "arn:aws:iam::*:role/cloudformation-read-access",
            },
            Object {
              "Action": Array [
                "s3:PutObject",
                "s3:GetObject",
                "s3:ListBucket",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "databucketA7E4F76C",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "databucketA7E4F76C",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "InstanceRoleCloudformationlensDefaultPolicy5FCE5D0D",
        "Roles": Array [
          Object {
            "Ref": "InstanceRoleCloudformationlensBF921D31",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ListenerCloudformationlens664D2766": Object {
      "Properties": Object {
        "Certificates": Array [
          Object {
            "CertificateArn": Object {
              "Ref": "CertificateCloudformationlens470553BA",
            },
          },
        ],
        "DefaultActions": Array [
          Object {
            "TargetGroupArn": Object {
              "Ref": "TargetGroupCloudformationlensAB0868BD",
            },
            "Type": "forward",
          },
        ],
        "LoadBalancerArn": Object {
          "Ref": "LoadBalancerCloudformationlens45065A19",
        },
        "Port": 443,
        "Protocol": "HTTPS",
      },
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
    },
    "LoadBalancerCloudformationlens45065A19": Object {
      "Properties": Object {
        "LoadBalancerAttributes": Array [
          Object {
            "Key": "deletion_protection.enabled",
            "Value": "true",
          },
        ],
        "Scheme": "internet-facing",
        "SecurityGroups": Array [
          Object {
            "Fn::GetAtt": Array [
              "LoadBalancerCloudformationlensSecurityGroup43E2BD8C",
              "GroupId",
            ],
          },
          Object {
            "Fn::GetAtt": Array [
              "RestrictedIngressSecurityGroupCloudformationlens38AB35D2",
              "GroupId",
            ],
          },
        ],
        "Subnets": Object {
          "Ref": "cloudformationlensPublicSubnets",
        },
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": "cloudformation-lens",
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/cdk-metadata",
          },
          Object {
            "Key": "Stack",
            "Value": "deploy",
          },
          Object {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "Type": "application",
      },
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
    },
    "LoadBalancerCloudformationlensSecurityGroup43E2BD8C": Object {
      "Properties": Object {
        "GroupDescription": "Automatically created Security Group for ELB CloudFormationLensLoadBalancerCloudformationlens84A8B6FA",
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": "cloudformation-lens",
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/cdk-metadata",
          },
          Object {
            "Key": "Stack",
            "Value": "deploy",
          },
          Object {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "VpcId": Object {
          "Ref": "VpcId",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "LoadBalancerCloudformationlensSecurityGrouptoCloudFormationLensGuHttpsEgressSecurityGroupCloudformationlensC4327E3E890071AAF7F1": Object {
      "Properties": Object {
        "Description": "Load balancer to target",
        "DestinationSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "GuHttpsEgressSecurityGroupCloudformationlens7F9B14D7",
            "GroupId",
          ],
        },
        "FromPort": 8900,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "LoadBalancerCloudformationlensSecurityGroup43E2BD8C",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "ToPort": 8900,
      },
      "Type": "AWS::EC2::SecurityGroupEgress",
    },
    "ParameterStoreReadCloudformationlens90128DF1": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "ssm:GetParametersByPath",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:aws:ssm:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/TEST/deploy/cloudformation-lens",
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "ssm:GetParameters",
                "ssm:GetParameter",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:aws:ssm:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/TEST/deploy/cloudformation-lens/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "parameter-store-read-policy",
        "Roles": Array [
          Object {
            "Ref": "InstanceRoleCloudformationlensBF921D31",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "RestrictedIngressSecurityGroupCloudformationlens38AB35D2": Object {
      "Properties": Object {
        "GroupDescription": "Allow restricted ingress from CIDR ranges",
        "SecurityGroupIngress": Array [
          Object {
            "CidrIp": "77.91.248.0/21",
            "Description": "Allow access on port 443 from 77.91.248.0/21",
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": "cloudformation-lens",
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/cdk-metadata",
          },
          Object {
            "Key": "Stack",
            "Value": "deploy",
          },
          Object {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "VpcId": Object {
          "Ref": "VpcId",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "RestrictedIngressSecurityGroupCloudformationlenstoCloudFormationLensGuHttpsEgressSecurityGroupCloudformationlensC4327E3E8900C6A0C83F": Object {
      "Properties": Object {
        "Description": "Load balancer to target",
        "DestinationSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "GuHttpsEgressSecurityGroupCloudformationlens7F9B14D7",
            "GroupId",
          ],
        },
        "FromPort": 8900,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "RestrictedIngressSecurityGroupCloudformationlens38AB35D2",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "ToPort": 8900,
      },
      "Type": "AWS::EC2::SecurityGroupEgress",
    },
    "SSMRunCommandPolicy244E1613": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "ec2messages:AcknowledgeMessage",
                "ec2messages:DeleteMessage",
                "ec2messages:FailMessage",
                "ec2messages:GetEndpoint",
                "ec2messages:GetMessages",
                "ec2messages:SendReply",
                "ssm:UpdateInstanceInformation",
                "ssm:ListInstanceAssociations",
                "ssm:DescribeInstanceProperties",
                "ssm:DescribeDocumentParameters",
                "ssmmessages:CreateControlChannel",
                "ssmmessages:CreateDataChannel",
                "ssmmessages:OpenControlChannel",
                "ssmmessages:OpenDataChannel",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ssm-run-command-policy",
        "Roles": Array [
          Object {
            "Ref": "InstanceRoleCloudformationlensBF921D31",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "TargetGroupCloudformationlensAB0868BD": Object {
      "Properties": Object {
        "HealthCheckIntervalSeconds": 10,
        "HealthCheckPath": "/healthcheck",
        "HealthCheckProtocol": "HTTP",
        "HealthCheckTimeoutSeconds": 5,
        "HealthyThresholdCount": 5,
        "Port": 8900,
        "Protocol": "HTTP",
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": "cloudformation-lens",
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/cdk-metadata",
          },
          Object {
            "Key": "Stack",
            "Value": "deploy",
          },
          Object {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "TargetGroupAttributes": Array [
          Object {
            "Key": "deregistration_delay.timeout_seconds",
            "Value": "30",
          },
          Object {
            "Key": "stickiness.enabled",
            "Value": "false",
          },
        ],
        "TargetType": "instance",
        "UnhealthyThresholdCount": 2,
        "VpcId": Object {
          "Ref": "VpcId",
        },
      },
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
    },
    "UnhealthyInstancesAlarmCloudformationlens2BC17DBA": Object {
      "Properties": Object {
        "ActionsEnabled": true,
        "AlarmActions": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:aws:sns:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":",
                Object {
                  "Ref": "AWS::AccountId",
                },
                ":",
                Object {
                  "Ref": "AnghammaradSnsArn",
                },
              ],
            ],
          },
        ],
        "AlarmDescription": "cloudformation-lens's instances have failed healthchecks several times over the last 1 hour.
      This typically results in the AutoScaling Group cycling instances and can lead to problems with deployment,
      scaling or handling traffic spikes.

      Check cloudformation-lens's application logs or ssh onto an unhealthy instance in order to debug these problems.",
        "AlarmName": "Unhealthy instances for cloudformation-lens in TEST",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "DatapointsToAlarm": 30,
        "Dimensions": Array [
          Object {
            "Name": "LoadBalancer",
            "Value": Object {
              "Fn::Join": Array [
                "",
                Array [
                  Object {
                    "Fn::Select": Array [
                      1,
                      Object {
                        "Fn::Split": Array [
                          "/",
                          Object {
                            "Ref": "ListenerCloudformationlens664D2766",
                          },
                        ],
                      },
                    ],
                  },
                  "/",
                  Object {
                    "Fn::Select": Array [
                      2,
                      Object {
                        "Fn::Split": Array [
                          "/",
                          Object {
                            "Ref": "ListenerCloudformationlens664D2766",
                          },
                        ],
                      },
                    ],
                  },
                  "/",
                  Object {
                    "Fn::Select": Array [
                      3,
                      Object {
                        "Fn::Split": Array [
                          "/",
                          Object {
                            "Ref": "ListenerCloudformationlens664D2766",
                          },
                        ],
                      },
                    ],
                  },
                ],
              ],
            },
          },
          Object {
            "Name": "TargetGroup",
            "Value": Object {
              "Fn::GetAtt": Array [
                "TargetGroupCloudformationlensAB0868BD",
                "TargetGroupFullName",
              ],
            },
          },
        ],
        "EvaluationPeriods": 60,
        "MetricName": "UnHealthyHostCount",
        "Namespace": "AWS/ApplicationELB",
        "Period": 60,
        "Statistic": "Maximum",
        "Threshold": 1,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "WazuhSecurityGroup": Object {
      "Properties": Object {
        "GroupDescription": "Allow outbound traffic from wazuh agent to manager",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Wazuh event logging",
            "FromPort": 1514,
            "IpProtocol": "tcp",
            "ToPort": 1514,
          },
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Wazuh agent registration",
            "FromPort": 1515,
            "IpProtocol": "tcp",
            "ToPort": 1515,
          },
        ],
        "Tags": Array [
          Object {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/cdk-metadata",
          },
          Object {
            "Key": "Stack",
            "Value": "deploy",
          },
          Object {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "VpcId": Object {
          "Ref": "VpcId",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "cname": Object {
      "Properties": Object {
        "Name": "cloudformation-lens.gutools.co.uk",
        "RecordType": "CNAME",
        "ResourceRecords": Array [
          Object {
            "Fn::GetAtt": Array [
              "LoadBalancerCloudformationlens45065A19",
              "DNSName",
            ],
          },
        ],
        "Stage": "TEST",
        "TTL": 3600,
      },
      "Type": "Guardian::DNS::RecordSet",
    },
    "databucketA7E4F76C": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "LifecycleConfiguration": Object {
          "Rules": Array [
            Object {
              "ExpirationInDays": 30,
              "Status": "Enabled",
            },
          ],
        },
        "Tags": Array [
          Object {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/cdk-metadata",
          },
          Object {
            "Key": "Stack",
            "Value": "deploy",
          },
          Object {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
  },
}
`;
